

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Oct 13 05:07:57 2015

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16LF1789
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	text66,local,class=CODE,merge=1,delta=2
    85                           	psect	text67,local,class=CODE,merge=1,delta=2
    86                           	psect	text68,local,class=CODE,merge=1,delta=2
    87                           	psect	text69,local,class=CODE,merge=1,delta=2
    88                           	psect	text70,local,class=CODE,merge=1,delta=2
    89                           	psect	text71,local,class=CODE,merge=1,delta=2
    90                           	psect	text72,local,class=CODE,merge=1,delta=2
    91                           	psect	intentry,global,class=CODE,delta=2
    92                           	psect	text74,local,class=CODE,merge=1,delta=2
    93                           	psect	text75,local,class=CODE,merge=1,delta=2
    94                           	psect	text76,local,class=CODE,merge=1,delta=2
    95                           	psect	text77,local,class=CODE,merge=1,delta=2
    96                           	psect	text78,local,class=CODE,merge=1,delta=2
    97                           	psect	text79,local,class=CODE,merge=1,delta=2
    98                           	psect	text80,local,class=CODE,merge=1,delta=2
    99                           	psect	text81,local,class=CODE,merge=1,delta=2
   100                           	dabs	1,0xCA0,32
   101                           	dabs	1,0xC2C,68
   102                           	dabs	1,0xC20,12
   103                           	dabs	1,0xBA0,80
   104                           	dabs	1,0xB4C,36
   105                           	dabs	1,0xB20,44
   106                           	dabs	1,0xAB8,56
   107                           	dabs	1,0x270C,0,_circ_buf
   108                           	dabs	1,0x278C,0,_line_buf
   109                           	dabs	1,0x26A8,0,_line
   110                           	dabs	1,0x7E,2
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  008C                     	;# 
   142  008D                     	;# 
   143  008E                     	;# 
   144  008F                     	;# 
   145  0090                     	;# 
   146  0091                     	;# 
   147  0092                     	;# 
   148  0093                     	;# 
   149  0094                     	;# 
   150  0095                     	;# 
   151  0096                     	;# 
   152  0097                     	;# 
   153  0098                     	;# 
   154  0099                     	;# 
   155  009A                     	;# 
   156  009B                     	;# 
   157  009B                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  0110                     	;# 
   167  0111                     	;# 
   168  0112                     	;# 
   169  0113                     	;# 
   170  0114                     	;# 
   171  0115                     	;# 
   172  0116                     	;# 
   173  0117                     	;# 
   174  0118                     	;# 
   175  0119                     	;# 
   176  011A                     	;# 
   177  011B                     	;# 
   178  011C                     	;# 
   179  011D                     	;# 
   180  011D                     	;# 
   181  011D                     	;# 
   182  011E                     	;# 
   183  011F                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186  018E                     	;# 
   187  018F                     	;# 
   188  0190                     	;# 
   189  0191                     	;# 
   190  0191                     	;# 
   191  0192                     	;# 
   192  0193                     	;# 
   193  0193                     	;# 
   194  0193                     	;# 
   195  0194                     	;# 
   196  0195                     	;# 
   197  0196                     	;# 
   198  0199                     	;# 
   199  0199                     	;# 
   200  0199                     	;# 
   201  019A                     	;# 
   202  019A                     	;# 
   203  019A                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019B                     	;# 
   207  019B                     	;# 
   208  019B                     	;# 
   209  019C                     	;# 
   210  019C                     	;# 
   211  019C                     	;# 
   212  019D                     	;# 
   213  019D                     	;# 
   214  019D                     	;# 
   215  019E                     	;# 
   216  019E                     	;# 
   217  019E                     	;# 
   218  019F                     	;# 
   219  019F                     	;# 
   220  019F                     	;# 
   221  019F                     	;# 
   222  019F                     	;# 
   223  020C                     	;# 
   224  020D                     	;# 
   225  020E                     	;# 
   226  020F                     	;# 
   227  0210                     	;# 
   228  0211                     	;# 
   229  0211                     	;# 
   230  0212                     	;# 
   231  0212                     	;# 
   232  0213                     	;# 
   233  0213                     	;# 
   234  0214                     	;# 
   235  0214                     	;# 
   236  0215                     	;# 
   237  0215                     	;# 
   238  0215                     	;# 
   239  0215                     	;# 
   240  0216                     	;# 
   241  0216                     	;# 
   242  0217                     	;# 
   243  0217                     	;# 
   244  028C                     	;# 
   245  028D                     	;# 
   246  028E                     	;# 
   247  028F                     	;# 
   248  0290                     	;# 
   249  0291                     	;# 
   250  0291                     	;# 
   251  0292                     	;# 
   252  0293                     	;# 
   253  0298                     	;# 
   254  0298                     	;# 
   255  0299                     	;# 
   256  029A                     	;# 
   257  030C                     	;# 
   258  030D                     	;# 
   259  030E                     	;# 
   260  030F                     	;# 
   261  0310                     	;# 
   262  0311                     	;# 
   263  0311                     	;# 
   264  0312                     	;# 
   265  0313                     	;# 
   266  038C                     	;# 
   267  038D                     	;# 
   268  038E                     	;# 
   269  038F                     	;# 
   270  0390                     	;# 
   271  0391                     	;# 
   272  0392                     	;# 
   273  0393                     	;# 
   274  0394                     	;# 
   275  0395                     	;# 
   276  0396                     	;# 
   277  0397                     	;# 
   278  0398                     	;# 
   279  0399                     	;# 
   280  039D                     	;# 
   281  039E                     	;# 
   282  039F                     	;# 
   283  0511                     	;# 
   284  0513                     	;# 
   285  0515                     	;# 
   286  051A                     	;# 
   287  0591                     	;# 
   288  0592                     	;# 
   289  0592                     	;# 
   290  0593                     	;# 
   291  0594                     	;# 
   292  0594                     	;# 
   293  0595                     	;# 
   294  0596                     	;# 
   295  0596                     	;# 
   296  0E91                     	;# 
   297  0E92                     	;# 
   298  0E93                     	;# 
   299  0E94                     	;# 
   300  0E95                     	;# 
   301  0E96                     	;# 
   302  0E97                     	;# 
   303  0E98                     	;# 
   304  0E99                     	;# 
   305  0E9A                     	;# 
   306  0E9B                     	;# 
   307  0E9C                     	;# 
   308  0E9D                     	;# 
   309  0E9E                     	;# 
   310  0E9F                     	;# 
   311  0EA0                     	;# 
   312  0EA1                     	;# 
   313  0EA1                     	;# 
   314  0EA2                     	;# 
   315  0EA3                     	;# 
   316  0EA3                     	;# 
   317  0EA4                     	;# 
   318  0EA5                     	;# 
   319  0EA5                     	;# 
   320  0EA6                     	;# 
   321  0EA7                     	;# 
   322  0EA7                     	;# 
   323  0EA8                     	;# 
   324  0EA9                     	;# 
   325  0EAA                     	;# 
   326  0EAB                     	;# 
   327  0EAC                     	;# 
   328  0EAD                     	;# 
   329  0EAE                     	;# 
   330  0EAF                     	;# 
   331  0EB1                     	;# 
   332  0EB2                     	;# 
   333  0EB3                     	;# 
   334  0EB4                     	;# 
   335  0EB5                     	;# 
   336  0EB6                     	;# 
   337  0EB7                     	;# 
   338  0EB8                     	;# 
   339  0EB9                     	;# 
   340  0EBA                     	;# 
   341  0EBB                     	;# 
   342  0EBC                     	;# 
   343  0EBD                     	;# 
   344  0EBE                     	;# 
   345  0EBF                     	;# 
   346  0EC0                     	;# 
   347  0EC1                     	;# 
   348  0EC1                     	;# 
   349  0EC2                     	;# 
   350  0EC3                     	;# 
   351  0EC3                     	;# 
   352  0EC4                     	;# 
   353  0EC5                     	;# 
   354  0EC5                     	;# 
   355  0EC6                     	;# 
   356  0EC7                     	;# 
   357  0EC7                     	;# 
   358  0EC8                     	;# 
   359  0EC9                     	;# 
   360  0ECA                     	;# 
   361  0ECB                     	;# 
   362  0ECC                     	;# 
   363  0ECD                     	;# 
   364  0ECE                     	;# 
   365  0ECF                     	;# 
   366  0ED1                     	;# 
   367  0ED2                     	;# 
   368  0ED3                     	;# 
   369  0ED4                     	;# 
   370  0ED5                     	;# 
   371  0ED6                     	;# 
   372  0ED7                     	;# 
   373  0ED8                     	;# 
   374  0ED9                     	;# 
   375  0EDA                     	;# 
   376  0EDB                     	;# 
   377  0EDC                     	;# 
   378  0EDD                     	;# 
   379  0EDE                     	;# 
   380  0EDF                     	;# 
   381  0EE0                     	;# 
   382  0EE1                     	;# 
   383  0EE1                     	;# 
   384  0EE2                     	;# 
   385  0EE3                     	;# 
   386  0EE3                     	;# 
   387  0EE4                     	;# 
   388  0EE5                     	;# 
   389  0EE5                     	;# 
   390  0EE6                     	;# 
   391  0EE7                     	;# 
   392  0EE7                     	;# 
   393  0EE8                     	;# 
   394  0EE9                     	;# 
   395  0EEA                     	;# 
   396  0EEB                     	;# 
   397  0EEC                     	;# 
   398  0EED                     	;# 
   399  0EEE                     	;# 
   400  0EEF                     	;# 
   401  0F11                     	;# 
   402  0F12                     	;# 
   403  0F13                     	;# 
   404  0F14                     	;# 
   405  0F15                     	;# 
   406  0F16                     	;# 
   407  0F17                     	;# 
   408  0F18                     	;# 
   409  0F19                     	;# 
   410  0F1A                     	;# 
   411  0F1B                     	;# 
   412  0F1C                     	;# 
   413  0F1D                     	;# 
   414  0F1E                     	;# 
   415  0F1F                     	;# 
   416  0F20                     	;# 
   417  0F21                     	;# 
   418  0F21                     	;# 
   419  0F22                     	;# 
   420  0F23                     	;# 
   421  0F23                     	;# 
   422  0F24                     	;# 
   423  0F25                     	;# 
   424  0F25                     	;# 
   425  0F26                     	;# 
   426  0F27                     	;# 
   427  0F27                     	;# 
   428  0F28                     	;# 
   429  0F29                     	;# 
   430  0F2A                     	;# 
   431  0F2B                     	;# 
   432  0F2C                     	;# 
   433  0F2D                     	;# 
   434  0F2E                     	;# 
   435  0F2F                     	;# 
   436  0FE4                     	;# 
   437  0FE5                     	;# 
   438  0FE6                     	;# 
   439  0FE7                     	;# 
   440  0FE8                     	;# 
   441  0FE9                     	;# 
   442  0FEA                     	;# 
   443  0FEB                     	;# 
   444  0FED                     	;# 
   445  0FEE                     	;# 
   446  0FEF                     	;# 
   447  0000                     	;# 
   448  0001                     	;# 
   449  0002                     	;# 
   450  0003                     	;# 
   451  0004                     	;# 
   452  0005                     	;# 
   453  0006                     	;# 
   454  0007                     	;# 
   455  0008                     	;# 
   456  0009                     	;# 
   457  000A                     	;# 
   458  000B                     	;# 
   459  000C                     	;# 
   460  000D                     	;# 
   461  000E                     	;# 
   462  000F                     	;# 
   463  0010                     	;# 
   464  0011                     	;# 
   465  0012                     	;# 
   466  0013                     	;# 
   467  0014                     	;# 
   468  0015                     	;# 
   469  0016                     	;# 
   470  0016                     	;# 
   471  0017                     	;# 
   472  0018                     	;# 
   473  0019                     	;# 
   474  001A                     	;# 
   475  001B                     	;# 
   476  001C                     	;# 
   477  008C                     	;# 
   478  008D                     	;# 
   479  008E                     	;# 
   480  008F                     	;# 
   481  0090                     	;# 
   482  0091                     	;# 
   483  0092                     	;# 
   484  0093                     	;# 
   485  0094                     	;# 
   486  0095                     	;# 
   487  0096                     	;# 
   488  0097                     	;# 
   489  0098                     	;# 
   490  0099                     	;# 
   491  009A                     	;# 
   492  009B                     	;# 
   493  009B                     	;# 
   494  009C                     	;# 
   495  009D                     	;# 
   496  009E                     	;# 
   497  009F                     	;# 
   498  010C                     	;# 
   499  010D                     	;# 
   500  010E                     	;# 
   501  010F                     	;# 
   502  0110                     	;# 
   503  0111                     	;# 
   504  0112                     	;# 
   505  0113                     	;# 
   506  0114                     	;# 
   507  0115                     	;# 
   508  0116                     	;# 
   509  0117                     	;# 
   510  0118                     	;# 
   511  0119                     	;# 
   512  011A                     	;# 
   513  011B                     	;# 
   514  011C                     	;# 
   515  011D                     	;# 
   516  011D                     	;# 
   517  011D                     	;# 
   518  011E                     	;# 
   519  011F                     	;# 
   520  018C                     	;# 
   521  018D                     	;# 
   522  018E                     	;# 
   523  018F                     	;# 
   524  0190                     	;# 
   525  0191                     	;# 
   526  0191                     	;# 
   527  0192                     	;# 
   528  0193                     	;# 
   529  0193                     	;# 
   530  0193                     	;# 
   531  0194                     	;# 
   532  0195                     	;# 
   533  0196                     	;# 
   534  0199                     	;# 
   535  0199                     	;# 
   536  0199                     	;# 
   537  019A                     	;# 
   538  019A                     	;# 
   539  019A                     	;# 
   540  019B                     	;# 
   541  019B                     	;# 
   542  019B                     	;# 
   543  019B                     	;# 
   544  019B                     	;# 
   545  019C                     	;# 
   546  019C                     	;# 
   547  019C                     	;# 
   548  019D                     	;# 
   549  019D                     	;# 
   550  019D                     	;# 
   551  019E                     	;# 
   552  019E                     	;# 
   553  019E                     	;# 
   554  019F                     	;# 
   555  019F                     	;# 
   556  019F                     	;# 
   557  019F                     	;# 
   558  019F                     	;# 
   559  020C                     	;# 
   560  020D                     	;# 
   561  020E                     	;# 
   562  020F                     	;# 
   563  0210                     	;# 
   564  0211                     	;# 
   565  0211                     	;# 
   566  0212                     	;# 
   567  0212                     	;# 
   568  0213                     	;# 
   569  0213                     	;# 
   570  0214                     	;# 
   571  0214                     	;# 
   572  0215                     	;# 
   573  0215                     	;# 
   574  0215                     	;# 
   575  0215                     	;# 
   576  0216                     	;# 
   577  0216                     	;# 
   578  0217                     	;# 
   579  0217                     	;# 
   580  028C                     	;# 
   581  028D                     	;# 
   582  028E                     	;# 
   583  028F                     	;# 
   584  0290                     	;# 
   585  0291                     	;# 
   586  0291                     	;# 
   587  0292                     	;# 
   588  0293                     	;# 
   589  0298                     	;# 
   590  0298                     	;# 
   591  0299                     	;# 
   592  029A                     	;# 
   593  030C                     	;# 
   594  030D                     	;# 
   595  030E                     	;# 
   596  030F                     	;# 
   597  0310                     	;# 
   598  0311                     	;# 
   599  0311                     	;# 
   600  0312                     	;# 
   601  0313                     	;# 
   602  038C                     	;# 
   603  038D                     	;# 
   604  038E                     	;# 
   605  038F                     	;# 
   606  0390                     	;# 
   607  0391                     	;# 
   608  0392                     	;# 
   609  0393                     	;# 
   610  0394                     	;# 
   611  0395                     	;# 
   612  0396                     	;# 
   613  0397                     	;# 
   614  0398                     	;# 
   615  0399                     	;# 
   616  039D                     	;# 
   617  039E                     	;# 
   618  039F                     	;# 
   619  0511                     	;# 
   620  0513                     	;# 
   621  0515                     	;# 
   622  051A                     	;# 
   623  0591                     	;# 
   624  0592                     	;# 
   625  0592                     	;# 
   626  0593                     	;# 
   627  0594                     	;# 
   628  0594                     	;# 
   629  0595                     	;# 
   630  0596                     	;# 
   631  0596                     	;# 
   632  0E91                     	;# 
   633  0E92                     	;# 
   634  0E93                     	;# 
   635  0E94                     	;# 
   636  0E95                     	;# 
   637  0E96                     	;# 
   638  0E97                     	;# 
   639  0E98                     	;# 
   640  0E99                     	;# 
   641  0E9A                     	;# 
   642  0E9B                     	;# 
   643  0E9C                     	;# 
   644  0E9D                     	;# 
   645  0E9E                     	;# 
   646  0E9F                     	;# 
   647  0EA0                     	;# 
   648  0EA1                     	;# 
   649  0EA1                     	;# 
   650  0EA2                     	;# 
   651  0EA3                     	;# 
   652  0EA3                     	;# 
   653  0EA4                     	;# 
   654  0EA5                     	;# 
   655  0EA5                     	;# 
   656  0EA6                     	;# 
   657  0EA7                     	;# 
   658  0EA7                     	;# 
   659  0EA8                     	;# 
   660  0EA9                     	;# 
   661  0EAA                     	;# 
   662  0EAB                     	;# 
   663  0EAC                     	;# 
   664  0EAD                     	;# 
   665  0EAE                     	;# 
   666  0EAF                     	;# 
   667  0EB1                     	;# 
   668  0EB2                     	;# 
   669  0EB3                     	;# 
   670  0EB4                     	;# 
   671  0EB5                     	;# 
   672  0EB6                     	;# 
   673  0EB7                     	;# 
   674  0EB8                     	;# 
   675  0EB9                     	;# 
   676  0EBA                     	;# 
   677  0EBB                     	;# 
   678  0EBC                     	;# 
   679  0EBD                     	;# 
   680  0EBE                     	;# 
   681  0EBF                     	;# 
   682  0EC0                     	;# 
   683  0EC1                     	;# 
   684  0EC1                     	;# 
   685  0EC2                     	;# 
   686  0EC3                     	;# 
   687  0EC3                     	;# 
   688  0EC4                     	;# 
   689  0EC5                     	;# 
   690  0EC5                     	;# 
   691  0EC6                     	;# 
   692  0EC7                     	;# 
   693  0EC7                     	;# 
   694  0EC8                     	;# 
   695  0EC9                     	;# 
   696  0ECA                     	;# 
   697  0ECB                     	;# 
   698  0ECC                     	;# 
   699  0ECD                     	;# 
   700  0ECE                     	;# 
   701  0ECF                     	;# 
   702  0ED1                     	;# 
   703  0ED2                     	;# 
   704  0ED3                     	;# 
   705  0ED4                     	;# 
   706  0ED5                     	;# 
   707  0ED6                     	;# 
   708  0ED7                     	;# 
   709  0ED8                     	;# 
   710  0ED9                     	;# 
   711  0EDA                     	;# 
   712  0EDB                     	;# 
   713  0EDC                     	;# 
   714  0EDD                     	;# 
   715  0EDE                     	;# 
   716  0EDF                     	;# 
   717  0EE0                     	;# 
   718  0EE1                     	;# 
   719  0EE1                     	;# 
   720  0EE2                     	;# 
   721  0EE3                     	;# 
   722  0EE3                     	;# 
   723  0EE4                     	;# 
   724  0EE5                     	;# 
   725  0EE5                     	;# 
   726  0EE6                     	;# 
   727  0EE7                     	;# 
   728  0EE7                     	;# 
   729  0EE8                     	;# 
   730  0EE9                     	;# 
   731  0EEA                     	;# 
   732  0EEB                     	;# 
   733  0EEC                     	;# 
   734  0EED                     	;# 
   735  0EEE                     	;# 
   736  0EEF                     	;# 
   737  0F11                     	;# 
   738  0F12                     	;# 
   739  0F13                     	;# 
   740  0F14                     	;# 
   741  0F15                     	;# 
   742  0F16                     	;# 
   743  0F17                     	;# 
   744  0F18                     	;# 
   745  0F19                     	;# 
   746  0F1A                     	;# 
   747  0F1B                     	;# 
   748  0F1C                     	;# 
   749  0F1D                     	;# 
   750  0F1E                     	;# 
   751  0F1F                     	;# 
   752  0F20                     	;# 
   753  0F21                     	;# 
   754  0F21                     	;# 
   755  0F22                     	;# 
   756  0F23                     	;# 
   757  0F23                     	;# 
   758  0F24                     	;# 
   759  0F25                     	;# 
   760  0F25                     	;# 
   761  0F26                     	;# 
   762  0F27                     	;# 
   763  0F27                     	;# 
   764  0F28                     	;# 
   765  0F29                     	;# 
   766  0F2A                     	;# 
   767  0F2B                     	;# 
   768  0F2C                     	;# 
   769  0F2D                     	;# 
   770  0F2E                     	;# 
   771  0F2F                     	;# 
   772  0FE4                     	;# 
   773  0FE5                     	;# 
   774  0FE6                     	;# 
   775  0FE7                     	;# 
   776  0FE8                     	;# 
   777  0FE9                     	;# 
   778  0FEA                     	;# 
   779  0FEB                     	;# 
   780  0FED                     	;# 
   781  0FEE                     	;# 
   782  0FEF                     	;# 
   783  0000                     	;# 
   784  0001                     	;# 
   785  0002                     	;# 
   786  0003                     	;# 
   787  0004                     	;# 
   788  0005                     	;# 
   789  0006                     	;# 
   790  0007                     	;# 
   791  0008                     	;# 
   792  0009                     	;# 
   793  000A                     	;# 
   794  000B                     	;# 
   795  000C                     	;# 
   796  000D                     	;# 
   797  000E                     	;# 
   798  000F                     	;# 
   799  0010                     	;# 
   800  0011                     	;# 
   801  0012                     	;# 
   802  0013                     	;# 
   803  0014                     	;# 
   804  0015                     	;# 
   805  0016                     	;# 
   806  0016                     	;# 
   807  0017                     	;# 
   808  0018                     	;# 
   809  0019                     	;# 
   810  001A                     	;# 
   811  001B                     	;# 
   812  001C                     	;# 
   813  008C                     	;# 
   814  008D                     	;# 
   815  008E                     	;# 
   816  008F                     	;# 
   817  0090                     	;# 
   818  0091                     	;# 
   819  0092                     	;# 
   820  0093                     	;# 
   821  0094                     	;# 
   822  0095                     	;# 
   823  0096                     	;# 
   824  0097                     	;# 
   825  0098                     	;# 
   826  0099                     	;# 
   827  009A                     	;# 
   828  009B                     	;# 
   829  009B                     	;# 
   830  009C                     	;# 
   831  009D                     	;# 
   832  009E                     	;# 
   833  009F                     	;# 
   834  010C                     	;# 
   835  010D                     	;# 
   836  010E                     	;# 
   837  010F                     	;# 
   838  0110                     	;# 
   839  0111                     	;# 
   840  0112                     	;# 
   841  0113                     	;# 
   842  0114                     	;# 
   843  0115                     	;# 
   844  0116                     	;# 
   845  0117                     	;# 
   846  0118                     	;# 
   847  0119                     	;# 
   848  011A                     	;# 
   849  011B                     	;# 
   850  011C                     	;# 
   851  011D                     	;# 
   852  011D                     	;# 
   853  011D                     	;# 
   854  011E                     	;# 
   855  011F                     	;# 
   856  018C                     	;# 
   857  018D                     	;# 
   858  018E                     	;# 
   859  018F                     	;# 
   860  0190                     	;# 
   861  0191                     	;# 
   862  0191                     	;# 
   863  0192                     	;# 
   864  0193                     	;# 
   865  0193                     	;# 
   866  0193                     	;# 
   867  0194                     	;# 
   868  0195                     	;# 
   869  0196                     	;# 
   870  0199                     	;# 
   871  0199                     	;# 
   872  0199                     	;# 
   873  019A                     	;# 
   874  019A                     	;# 
   875  019A                     	;# 
   876  019B                     	;# 
   877  019B                     	;# 
   878  019B                     	;# 
   879  019B                     	;# 
   880  019B                     	;# 
   881  019C                     	;# 
   882  019C                     	;# 
   883  019C                     	;# 
   884  019D                     	;# 
   885  019D                     	;# 
   886  019D                     	;# 
   887  019E                     	;# 
   888  019E                     	;# 
   889  019E                     	;# 
   890  019F                     	;# 
   891  019F                     	;# 
   892  019F                     	;# 
   893  019F                     	;# 
   894  019F                     	;# 
   895  020C                     	;# 
   896  020D                     	;# 
   897  020E                     	;# 
   898  020F                     	;# 
   899  0210                     	;# 
   900  0211                     	;# 
   901  0211                     	;# 
   902  0212                     	;# 
   903  0212                     	;# 
   904  0213                     	;# 
   905  0213                     	;# 
   906  0214                     	;# 
   907  0214                     	;# 
   908  0215                     	;# 
   909  0215                     	;# 
   910  0215                     	;# 
   911  0215                     	;# 
   912  0216                     	;# 
   913  0216                     	;# 
   914  0217                     	;# 
   915  0217                     	;# 
   916  028C                     	;# 
   917  028D                     	;# 
   918  028E                     	;# 
   919  028F                     	;# 
   920  0290                     	;# 
   921  0291                     	;# 
   922  0291                     	;# 
   923  0292                     	;# 
   924  0293                     	;# 
   925  0298                     	;# 
   926  0298                     	;# 
   927  0299                     	;# 
   928  029A                     	;# 
   929  030C                     	;# 
   930  030D                     	;# 
   931  030E                     	;# 
   932  030F                     	;# 
   933  0310                     	;# 
   934  0311                     	;# 
   935  0311                     	;# 
   936  0312                     	;# 
   937  0313                     	;# 
   938  038C                     	;# 
   939  038D                     	;# 
   940  038E                     	;# 
   941  038F                     	;# 
   942  0390                     	;# 
   943  0391                     	;# 
   944  0392                     	;# 
   945  0393                     	;# 
   946  0394                     	;# 
   947  0395                     	;# 
   948  0396                     	;# 
   949  0397                     	;# 
   950  0398                     	;# 
   951  0399                     	;# 
   952  039D                     	;# 
   953  039E                     	;# 
   954  039F                     	;# 
   955  0511                     	;# 
   956  0513                     	;# 
   957  0515                     	;# 
   958  051A                     	;# 
   959  0591                     	;# 
   960  0592                     	;# 
   961  0592                     	;# 
   962  0593                     	;# 
   963  0594                     	;# 
   964  0594                     	;# 
   965  0595                     	;# 
   966  0596                     	;# 
   967  0596                     	;# 
   968  0E91                     	;# 
   969  0E92                     	;# 
   970  0E93                     	;# 
   971  0E94                     	;# 
   972  0E95                     	;# 
   973  0E96                     	;# 
   974  0E97                     	;# 
   975  0E98                     	;# 
   976  0E99                     	;# 
   977  0E9A                     	;# 
   978  0E9B                     	;# 
   979  0E9C                     	;# 
   980  0E9D                     	;# 
   981  0E9E                     	;# 
   982  0E9F                     	;# 
   983  0EA0                     	;# 
   984  0EA1                     	;# 
   985  0EA1                     	;# 
   986  0EA2                     	;# 
   987  0EA3                     	;# 
   988  0EA3                     	;# 
   989  0EA4                     	;# 
   990  0EA5                     	;# 
   991  0EA5                     	;# 
   992  0EA6                     	;# 
   993  0EA7                     	;# 
   994  0EA7                     	;# 
   995  0EA8                     	;# 
   996  0EA9                     	;# 
   997  0EAA                     	;# 
   998  0EAB                     	;# 
   999  0EAC                     	;# 
  1000  0EAD                     	;# 
  1001  0EAE                     	;# 
  1002  0EAF                     	;# 
  1003  0EB1                     	;# 
  1004  0EB2                     	;# 
  1005  0EB3                     	;# 
  1006  0EB4                     	;# 
  1007  0EB5                     	;# 
  1008  0EB6                     	;# 
  1009  0EB7                     	;# 
  1010  0EB8                     	;# 
  1011  0EB9                     	;# 
  1012  0EBA                     	;# 
  1013  0EBB                     	;# 
  1014  0EBC                     	;# 
  1015  0EBD                     	;# 
  1016  0EBE                     	;# 
  1017  0EBF                     	;# 
  1018  0EC0                     	;# 
  1019  0EC1                     	;# 
  1020  0EC1                     	;# 
  1021  0EC2                     	;# 
  1022  0EC3                     	;# 
  1023  0EC3                     	;# 
  1024  0EC4                     	;# 
  1025  0EC5                     	;# 
  1026  0EC5                     	;# 
  1027  0EC6                     	;# 
  1028  0EC7                     	;# 
  1029  0EC7                     	;# 
  1030  0EC8                     	;# 
  1031  0EC9                     	;# 
  1032  0ECA                     	;# 
  1033  0ECB                     	;# 
  1034  0ECC                     	;# 
  1035  0ECD                     	;# 
  1036  0ECE                     	;# 
  1037  0ECF                     	;# 
  1038  0ED1                     	;# 
  1039  0ED2                     	;# 
  1040  0ED3                     	;# 
  1041  0ED4                     	;# 
  1042  0ED5                     	;# 
  1043  0ED6                     	;# 
  1044  0ED7                     	;# 
  1045  0ED8                     	;# 
  1046  0ED9                     	;# 
  1047  0EDA                     	;# 
  1048  0EDB                     	;# 
  1049  0EDC                     	;# 
  1050  0EDD                     	;# 
  1051  0EDE                     	;# 
  1052  0EDF                     	;# 
  1053  0EE0                     	;# 
  1054  0EE1                     	;# 
  1055  0EE1                     	;# 
  1056  0EE2                     	;# 
  1057  0EE3                     	;# 
  1058  0EE3                     	;# 
  1059  0EE4                     	;# 
  1060  0EE5                     	;# 
  1061  0EE5                     	;# 
  1062  0EE6                     	;# 
  1063  0EE7                     	;# 
  1064  0EE7                     	;# 
  1065  0EE8                     	;# 
  1066  0EE9                     	;# 
  1067  0EEA                     	;# 
  1068  0EEB                     	;# 
  1069  0EEC                     	;# 
  1070  0EED                     	;# 
  1071  0EEE                     	;# 
  1072  0EEF                     	;# 
  1073  0F11                     	;# 
  1074  0F12                     	;# 
  1075  0F13                     	;# 
  1076  0F14                     	;# 
  1077  0F15                     	;# 
  1078  0F16                     	;# 
  1079  0F17                     	;# 
  1080  0F18                     	;# 
  1081  0F19                     	;# 
  1082  0F1A                     	;# 
  1083  0F1B                     	;# 
  1084  0F1C                     	;# 
  1085  0F1D                     	;# 
  1086  0F1E                     	;# 
  1087  0F1F                     	;# 
  1088  0F20                     	;# 
  1089  0F21                     	;# 
  1090  0F21                     	;# 
  1091  0F22                     	;# 
  1092  0F23                     	;# 
  1093  0F23                     	;# 
  1094  0F24                     	;# 
  1095  0F25                     	;# 
  1096  0F25                     	;# 
  1097  0F26                     	;# 
  1098  0F27                     	;# 
  1099  0F27                     	;# 
  1100  0F28                     	;# 
  1101  0F29                     	;# 
  1102  0F2A                     	;# 
  1103  0F2B                     	;# 
  1104  0F2C                     	;# 
  1105  0F2D                     	;# 
  1106  0F2E                     	;# 
  1107  0F2F                     	;# 
  1108  0FE4                     	;# 
  1109  0FE5                     	;# 
  1110  0FE6                     	;# 
  1111  0FE7                     	;# 
  1112  0FE8                     	;# 
  1113  0FE9                     	;# 
  1114  0FEA                     	;# 
  1115  0FEB                     	;# 
  1116  0FED                     	;# 
  1117  0FEE                     	;# 
  1118  0FEF                     	;# 
  1119  0000                     	;# 
  1120  0001                     	;# 
  1121  0002                     	;# 
  1122  0003                     	;# 
  1123  0004                     	;# 
  1124  0005                     	;# 
  1125  0006                     	;# 
  1126  0007                     	;# 
  1127  0008                     	;# 
  1128  0009                     	;# 
  1129  000A                     	;# 
  1130  000B                     	;# 
  1131  000C                     	;# 
  1132  000D                     	;# 
  1133  000E                     	;# 
  1134  000F                     	;# 
  1135  0010                     	;# 
  1136  0011                     	;# 
  1137  0012                     	;# 
  1138  0013                     	;# 
  1139  0014                     	;# 
  1140  0015                     	;# 
  1141  0016                     	;# 
  1142  0016                     	;# 
  1143  0017                     	;# 
  1144  0018                     	;# 
  1145  0019                     	;# 
  1146  001A                     	;# 
  1147  001B                     	;# 
  1148  001C                     	;# 
  1149  008C                     	;# 
  1150  008D                     	;# 
  1151  008E                     	;# 
  1152  008F                     	;# 
  1153  0090                     	;# 
  1154  0091                     	;# 
  1155  0092                     	;# 
  1156  0093                     	;# 
  1157  0094                     	;# 
  1158  0095                     	;# 
  1159  0096                     	;# 
  1160  0097                     	;# 
  1161  0098                     	;# 
  1162  0099                     	;# 
  1163  009A                     	;# 
  1164  009B                     	;# 
  1165  009B                     	;# 
  1166  009C                     	;# 
  1167  009D                     	;# 
  1168  009E                     	;# 
  1169  009F                     	;# 
  1170  010C                     	;# 
  1171  010D                     	;# 
  1172  010E                     	;# 
  1173  010F                     	;# 
  1174  0110                     	;# 
  1175  0111                     	;# 
  1176  0112                     	;# 
  1177  0113                     	;# 
  1178  0114                     	;# 
  1179  0115                     	;# 
  1180  0116                     	;# 
  1181  0117                     	;# 
  1182  0118                     	;# 
  1183  0119                     	;# 
  1184  011A                     	;# 
  1185  011B                     	;# 
  1186  011C                     	;# 
  1187  011D                     	;# 
  1188  011D                     	;# 
  1189  011D                     	;# 
  1190  011E                     	;# 
  1191  011F                     	;# 
  1192  018C                     	;# 
  1193  018D                     	;# 
  1194  018E                     	;# 
  1195  018F                     	;# 
  1196  0190                     	;# 
  1197  0191                     	;# 
  1198  0191                     	;# 
  1199  0192                     	;# 
  1200  0193                     	;# 
  1201  0193                     	;# 
  1202  0193                     	;# 
  1203  0194                     	;# 
  1204  0195                     	;# 
  1205  0196                     	;# 
  1206  0199                     	;# 
  1207  0199                     	;# 
  1208  0199                     	;# 
  1209  019A                     	;# 
  1210  019A                     	;# 
  1211  019A                     	;# 
  1212  019B                     	;# 
  1213  019B                     	;# 
  1214  019B                     	;# 
  1215  019B                     	;# 
  1216  019B                     	;# 
  1217  019C                     	;# 
  1218  019C                     	;# 
  1219  019C                     	;# 
  1220  019D                     	;# 
  1221  019D                     	;# 
  1222  019D                     	;# 
  1223  019E                     	;# 
  1224  019E                     	;# 
  1225  019E                     	;# 
  1226  019F                     	;# 
  1227  019F                     	;# 
  1228  019F                     	;# 
  1229  019F                     	;# 
  1230  019F                     	;# 
  1231  020C                     	;# 
  1232  020D                     	;# 
  1233  020E                     	;# 
  1234  020F                     	;# 
  1235  0210                     	;# 
  1236  0211                     	;# 
  1237  0211                     	;# 
  1238  0212                     	;# 
  1239  0212                     	;# 
  1240  0213                     	;# 
  1241  0213                     	;# 
  1242  0214                     	;# 
  1243  0214                     	;# 
  1244  0215                     	;# 
  1245  0215                     	;# 
  1246  0215                     	;# 
  1247  0215                     	;# 
  1248  0216                     	;# 
  1249  0216                     	;# 
  1250  0217                     	;# 
  1251  0217                     	;# 
  1252  028C                     	;# 
  1253  028D                     	;# 
  1254  028E                     	;# 
  1255  028F                     	;# 
  1256  0290                     	;# 
  1257  0291                     	;# 
  1258  0291                     	;# 
  1259  0292                     	;# 
  1260  0293                     	;# 
  1261  0298                     	;# 
  1262  0298                     	;# 
  1263  0299                     	;# 
  1264  029A                     	;# 
  1265  030C                     	;# 
  1266  030D                     	;# 
  1267  030E                     	;# 
  1268  030F                     	;# 
  1269  0310                     	;# 
  1270  0311                     	;# 
  1271  0311                     	;# 
  1272  0312                     	;# 
  1273  0313                     	;# 
  1274  038C                     	;# 
  1275  038D                     	;# 
  1276  038E                     	;# 
  1277  038F                     	;# 
  1278  0390                     	;# 
  1279  0391                     	;# 
  1280  0392                     	;# 
  1281  0393                     	;# 
  1282  0394                     	;# 
  1283  0395                     	;# 
  1284  0396                     	;# 
  1285  0397                     	;# 
  1286  0398                     	;# 
  1287  0399                     	;# 
  1288  039D                     	;# 
  1289  039E                     	;# 
  1290  039F                     	;# 
  1291  0511                     	;# 
  1292  0513                     	;# 
  1293  0515                     	;# 
  1294  051A                     	;# 
  1295  0591                     	;# 
  1296  0592                     	;# 
  1297  0592                     	;# 
  1298  0593                     	;# 
  1299  0594                     	;# 
  1300  0594                     	;# 
  1301  0595                     	;# 
  1302  0596                     	;# 
  1303  0596                     	;# 
  1304  0E91                     	;# 
  1305  0E92                     	;# 
  1306  0E93                     	;# 
  1307  0E94                     	;# 
  1308  0E95                     	;# 
  1309  0E96                     	;# 
  1310  0E97                     	;# 
  1311  0E98                     	;# 
  1312  0E99                     	;# 
  1313  0E9A                     	;# 
  1314  0E9B                     	;# 
  1315  0E9C                     	;# 
  1316  0E9D                     	;# 
  1317  0E9E                     	;# 
  1318  0E9F                     	;# 
  1319  0EA0                     	;# 
  1320  0EA1                     	;# 
  1321  0EA1                     	;# 
  1322  0EA2                     	;# 
  1323  0EA3                     	;# 
  1324  0EA3                     	;# 
  1325  0EA4                     	;# 
  1326  0EA5                     	;# 
  1327  0EA5                     	;# 
  1328  0EA6                     	;# 
  1329  0EA7                     	;# 
  1330  0EA7                     	;# 
  1331  0EA8                     	;# 
  1332  0EA9                     	;# 
  1333  0EAA                     	;# 
  1334  0EAB                     	;# 
  1335  0EAC                     	;# 
  1336  0EAD                     	;# 
  1337  0EAE                     	;# 
  1338  0EAF                     	;# 
  1339  0EB1                     	;# 
  1340  0EB2                     	;# 
  1341  0EB3                     	;# 
  1342  0EB4                     	;# 
  1343  0EB5                     	;# 
  1344  0EB6                     	;# 
  1345  0EB7                     	;# 
  1346  0EB8                     	;# 
  1347  0EB9                     	;# 
  1348  0EBA                     	;# 
  1349  0EBB                     	;# 
  1350  0EBC                     	;# 
  1351  0EBD                     	;# 
  1352  0EBE                     	;# 
  1353  0EBF                     	;# 
  1354  0EC0                     	;# 
  1355  0EC1                     	;# 
  1356  0EC1                     	;# 
  1357  0EC2                     	;# 
  1358  0EC3                     	;# 
  1359  0EC3                     	;# 
  1360  0EC4                     	;# 
  1361  0EC5                     	;# 
  1362  0EC5                     	;# 
  1363  0EC6                     	;# 
  1364  0EC7                     	;# 
  1365  0EC7                     	;# 
  1366  0EC8                     	;# 
  1367  0EC9                     	;# 
  1368  0ECA                     	;# 
  1369  0ECB                     	;# 
  1370  0ECC                     	;# 
  1371  0ECD                     	;# 
  1372  0ECE                     	;# 
  1373  0ECF                     	;# 
  1374  0ED1                     	;# 
  1375  0ED2                     	;# 
  1376  0ED3                     	;# 
  1377  0ED4                     	;# 
  1378  0ED5                     	;# 
  1379  0ED6                     	;# 
  1380  0ED7                     	;# 
  1381  0ED8                     	;# 
  1382  0ED9                     	;# 
  1383  0EDA                     	;# 
  1384  0EDB                     	;# 
  1385  0EDC                     	;# 
  1386  0EDD                     	;# 
  1387  0EDE                     	;# 
  1388  0EDF                     	;# 
  1389  0EE0                     	;# 
  1390  0EE1                     	;# 
  1391  0EE1                     	;# 
  1392  0EE2                     	;# 
  1393  0EE3                     	;# 
  1394  0EE3                     	;# 
  1395  0EE4                     	;# 
  1396  0EE5                     	;# 
  1397  0EE5                     	;# 
  1398  0EE6                     	;# 
  1399  0EE7                     	;# 
  1400  0EE7                     	;# 
  1401  0EE8                     	;# 
  1402  0EE9                     	;# 
  1403  0EEA                     	;# 
  1404  0EEB                     	;# 
  1405  0EEC                     	;# 
  1406  0EED                     	;# 
  1407  0EEE                     	;# 
  1408  0EEF                     	;# 
  1409  0F11                     	;# 
  1410  0F12                     	;# 
  1411  0F13                     	;# 
  1412  0F14                     	;# 
  1413  0F15                     	;# 
  1414  0F16                     	;# 
  1415  0F17                     	;# 
  1416  0F18                     	;# 
  1417  0F19                     	;# 
  1418  0F1A                     	;# 
  1419  0F1B                     	;# 
  1420  0F1C                     	;# 
  1421  0F1D                     	;# 
  1422  0F1E                     	;# 
  1423  0F1F                     	;# 
  1424  0F20                     	;# 
  1425  0F21                     	;# 
  1426  0F21                     	;# 
  1427  0F22                     	;# 
  1428  0F23                     	;# 
  1429  0F23                     	;# 
  1430  0F24                     	;# 
  1431  0F25                     	;# 
  1432  0F25                     	;# 
  1433  0F26                     	;# 
  1434  0F27                     	;# 
  1435  0F27                     	;# 
  1436  0F28                     	;# 
  1437  0F29                     	;# 
  1438  0F2A                     	;# 
  1439  0F2B                     	;# 
  1440  0F2C                     	;# 
  1441  0F2D                     	;# 
  1442  0F2E                     	;# 
  1443  0F2F                     	;# 
  1444  0FE4                     	;# 
  1445  0FE5                     	;# 
  1446  0FE6                     	;# 
  1447  0FE7                     	;# 
  1448  0FE8                     	;# 
  1449  0FE9                     	;# 
  1450  0FEA                     	;# 
  1451  0FEB                     	;# 
  1452  0FED                     	;# 
  1453  0FEE                     	;# 
  1454  0FEF                     	;# 
  1455  0000                     	;# 
  1456  0001                     	;# 
  1457  0002                     	;# 
  1458  0003                     	;# 
  1459  0004                     	;# 
  1460  0005                     	;# 
  1461  0006                     	;# 
  1462  0007                     	;# 
  1463  0008                     	;# 
  1464  0009                     	;# 
  1465  000A                     	;# 
  1466  000B                     	;# 
  1467  000C                     	;# 
  1468  000D                     	;# 
  1469  000E                     	;# 
  1470  000F                     	;# 
  1471  0010                     	;# 
  1472  0011                     	;# 
  1473  0012                     	;# 
  1474  0013                     	;# 
  1475  0014                     	;# 
  1476  0015                     	;# 
  1477  0016                     	;# 
  1478  0016                     	;# 
  1479  0017                     	;# 
  1480  0018                     	;# 
  1481  0019                     	;# 
  1482  001A                     	;# 
  1483  001B                     	;# 
  1484  001C                     	;# 
  1485  008C                     	;# 
  1486  008D                     	;# 
  1487  008E                     	;# 
  1488  008F                     	;# 
  1489  0090                     	;# 
  1490  0091                     	;# 
  1491  0092                     	;# 
  1492  0093                     	;# 
  1493  0094                     	;# 
  1494  0095                     	;# 
  1495  0096                     	;# 
  1496  0097                     	;# 
  1497  0098                     	;# 
  1498  0099                     	;# 
  1499  009A                     	;# 
  1500  009B                     	;# 
  1501  009B                     	;# 
  1502  009C                     	;# 
  1503  009D                     	;# 
  1504  009E                     	;# 
  1505  009F                     	;# 
  1506  010C                     	;# 
  1507  010D                     	;# 
  1508  010E                     	;# 
  1509  010F                     	;# 
  1510  0110                     	;# 
  1511  0111                     	;# 
  1512  0112                     	;# 
  1513  0113                     	;# 
  1514  0114                     	;# 
  1515  0115                     	;# 
  1516  0116                     	;# 
  1517  0117                     	;# 
  1518  0118                     	;# 
  1519  0119                     	;# 
  1520  011A                     	;# 
  1521  011B                     	;# 
  1522  011C                     	;# 
  1523  011D                     	;# 
  1524  011D                     	;# 
  1525  011D                     	;# 
  1526  011E                     	;# 
  1527  011F                     	;# 
  1528  018C                     	;# 
  1529  018D                     	;# 
  1530  018E                     	;# 
  1531  018F                     	;# 
  1532  0190                     	;# 
  1533  0191                     	;# 
  1534  0191                     	;# 
  1535  0192                     	;# 
  1536  0193                     	;# 
  1537  0193                     	;# 
  1538  0193                     	;# 
  1539  0194                     	;# 
  1540  0195                     	;# 
  1541  0196                     	;# 
  1542  0199                     	;# 
  1543  0199                     	;# 
  1544  0199                     	;# 
  1545  019A                     	;# 
  1546  019A                     	;# 
  1547  019A                     	;# 
  1548  019B                     	;# 
  1549  019B                     	;# 
  1550  019B                     	;# 
  1551  019B                     	;# 
  1552  019B                     	;# 
  1553  019C                     	;# 
  1554  019C                     	;# 
  1555  019C                     	;# 
  1556  019D                     	;# 
  1557  019D                     	;# 
  1558  019D                     	;# 
  1559  019E                     	;# 
  1560  019E                     	;# 
  1561  019E                     	;# 
  1562  019F                     	;# 
  1563  019F                     	;# 
  1564  019F                     	;# 
  1565  019F                     	;# 
  1566  019F                     	;# 
  1567  020C                     	;# 
  1568  020D                     	;# 
  1569  020E                     	;# 
  1570  020F                     	;# 
  1571  0210                     	;# 
  1572  0211                     	;# 
  1573  0211                     	;# 
  1574  0212                     	;# 
  1575  0212                     	;# 
  1576  0213                     	;# 
  1577  0213                     	;# 
  1578  0214                     	;# 
  1579  0214                     	;# 
  1580  0215                     	;# 
  1581  0215                     	;# 
  1582  0215                     	;# 
  1583  0215                     	;# 
  1584  0216                     	;# 
  1585  0216                     	;# 
  1586  0217                     	;# 
  1587  0217                     	;# 
  1588  028C                     	;# 
  1589  028D                     	;# 
  1590  028E                     	;# 
  1591  028F                     	;# 
  1592  0290                     	;# 
  1593  0291                     	;# 
  1594  0291                     	;# 
  1595  0292                     	;# 
  1596  0293                     	;# 
  1597  0298                     	;# 
  1598  0298                     	;# 
  1599  0299                     	;# 
  1600  029A                     	;# 
  1601  030C                     	;# 
  1602  030D                     	;# 
  1603  030E                     	;# 
  1604  030F                     	;# 
  1605  0310                     	;# 
  1606  0311                     	;# 
  1607  0311                     	;# 
  1608  0312                     	;# 
  1609  0313                     	;# 
  1610  038C                     	;# 
  1611  038D                     	;# 
  1612  038E                     	;# 
  1613  038F                     	;# 
  1614  0390                     	;# 
  1615  0391                     	;# 
  1616  0392                     	;# 
  1617  0393                     	;# 
  1618  0394                     	;# 
  1619  0395                     	;# 
  1620  0396                     	;# 
  1621  0397                     	;# 
  1622  0398                     	;# 
  1623  0399                     	;# 
  1624  039D                     	;# 
  1625  039E                     	;# 
  1626  039F                     	;# 
  1627  0511                     	;# 
  1628  0513                     	;# 
  1629  0515                     	;# 
  1630  051A                     	;# 
  1631  0591                     	;# 
  1632  0592                     	;# 
  1633  0592                     	;# 
  1634  0593                     	;# 
  1635  0594                     	;# 
  1636  0594                     	;# 
  1637  0595                     	;# 
  1638  0596                     	;# 
  1639  0596                     	;# 
  1640  0E91                     	;# 
  1641  0E92                     	;# 
  1642  0E93                     	;# 
  1643  0E94                     	;# 
  1644  0E95                     	;# 
  1645  0E96                     	;# 
  1646  0E97                     	;# 
  1647  0E98                     	;# 
  1648  0E99                     	;# 
  1649  0E9A                     	;# 
  1650  0E9B                     	;# 
  1651  0E9C                     	;# 
  1652  0E9D                     	;# 
  1653  0E9E                     	;# 
  1654  0E9F                     	;# 
  1655  0EA0                     	;# 
  1656  0EA1                     	;# 
  1657  0EA1                     	;# 
  1658  0EA2                     	;# 
  1659  0EA3                     	;# 
  1660  0EA3                     	;# 
  1661  0EA4                     	;# 
  1662  0EA5                     	;# 
  1663  0EA5                     	;# 
  1664  0EA6                     	;# 
  1665  0EA7                     	;# 
  1666  0EA7                     	;# 
  1667  0EA8                     	;# 
  1668  0EA9                     	;# 
  1669  0EAA                     	;# 
  1670  0EAB                     	;# 
  1671  0EAC                     	;# 
  1672  0EAD                     	;# 
  1673  0EAE                     	;# 
  1674  0EAF                     	;# 
  1675  0EB1                     	;# 
  1676  0EB2                     	;# 
  1677  0EB3                     	;# 
  1678  0EB4                     	;# 
  1679  0EB5                     	;# 
  1680  0EB6                     	;# 
  1681  0EB7                     	;# 
  1682  0EB8                     	;# 
  1683  0EB9                     	;# 
  1684  0EBA                     	;# 
  1685  0EBB                     	;# 
  1686  0EBC                     	;# 
  1687  0EBD                     	;# 
  1688  0EBE                     	;# 
  1689  0EBF                     	;# 
  1690  0EC0                     	;# 
  1691  0EC1                     	;# 
  1692  0EC1                     	;# 
  1693  0EC2                     	;# 
  1694  0EC3                     	;# 
  1695  0EC3                     	;# 
  1696  0EC4                     	;# 
  1697  0EC5                     	;# 
  1698  0EC5                     	;# 
  1699  0EC6                     	;# 
  1700  0EC7                     	;# 
  1701  0EC7                     	;# 
  1702  0EC8                     	;# 
  1703  0EC9                     	;# 
  1704  0ECA                     	;# 
  1705  0ECB                     	;# 
  1706  0ECC                     	;# 
  1707  0ECD                     	;# 
  1708  0ECE                     	;# 
  1709  0ECF                     	;# 
  1710  0ED1                     	;# 
  1711  0ED2                     	;# 
  1712  0ED3                     	;# 
  1713  0ED4                     	;# 
  1714  0ED5                     	;# 
  1715  0ED6                     	;# 
  1716  0ED7                     	;# 
  1717  0ED8                     	;# 
  1718  0ED9                     	;# 
  1719  0EDA                     	;# 
  1720  0EDB                     	;# 
  1721  0EDC                     	;# 
  1722  0EDD                     	;# 
  1723  0EDE                     	;# 
  1724  0EDF                     	;# 
  1725  0EE0                     	;# 
  1726  0EE1                     	;# 
  1727  0EE1                     	;# 
  1728  0EE2                     	;# 
  1729  0EE3                     	;# 
  1730  0EE3                     	;# 
  1731  0EE4                     	;# 
  1732  0EE5                     	;# 
  1733  0EE5                     	;# 
  1734  0EE6                     	;# 
  1735  0EE7                     	;# 
  1736  0EE7                     	;# 
  1737  0EE8                     	;# 
  1738  0EE9                     	;# 
  1739  0EEA                     	;# 
  1740  0EEB                     	;# 
  1741  0EEC                     	;# 
  1742  0EED                     	;# 
  1743  0EEE                     	;# 
  1744  0EEF                     	;# 
  1745  0F11                     	;# 
  1746  0F12                     	;# 
  1747  0F13                     	;# 
  1748  0F14                     	;# 
  1749  0F15                     	;# 
  1750  0F16                     	;# 
  1751  0F17                     	;# 
  1752  0F18                     	;# 
  1753  0F19                     	;# 
  1754  0F1A                     	;# 
  1755  0F1B                     	;# 
  1756  0F1C                     	;# 
  1757  0F1D                     	;# 
  1758  0F1E                     	;# 
  1759  0F1F                     	;# 
  1760  0F20                     	;# 
  1761  0F21                     	;# 
  1762  0F21                     	;# 
  1763  0F22                     	;# 
  1764  0F23                     	;# 
  1765  0F23                     	;# 
  1766  0F24                     	;# 
  1767  0F25                     	;# 
  1768  0F25                     	;# 
  1769  0F26                     	;# 
  1770  0F27                     	;# 
  1771  0F27                     	;# 
  1772  0F28                     	;# 
  1773  0F29                     	;# 
  1774  0F2A                     	;# 
  1775  0F2B                     	;# 
  1776  0F2C                     	;# 
  1777  0F2D                     	;# 
  1778  0F2E                     	;# 
  1779  0F2F                     	;# 
  1780  0FE4                     	;# 
  1781  0FE5                     	;# 
  1782  0FE6                     	;# 
  1783  0FE7                     	;# 
  1784  0FE8                     	;# 
  1785  0FE9                     	;# 
  1786  0FEA                     	;# 
  1787  0FEB                     	;# 
  1788  0FED                     	;# 
  1789  0FEE                     	;# 
  1790  0FEF                     	;# 
  1791  0000                     	;# 
  1792  0001                     	;# 
  1793  0002                     	;# 
  1794  0003                     	;# 
  1795  0004                     	;# 
  1796  0005                     	;# 
  1797  0006                     	;# 
  1798  0007                     	;# 
  1799  0008                     	;# 
  1800  0009                     	;# 
  1801  000A                     	;# 
  1802  000B                     	;# 
  1803  000C                     	;# 
  1804  000D                     	;# 
  1805  000E                     	;# 
  1806  000F                     	;# 
  1807  0010                     	;# 
  1808  0011                     	;# 
  1809  0012                     	;# 
  1810  0013                     	;# 
  1811  0014                     	;# 
  1812  0015                     	;# 
  1813  0016                     	;# 
  1814  0016                     	;# 
  1815  0017                     	;# 
  1816  0018                     	;# 
  1817  0019                     	;# 
  1818  001A                     	;# 
  1819  001B                     	;# 
  1820  001C                     	;# 
  1821  008C                     	;# 
  1822  008D                     	;# 
  1823  008E                     	;# 
  1824  008F                     	;# 
  1825  0090                     	;# 
  1826  0091                     	;# 
  1827  0092                     	;# 
  1828  0093                     	;# 
  1829  0094                     	;# 
  1830  0095                     	;# 
  1831  0096                     	;# 
  1832  0097                     	;# 
  1833  0098                     	;# 
  1834  0099                     	;# 
  1835  009A                     	;# 
  1836  009B                     	;# 
  1837  009B                     	;# 
  1838  009C                     	;# 
  1839  009D                     	;# 
  1840  009E                     	;# 
  1841  009F                     	;# 
  1842  010C                     	;# 
  1843  010D                     	;# 
  1844  010E                     	;# 
  1845  010F                     	;# 
  1846  0110                     	;# 
  1847  0111                     	;# 
  1848  0112                     	;# 
  1849  0113                     	;# 
  1850  0114                     	;# 
  1851  0115                     	;# 
  1852  0116                     	;# 
  1853  0117                     	;# 
  1854  0118                     	;# 
  1855  0119                     	;# 
  1856  011A                     	;# 
  1857  011B                     	;# 
  1858  011C                     	;# 
  1859  011D                     	;# 
  1860  011D                     	;# 
  1861  011D                     	;# 
  1862  011E                     	;# 
  1863  011F                     	;# 
  1864  018C                     	;# 
  1865  018D                     	;# 
  1866  018E                     	;# 
  1867  018F                     	;# 
  1868  0190                     	;# 
  1869  0191                     	;# 
  1870  0191                     	;# 
  1871  0192                     	;# 
  1872  0193                     	;# 
  1873  0193                     	;# 
  1874  0193                     	;# 
  1875  0194                     	;# 
  1876  0195                     	;# 
  1877  0196                     	;# 
  1878  0199                     	;# 
  1879  0199                     	;# 
  1880  0199                     	;# 
  1881  019A                     	;# 
  1882  019A                     	;# 
  1883  019A                     	;# 
  1884  019B                     	;# 
  1885  019B                     	;# 
  1886  019B                     	;# 
  1887  019B                     	;# 
  1888  019B                     	;# 
  1889  019C                     	;# 
  1890  019C                     	;# 
  1891  019C                     	;# 
  1892  019D                     	;# 
  1893  019D                     	;# 
  1894  019D                     	;# 
  1895  019E                     	;# 
  1896  019E                     	;# 
  1897  019E                     	;# 
  1898  019F                     	;# 
  1899  019F                     	;# 
  1900  019F                     	;# 
  1901  019F                     	;# 
  1902  019F                     	;# 
  1903  020C                     	;# 
  1904  020D                     	;# 
  1905  020E                     	;# 
  1906  020F                     	;# 
  1907  0210                     	;# 
  1908  0211                     	;# 
  1909  0211                     	;# 
  1910  0212                     	;# 
  1911  0212                     	;# 
  1912  0213                     	;# 
  1913  0213                     	;# 
  1914  0214                     	;# 
  1915  0214                     	;# 
  1916  0215                     	;# 
  1917  0215                     	;# 
  1918  0215                     	;# 
  1919  0215                     	;# 
  1920  0216                     	;# 
  1921  0216                     	;# 
  1922  0217                     	;# 
  1923  0217                     	;# 
  1924  028C                     	;# 
  1925  028D                     	;# 
  1926  028E                     	;# 
  1927  028F                     	;# 
  1928  0290                     	;# 
  1929  0291                     	;# 
  1930  0291                     	;# 
  1931  0292                     	;# 
  1932  0293                     	;# 
  1933  0298                     	;# 
  1934  0298                     	;# 
  1935  0299                     	;# 
  1936  029A                     	;# 
  1937  030C                     	;# 
  1938  030D                     	;# 
  1939  030E                     	;# 
  1940  030F                     	;# 
  1941  0310                     	;# 
  1942  0311                     	;# 
  1943  0311                     	;# 
  1944  0312                     	;# 
  1945  0313                     	;# 
  1946  038C                     	;# 
  1947  038D                     	;# 
  1948  038E                     	;# 
  1949  038F                     	;# 
  1950  0390                     	;# 
  1951  0391                     	;# 
  1952  0392                     	;# 
  1953  0393                     	;# 
  1954  0394                     	;# 
  1955  0395                     	;# 
  1956  0396                     	;# 
  1957  0397                     	;# 
  1958  0398                     	;# 
  1959  0399                     	;# 
  1960  039D                     	;# 
  1961  039E                     	;# 
  1962  039F                     	;# 
  1963  0511                     	;# 
  1964  0513                     	;# 
  1965  0515                     	;# 
  1966  051A                     	;# 
  1967  0591                     	;# 
  1968  0592                     	;# 
  1969  0592                     	;# 
  1970  0593                     	;# 
  1971  0594                     	;# 
  1972  0594                     	;# 
  1973  0595                     	;# 
  1974  0596                     	;# 
  1975  0596                     	;# 
  1976  0E91                     	;# 
  1977  0E92                     	;# 
  1978  0E93                     	;# 
  1979  0E94                     	;# 
  1980  0E95                     	;# 
  1981  0E96                     	;# 
  1982  0E97                     	;# 
  1983  0E98                     	;# 
  1984  0E99                     	;# 
  1985  0E9A                     	;# 
  1986  0E9B                     	;# 
  1987  0E9C                     	;# 
  1988  0E9D                     	;# 
  1989  0E9E                     	;# 
  1990  0E9F                     	;# 
  1991  0EA0                     	;# 
  1992  0EA1                     	;# 
  1993  0EA1                     	;# 
  1994  0EA2                     	;# 
  1995  0EA3                     	;# 
  1996  0EA3                     	;# 
  1997  0EA4                     	;# 
  1998  0EA5                     	;# 
  1999  0EA5                     	;# 
  2000  0EA6                     	;# 
  2001  0EA7                     	;# 
  2002  0EA7                     	;# 
  2003  0EA8                     	;# 
  2004  0EA9                     	;# 
  2005  0EAA                     	;# 
  2006  0EAB                     	;# 
  2007  0EAC                     	;# 
  2008  0EAD                     	;# 
  2009  0EAE                     	;# 
  2010  0EAF                     	;# 
  2011  0EB1                     	;# 
  2012  0EB2                     	;# 
  2013  0EB3                     	;# 
  2014  0EB4                     	;# 
  2015  0EB5                     	;# 
  2016  0EB6                     	;# 
  2017  0EB7                     	;# 
  2018  0EB8                     	;# 
  2019  0EB9                     	;# 
  2020  0EBA                     	;# 
  2021  0EBB                     	;# 
  2022  0EBC                     	;# 
  2023  0EBD                     	;# 
  2024  0EBE                     	;# 
  2025  0EBF                     	;# 
  2026  0EC0                     	;# 
  2027  0EC1                     	;# 
  2028  0EC1                     	;# 
  2029  0EC2                     	;# 
  2030  0EC3                     	;# 
  2031  0EC3                     	;# 
  2032  0EC4                     	;# 
  2033  0EC5                     	;# 
  2034  0EC5                     	;# 
  2035  0EC6                     	;# 
  2036  0EC7                     	;# 
  2037  0EC7                     	;# 
  2038  0EC8                     	;# 
  2039  0EC9                     	;# 
  2040  0ECA                     	;# 
  2041  0ECB                     	;# 
  2042  0ECC                     	;# 
  2043  0ECD                     	;# 
  2044  0ECE                     	;# 
  2045  0ECF                     	;# 
  2046  0ED1                     	;# 
  2047  0ED2                     	;# 
  2048  0ED3                     	;# 
  2049  0ED4                     	;# 
  2050  0ED5                     	;# 
  2051  0ED6                     	;# 
  2052  0ED7                     	;# 
  2053  0ED8                     	;# 
  2054  0ED9                     	;# 
  2055  0EDA                     	;# 
  2056  0EDB                     	;# 
  2057  0EDC                     	;# 
  2058  0EDD                     	;# 
  2059  0EDE                     	;# 
  2060  0EDF                     	;# 
  2061  0EE0                     	;# 
  2062  0EE1                     	;# 
  2063  0EE1                     	;# 
  2064  0EE2                     	;# 
  2065  0EE3                     	;# 
  2066  0EE3                     	;# 
  2067  0EE4                     	;# 
  2068  0EE5                     	;# 
  2069  0EE5                     	;# 
  2070  0EE6                     	;# 
  2071  0EE7                     	;# 
  2072  0EE7                     	;# 
  2073  0EE8                     	;# 
  2074  0EE9                     	;# 
  2075  0EEA                     	;# 
  2076  0EEB                     	;# 
  2077  0EEC                     	;# 
  2078  0EED                     	;# 
  2079  0EEE                     	;# 
  2080  0EEF                     	;# 
  2081  0F11                     	;# 
  2082  0F12                     	;# 
  2083  0F13                     	;# 
  2084  0F14                     	;# 
  2085  0F15                     	;# 
  2086  0F16                     	;# 
  2087  0F17                     	;# 
  2088  0F18                     	;# 
  2089  0F19                     	;# 
  2090  0F1A                     	;# 
  2091  0F1B                     	;# 
  2092  0F1C                     	;# 
  2093  0F1D                     	;# 
  2094  0F1E                     	;# 
  2095  0F1F                     	;# 
  2096  0F20                     	;# 
  2097  0F21                     	;# 
  2098  0F21                     	;# 
  2099  0F22                     	;# 
  2100  0F23                     	;# 
  2101  0F23                     	;# 
  2102  0F24                     	;# 
  2103  0F25                     	;# 
  2104  0F25                     	;# 
  2105  0F26                     	;# 
  2106  0F27                     	;# 
  2107  0F27                     	;# 
  2108  0F28                     	;# 
  2109  0F29                     	;# 
  2110  0F2A                     	;# 
  2111  0F2B                     	;# 
  2112  0F2C                     	;# 
  2113  0F2D                     	;# 
  2114  0F2E                     	;# 
  2115  0F2F                     	;# 
  2116  0FE4                     	;# 
  2117  0FE5                     	;# 
  2118  0FE6                     	;# 
  2119  0FE7                     	;# 
  2120  0FE8                     	;# 
  2121  0FE9                     	;# 
  2122  0FEA                     	;# 
  2123  0FEB                     	;# 
  2124  0FED                     	;# 
  2125  0FEE                     	;# 
  2126  0FEF                     	;# 
  2127  0000                     	;# 
  2128  0001                     	;# 
  2129  0002                     	;# 
  2130  0003                     	;# 
  2131  0004                     	;# 
  2132  0005                     	;# 
  2133  0006                     	;# 
  2134  0007                     	;# 
  2135  0008                     	;# 
  2136  0009                     	;# 
  2137  000A                     	;# 
  2138  000B                     	;# 
  2139  000C                     	;# 
  2140  000D                     	;# 
  2141  000E                     	;# 
  2142  000F                     	;# 
  2143  0010                     	;# 
  2144  0011                     	;# 
  2145  0012                     	;# 
  2146  0013                     	;# 
  2147  0014                     	;# 
  2148  0015                     	;# 
  2149  0016                     	;# 
  2150  0016                     	;# 
  2151  0017                     	;# 
  2152  0018                     	;# 
  2153  0019                     	;# 
  2154  001A                     	;# 
  2155  001B                     	;# 
  2156  001C                     	;# 
  2157  008C                     	;# 
  2158  008D                     	;# 
  2159  008E                     	;# 
  2160  008F                     	;# 
  2161  0090                     	;# 
  2162  0091                     	;# 
  2163  0092                     	;# 
  2164  0093                     	;# 
  2165  0094                     	;# 
  2166  0095                     	;# 
  2167  0096                     	;# 
  2168  0097                     	;# 
  2169  0098                     	;# 
  2170  0099                     	;# 
  2171  009A                     	;# 
  2172  009B                     	;# 
  2173  009B                     	;# 
  2174  009C                     	;# 
  2175  009D                     	;# 
  2176  009E                     	;# 
  2177  009F                     	;# 
  2178  010C                     	;# 
  2179  010D                     	;# 
  2180  010E                     	;# 
  2181  010F                     	;# 
  2182  0110                     	;# 
  2183  0111                     	;# 
  2184  0112                     	;# 
  2185  0113                     	;# 
  2186  0114                     	;# 
  2187  0115                     	;# 
  2188  0116                     	;# 
  2189  0117                     	;# 
  2190  0118                     	;# 
  2191  0119                     	;# 
  2192  011A                     	;# 
  2193  011B                     	;# 
  2194  011C                     	;# 
  2195  011D                     	;# 
  2196  011D                     	;# 
  2197  011D                     	;# 
  2198  011E                     	;# 
  2199  011F                     	;# 
  2200  018C                     	;# 
  2201  018D                     	;# 
  2202  018E                     	;# 
  2203  018F                     	;# 
  2204  0190                     	;# 
  2205  0191                     	;# 
  2206  0191                     	;# 
  2207  0192                     	;# 
  2208  0193                     	;# 
  2209  0193                     	;# 
  2210  0193                     	;# 
  2211  0194                     	;# 
  2212  0195                     	;# 
  2213  0196                     	;# 
  2214  0199                     	;# 
  2215  0199                     	;# 
  2216  0199                     	;# 
  2217  019A                     	;# 
  2218  019A                     	;# 
  2219  019A                     	;# 
  2220  019B                     	;# 
  2221  019B                     	;# 
  2222  019B                     	;# 
  2223  019B                     	;# 
  2224  019B                     	;# 
  2225  019C                     	;# 
  2226  019C                     	;# 
  2227  019C                     	;# 
  2228  019D                     	;# 
  2229  019D                     	;# 
  2230  019D                     	;# 
  2231  019E                     	;# 
  2232  019E                     	;# 
  2233  019E                     	;# 
  2234  019F                     	;# 
  2235  019F                     	;# 
  2236  019F                     	;# 
  2237  019F                     	;# 
  2238  019F                     	;# 
  2239  020C                     	;# 
  2240  020D                     	;# 
  2241  020E                     	;# 
  2242  020F                     	;# 
  2243  0210                     	;# 
  2244  0211                     	;# 
  2245  0211                     	;# 
  2246  0212                     	;# 
  2247  0212                     	;# 
  2248  0213                     	;# 
  2249  0213                     	;# 
  2250  0214                     	;# 
  2251  0214                     	;# 
  2252  0215                     	;# 
  2253  0215                     	;# 
  2254  0215                     	;# 
  2255  0215                     	;# 
  2256  0216                     	;# 
  2257  0216                     	;# 
  2258  0217                     	;# 
  2259  0217                     	;# 
  2260  028C                     	;# 
  2261  028D                     	;# 
  2262  028E                     	;# 
  2263  028F                     	;# 
  2264  0290                     	;# 
  2265  0291                     	;# 
  2266  0291                     	;# 
  2267  0292                     	;# 
  2268  0293                     	;# 
  2269  0298                     	;# 
  2270  0298                     	;# 
  2271  0299                     	;# 
  2272  029A                     	;# 
  2273  030C                     	;# 
  2274  030D                     	;# 
  2275  030E                     	;# 
  2276  030F                     	;# 
  2277  0310                     	;# 
  2278  0311                     	;# 
  2279  0311                     	;# 
  2280  0312                     	;# 
  2281  0313                     	;# 
  2282  038C                     	;# 
  2283  038D                     	;# 
  2284  038E                     	;# 
  2285  038F                     	;# 
  2286  0390                     	;# 
  2287  0391                     	;# 
  2288  0392                     	;# 
  2289  0393                     	;# 
  2290  0394                     	;# 
  2291  0395                     	;# 
  2292  0396                     	;# 
  2293  0397                     	;# 
  2294  0398                     	;# 
  2295  0399                     	;# 
  2296  039D                     	;# 
  2297  039E                     	;# 
  2298  039F                     	;# 
  2299  0511                     	;# 
  2300  0513                     	;# 
  2301  0515                     	;# 
  2302  051A                     	;# 
  2303  0591                     	;# 
  2304  0592                     	;# 
  2305  0592                     	;# 
  2306  0593                     	;# 
  2307  0594                     	;# 
  2308  0594                     	;# 
  2309  0595                     	;# 
  2310  0596                     	;# 
  2311  0596                     	;# 
  2312  0E91                     	;# 
  2313  0E92                     	;# 
  2314  0E93                     	;# 
  2315  0E94                     	;# 
  2316  0E95                     	;# 
  2317  0E96                     	;# 
  2318  0E97                     	;# 
  2319  0E98                     	;# 
  2320  0E99                     	;# 
  2321  0E9A                     	;# 
  2322  0E9B                     	;# 
  2323  0E9C                     	;# 
  2324  0E9D                     	;# 
  2325  0E9E                     	;# 
  2326  0E9F                     	;# 
  2327  0EA0                     	;# 
  2328  0EA1                     	;# 
  2329  0EA1                     	;# 
  2330  0EA2                     	;# 
  2331  0EA3                     	;# 
  2332  0EA3                     	;# 
  2333  0EA4                     	;# 
  2334  0EA5                     	;# 
  2335  0EA5                     	;# 
  2336  0EA6                     	;# 
  2337  0EA7                     	;# 
  2338  0EA7                     	;# 
  2339  0EA8                     	;# 
  2340  0EA9                     	;# 
  2341  0EAA                     	;# 
  2342  0EAB                     	;# 
  2343  0EAC                     	;# 
  2344  0EAD                     	;# 
  2345  0EAE                     	;# 
  2346  0EAF                     	;# 
  2347  0EB1                     	;# 
  2348  0EB2                     	;# 
  2349  0EB3                     	;# 
  2350  0EB4                     	;# 
  2351  0EB5                     	;# 
  2352  0EB6                     	;# 
  2353  0EB7                     	;# 
  2354  0EB8                     	;# 
  2355  0EB9                     	;# 
  2356  0EBA                     	;# 
  2357  0EBB                     	;# 
  2358  0EBC                     	;# 
  2359  0EBD                     	;# 
  2360  0EBE                     	;# 
  2361  0EBF                     	;# 
  2362  0EC0                     	;# 
  2363  0EC1                     	;# 
  2364  0EC1                     	;# 
  2365  0EC2                     	;# 
  2366  0EC3                     	;# 
  2367  0EC3                     	;# 
  2368  0EC4                     	;# 
  2369  0EC5                     	;# 
  2370  0EC5                     	;# 
  2371  0EC6                     	;# 
  2372  0EC7                     	;# 
  2373  0EC7                     	;# 
  2374  0EC8                     	;# 
  2375  0EC9                     	;# 
  2376  0ECA                     	;# 
  2377  0ECB                     	;# 
  2378  0ECC                     	;# 
  2379  0ECD                     	;# 
  2380  0ECE                     	;# 
  2381  0ECF                     	;# 
  2382  0ED1                     	;# 
  2383  0ED2                     	;# 
  2384  0ED3                     	;# 
  2385  0ED4                     	;# 
  2386  0ED5                     	;# 
  2387  0ED6                     	;# 
  2388  0ED7                     	;# 
  2389  0ED8                     	;# 
  2390  0ED9                     	;# 
  2391  0EDA                     	;# 
  2392  0EDB                     	;# 
  2393  0EDC                     	;# 
  2394  0EDD                     	;# 
  2395  0EDE                     	;# 
  2396  0EDF                     	;# 
  2397  0EE0                     	;# 
  2398  0EE1                     	;# 
  2399  0EE1                     	;# 
  2400  0EE2                     	;# 
  2401  0EE3                     	;# 
  2402  0EE3                     	;# 
  2403  0EE4                     	;# 
  2404  0EE5                     	;# 
  2405  0EE5                     	;# 
  2406  0EE6                     	;# 
  2407  0EE7                     	;# 
  2408  0EE7                     	;# 
  2409  0EE8                     	;# 
  2410  0EE9                     	;# 
  2411  0EEA                     	;# 
  2412  0EEB                     	;# 
  2413  0EEC                     	;# 
  2414  0EED                     	;# 
  2415  0EEE                     	;# 
  2416  0EEF                     	;# 
  2417  0F11                     	;# 
  2418  0F12                     	;# 
  2419  0F13                     	;# 
  2420  0F14                     	;# 
  2421  0F15                     	;# 
  2422  0F16                     	;# 
  2423  0F17                     	;# 
  2424  0F18                     	;# 
  2425  0F19                     	;# 
  2426  0F1A                     	;# 
  2427  0F1B                     	;# 
  2428  0F1C                     	;# 
  2429  0F1D                     	;# 
  2430  0F1E                     	;# 
  2431  0F1F                     	;# 
  2432  0F20                     	;# 
  2433  0F21                     	;# 
  2434  0F21                     	;# 
  2435  0F22                     	;# 
  2436  0F23                     	;# 
  2437  0F23                     	;# 
  2438  0F24                     	;# 
  2439  0F25                     	;# 
  2440  0F25                     	;# 
  2441  0F26                     	;# 
  2442  0F27                     	;# 
  2443  0F27                     	;# 
  2444  0F28                     	;# 
  2445  0F29                     	;# 
  2446  0F2A                     	;# 
  2447  0F2B                     	;# 
  2448  0F2C                     	;# 
  2449  0F2D                     	;# 
  2450  0F2E                     	;# 
  2451  0F2F                     	;# 
  2452  0FE4                     	;# 
  2453  0FE5                     	;# 
  2454  0FE6                     	;# 
  2455  0FE7                     	;# 
  2456  0FE8                     	;# 
  2457  0FE9                     	;# 
  2458  0FEA                     	;# 
  2459  0FEB                     	;# 
  2460  0FED                     	;# 
  2461  0FEE                     	;# 
  2462  0FEF                     	;# 
  2463  0000                     	;# 
  2464  0001                     	;# 
  2465  0002                     	;# 
  2466  0003                     	;# 
  2467  0004                     	;# 
  2468  0005                     	;# 
  2469  0006                     	;# 
  2470  0007                     	;# 
  2471  0008                     	;# 
  2472  0009                     	;# 
  2473  000A                     	;# 
  2474  000B                     	;# 
  2475  000C                     	;# 
  2476  000D                     	;# 
  2477  000E                     	;# 
  2478  000F                     	;# 
  2479  0010                     	;# 
  2480  0011                     	;# 
  2481  0012                     	;# 
  2482  0013                     	;# 
  2483  0014                     	;# 
  2484  0015                     	;# 
  2485  0016                     	;# 
  2486  0016                     	;# 
  2487  0017                     	;# 
  2488  0018                     	;# 
  2489  0019                     	;# 
  2490  001A                     	;# 
  2491  001B                     	;# 
  2492  001C                     	;# 
  2493  008C                     	;# 
  2494  008D                     	;# 
  2495  008E                     	;# 
  2496  008F                     	;# 
  2497  0090                     	;# 
  2498  0091                     	;# 
  2499  0092                     	;# 
  2500  0093                     	;# 
  2501  0094                     	;# 
  2502  0095                     	;# 
  2503  0096                     	;# 
  2504  0097                     	;# 
  2505  0098                     	;# 
  2506  0099                     	;# 
  2507  009A                     	;# 
  2508  009B                     	;# 
  2509  009B                     	;# 
  2510  009C                     	;# 
  2511  009D                     	;# 
  2512  009E                     	;# 
  2513  009F                     	;# 
  2514  010C                     	;# 
  2515  010D                     	;# 
  2516  010E                     	;# 
  2517  010F                     	;# 
  2518  0110                     	;# 
  2519  0111                     	;# 
  2520  0112                     	;# 
  2521  0113                     	;# 
  2522  0114                     	;# 
  2523  0115                     	;# 
  2524  0116                     	;# 
  2525  0117                     	;# 
  2526  0118                     	;# 
  2527  0119                     	;# 
  2528  011A                     	;# 
  2529  011B                     	;# 
  2530  011C                     	;# 
  2531  011D                     	;# 
  2532  011D                     	;# 
  2533  011D                     	;# 
  2534  011E                     	;# 
  2535  011F                     	;# 
  2536  018C                     	;# 
  2537  018D                     	;# 
  2538  018E                     	;# 
  2539  018F                     	;# 
  2540  0190                     	;# 
  2541  0191                     	;# 
  2542  0191                     	;# 
  2543  0192                     	;# 
  2544  0193                     	;# 
  2545  0193                     	;# 
  2546  0193                     	;# 
  2547  0194                     	;# 
  2548  0195                     	;# 
  2549  0196                     	;# 
  2550  0199                     	;# 
  2551  0199                     	;# 
  2552  0199                     	;# 
  2553  019A                     	;# 
  2554  019A                     	;# 
  2555  019A                     	;# 
  2556  019B                     	;# 
  2557  019B                     	;# 
  2558  019B                     	;# 
  2559  019B                     	;# 
  2560  019B                     	;# 
  2561  019C                     	;# 
  2562  019C                     	;# 
  2563  019C                     	;# 
  2564  019D                     	;# 
  2565  019D                     	;# 
  2566  019D                     	;# 
  2567  019E                     	;# 
  2568  019E                     	;# 
  2569  019E                     	;# 
  2570  019F                     	;# 
  2571  019F                     	;# 
  2572  019F                     	;# 
  2573  019F                     	;# 
  2574  019F                     	;# 
  2575  020C                     	;# 
  2576  020D                     	;# 
  2577  020E                     	;# 
  2578  020F                     	;# 
  2579  0210                     	;# 
  2580  0211                     	;# 
  2581  0211                     	;# 
  2582  0212                     	;# 
  2583  0212                     	;# 
  2584  0213                     	;# 
  2585  0213                     	;# 
  2586  0214                     	;# 
  2587  0214                     	;# 
  2588  0215                     	;# 
  2589  0215                     	;# 
  2590  0215                     	;# 
  2591  0215                     	;# 
  2592  0216                     	;# 
  2593  0216                     	;# 
  2594  0217                     	;# 
  2595  0217                     	;# 
  2596  028C                     	;# 
  2597  028D                     	;# 
  2598  028E                     	;# 
  2599  028F                     	;# 
  2600  0290                     	;# 
  2601  0291                     	;# 
  2602  0291                     	;# 
  2603  0292                     	;# 
  2604  0293                     	;# 
  2605  0298                     	;# 
  2606  0298                     	;# 
  2607  0299                     	;# 
  2608  029A                     	;# 
  2609  030C                     	;# 
  2610  030D                     	;# 
  2611  030E                     	;# 
  2612  030F                     	;# 
  2613  0310                     	;# 
  2614  0311                     	;# 
  2615  0311                     	;# 
  2616  0312                     	;# 
  2617  0313                     	;# 
  2618  038C                     	;# 
  2619  038D                     	;# 
  2620  038E                     	;# 
  2621  038F                     	;# 
  2622  0390                     	;# 
  2623  0391                     	;# 
  2624  0392                     	;# 
  2625  0393                     	;# 
  2626  0394                     	;# 
  2627  0395                     	;# 
  2628  0396                     	;# 
  2629  0397                     	;# 
  2630  0398                     	;# 
  2631  0399                     	;# 
  2632  039D                     	;# 
  2633  039E                     	;# 
  2634  039F                     	;# 
  2635  0511                     	;# 
  2636  0513                     	;# 
  2637  0515                     	;# 
  2638  051A                     	;# 
  2639  0591                     	;# 
  2640  0592                     	;# 
  2641  0592                     	;# 
  2642  0593                     	;# 
  2643  0594                     	;# 
  2644  0594                     	;# 
  2645  0595                     	;# 
  2646  0596                     	;# 
  2647  0596                     	;# 
  2648  0E91                     	;# 
  2649  0E92                     	;# 
  2650  0E93                     	;# 
  2651  0E94                     	;# 
  2652  0E95                     	;# 
  2653  0E96                     	;# 
  2654  0E97                     	;# 
  2655  0E98                     	;# 
  2656  0E99                     	;# 
  2657  0E9A                     	;# 
  2658  0E9B                     	;# 
  2659  0E9C                     	;# 
  2660  0E9D                     	;# 
  2661  0E9E                     	;# 
  2662  0E9F                     	;# 
  2663  0EA0                     	;# 
  2664  0EA1                     	;# 
  2665  0EA1                     	;# 
  2666  0EA2                     	;# 
  2667  0EA3                     	;# 
  2668  0EA3                     	;# 
  2669  0EA4                     	;# 
  2670  0EA5                     	;# 
  2671  0EA5                     	;# 
  2672  0EA6                     	;# 
  2673  0EA7                     	;# 
  2674  0EA7                     	;# 
  2675  0EA8                     	;# 
  2676  0EA9                     	;# 
  2677  0EAA                     	;# 
  2678  0EAB                     	;# 
  2679  0EAC                     	;# 
  2680  0EAD                     	;# 
  2681  0EAE                     	;# 
  2682  0EAF                     	;# 
  2683  0EB1                     	;# 
  2684  0EB2                     	;# 
  2685  0EB3                     	;# 
  2686  0EB4                     	;# 
  2687  0EB5                     	;# 
  2688  0EB6                     	;# 
  2689  0EB7                     	;# 
  2690  0EB8                     	;# 
  2691  0EB9                     	;# 
  2692  0EBA                     	;# 
  2693  0EBB                     	;# 
  2694  0EBC                     	;# 
  2695  0EBD                     	;# 
  2696  0EBE                     	;# 
  2697  0EBF                     	;# 
  2698  0EC0                     	;# 
  2699  0EC1                     	;# 
  2700  0EC1                     	;# 
  2701  0EC2                     	;# 
  2702  0EC3                     	;# 
  2703  0EC3                     	;# 
  2704  0EC4                     	;# 
  2705  0EC5                     	;# 
  2706  0EC5                     	;# 
  2707  0EC6                     	;# 
  2708  0EC7                     	;# 
  2709  0EC7                     	;# 
  2710  0EC8                     	;# 
  2711  0EC9                     	;# 
  2712  0ECA                     	;# 
  2713  0ECB                     	;# 
  2714  0ECC                     	;# 
  2715  0ECD                     	;# 
  2716  0ECE                     	;# 
  2717  0ECF                     	;# 
  2718  0ED1                     	;# 
  2719  0ED2                     	;# 
  2720  0ED3                     	;# 
  2721  0ED4                     	;# 
  2722  0ED5                     	;# 
  2723  0ED6                     	;# 
  2724  0ED7                     	;# 
  2725  0ED8                     	;# 
  2726  0ED9                     	;# 
  2727  0EDA                     	;# 
  2728  0EDB                     	;# 
  2729  0EDC                     	;# 
  2730  0EDD                     	;# 
  2731  0EDE                     	;# 
  2732  0EDF                     	;# 
  2733  0EE0                     	;# 
  2734  0EE1                     	;# 
  2735  0EE1                     	;# 
  2736  0EE2                     	;# 
  2737  0EE3                     	;# 
  2738  0EE3                     	;# 
  2739  0EE4                     	;# 
  2740  0EE5                     	;# 
  2741  0EE5                     	;# 
  2742  0EE6                     	;# 
  2743  0EE7                     	;# 
  2744  0EE7                     	;# 
  2745  0EE8                     	;# 
  2746  0EE9                     	;# 
  2747  0EEA                     	;# 
  2748  0EEB                     	;# 
  2749  0EEC                     	;# 
  2750  0EED                     	;# 
  2751  0EEE                     	;# 
  2752  0EEF                     	;# 
  2753  0F11                     	;# 
  2754  0F12                     	;# 
  2755  0F13                     	;# 
  2756  0F14                     	;# 
  2757  0F15                     	;# 
  2758  0F16                     	;# 
  2759  0F17                     	;# 
  2760  0F18                     	;# 
  2761  0F19                     	;# 
  2762  0F1A                     	;# 
  2763  0F1B                     	;# 
  2764  0F1C                     	;# 
  2765  0F1D                     	;# 
  2766  0F1E                     	;# 
  2767  0F1F                     	;# 
  2768  0F20                     	;# 
  2769  0F21                     	;# 
  2770  0F21                     	;# 
  2771  0F22                     	;# 
  2772  0F23                     	;# 
  2773  0F23                     	;# 
  2774  0F24                     	;# 
  2775  0F25                     	;# 
  2776  0F25                     	;# 
  2777  0F26                     	;# 
  2778  0F27                     	;# 
  2779  0F27                     	;# 
  2780  0F28                     	;# 
  2781  0F29                     	;# 
  2782  0F2A                     	;# 
  2783  0F2B                     	;# 
  2784  0F2C                     	;# 
  2785  0F2D                     	;# 
  2786  0F2E                     	;# 
  2787  0F2F                     	;# 
  2788  0FE4                     	;# 
  2789  0FE5                     	;# 
  2790  0FE6                     	;# 
  2791  0FE7                     	;# 
  2792  0FE8                     	;# 
  2793  0FE9                     	;# 
  2794  0FEA                     	;# 
  2795  0FEB                     	;# 
  2796  0FED                     	;# 
  2797  0FEE                     	;# 
  2798  0FEF                     	;# 
  2799  0000                     	;# 
  2800  0001                     	;# 
  2801  0002                     	;# 
  2802  0003                     	;# 
  2803  0004                     	;# 
  2804  0005                     	;# 
  2805  0006                     	;# 
  2806  0007                     	;# 
  2807  0008                     	;# 
  2808  0009                     	;# 
  2809  000A                     	;# 
  2810  000B                     	;# 
  2811  000C                     	;# 
  2812  000D                     	;# 
  2813  000E                     	;# 
  2814  000F                     	;# 
  2815  0010                     	;# 
  2816  0011                     	;# 
  2817  0012                     	;# 
  2818  0013                     	;# 
  2819  0014                     	;# 
  2820  0015                     	;# 
  2821  0016                     	;# 
  2822  0016                     	;# 
  2823  0017                     	;# 
  2824  0018                     	;# 
  2825  0019                     	;# 
  2826  001A                     	;# 
  2827  001B                     	;# 
  2828  001C                     	;# 
  2829  008C                     	;# 
  2830  008D                     	;# 
  2831  008E                     	;# 
  2832  008F                     	;# 
  2833  0090                     	;# 
  2834  0091                     	;# 
  2835  0092                     	;# 
  2836  0093                     	;# 
  2837  0094                     	;# 
  2838  0095                     	;# 
  2839  0096                     	;# 
  2840  0097                     	;# 
  2841  0098                     	;# 
  2842  0099                     	;# 
  2843  009A                     	;# 
  2844  009B                     	;# 
  2845  009B                     	;# 
  2846  009C                     	;# 
  2847  009D                     	;# 
  2848  009E                     	;# 
  2849  009F                     	;# 
  2850  010C                     	;# 
  2851  010D                     	;# 
  2852  010E                     	;# 
  2853  010F                     	;# 
  2854  0110                     	;# 
  2855  0111                     	;# 
  2856  0112                     	;# 
  2857  0113                     	;# 
  2858  0114                     	;# 
  2859  0115                     	;# 
  2860  0116                     	;# 
  2861  0117                     	;# 
  2862  0118                     	;# 
  2863  0119                     	;# 
  2864  011A                     	;# 
  2865  011B                     	;# 
  2866  011C                     	;# 
  2867  011D                     	;# 
  2868  011D                     	;# 
  2869  011D                     	;# 
  2870  011E                     	;# 
  2871  011F                     	;# 
  2872  018C                     	;# 
  2873  018D                     	;# 
  2874  018E                     	;# 
  2875  018F                     	;# 
  2876  0190                     	;# 
  2877  0191                     	;# 
  2878  0191                     	;# 
  2879  0192                     	;# 
  2880  0193                     	;# 
  2881  0193                     	;# 
  2882  0193                     	;# 
  2883  0194                     	;# 
  2884  0195                     	;# 
  2885  0196                     	;# 
  2886  0199                     	;# 
  2887  0199                     	;# 
  2888  0199                     	;# 
  2889  019A                     	;# 
  2890  019A                     	;# 
  2891  019A                     	;# 
  2892  019B                     	;# 
  2893  019B                     	;# 
  2894  019B                     	;# 
  2895  019B                     	;# 
  2896  019B                     	;# 
  2897  019C                     	;# 
  2898  019C                     	;# 
  2899  019C                     	;# 
  2900  019D                     	;# 
  2901  019D                     	;# 
  2902  019D                     	;# 
  2903  019E                     	;# 
  2904  019E                     	;# 
  2905  019E                     	;# 
  2906  019F                     	;# 
  2907  019F                     	;# 
  2908  019F                     	;# 
  2909  019F                     	;# 
  2910  019F                     	;# 
  2911  020C                     	;# 
  2912  020D                     	;# 
  2913  020E                     	;# 
  2914  020F                     	;# 
  2915  0210                     	;# 
  2916  0211                     	;# 
  2917  0211                     	;# 
  2918  0212                     	;# 
  2919  0212                     	;# 
  2920  0213                     	;# 
  2921  0213                     	;# 
  2922  0214                     	;# 
  2923  0214                     	;# 
  2924  0215                     	;# 
  2925  0215                     	;# 
  2926  0215                     	;# 
  2927  0215                     	;# 
  2928  0216                     	;# 
  2929  0216                     	;# 
  2930  0217                     	;# 
  2931  0217                     	;# 
  2932  028C                     	;# 
  2933  028D                     	;# 
  2934  028E                     	;# 
  2935  028F                     	;# 
  2936  0290                     	;# 
  2937  0291                     	;# 
  2938  0291                     	;# 
  2939  0292                     	;# 
  2940  0293                     	;# 
  2941  0298                     	;# 
  2942  0298                     	;# 
  2943  0299                     	;# 
  2944  029A                     	;# 
  2945  030C                     	;# 
  2946  030D                     	;# 
  2947  030E                     	;# 
  2948  030F                     	;# 
  2949  0310                     	;# 
  2950  0311                     	;# 
  2951  0311                     	;# 
  2952  0312                     	;# 
  2953  0313                     	;# 
  2954  038C                     	;# 
  2955  038D                     	;# 
  2956  038E                     	;# 
  2957  038F                     	;# 
  2958  0390                     	;# 
  2959  0391                     	;# 
  2960  0392                     	;# 
  2961  0393                     	;# 
  2962  0394                     	;# 
  2963  0395                     	;# 
  2964  0396                     	;# 
  2965  0397                     	;# 
  2966  0398                     	;# 
  2967  0399                     	;# 
  2968  039D                     	;# 
  2969  039E                     	;# 
  2970  039F                     	;# 
  2971  0511                     	;# 
  2972  0513                     	;# 
  2973  0515                     	;# 
  2974  051A                     	;# 
  2975  0591                     	;# 
  2976  0592                     	;# 
  2977  0592                     	;# 
  2978  0593                     	;# 
  2979  0594                     	;# 
  2980  0594                     	;# 
  2981  0595                     	;# 
  2982  0596                     	;# 
  2983  0596                     	;# 
  2984  0E91                     	;# 
  2985  0E92                     	;# 
  2986  0E93                     	;# 
  2987  0E94                     	;# 
  2988  0E95                     	;# 
  2989  0E96                     	;# 
  2990  0E97                     	;# 
  2991  0E98                     	;# 
  2992  0E99                     	;# 
  2993  0E9A                     	;# 
  2994  0E9B                     	;# 
  2995  0E9C                     	;# 
  2996  0E9D                     	;# 
  2997  0E9E                     	;# 
  2998  0E9F                     	;# 
  2999  0EA0                     	;# 
  3000  0EA1                     	;# 
  3001  0EA1                     	;# 
  3002  0EA2                     	;# 
  3003  0EA3                     	;# 
  3004  0EA3                     	;# 
  3005  0EA4                     	;# 
  3006  0EA5                     	;# 
  3007  0EA5                     	;# 
  3008  0EA6                     	;# 
  3009  0EA7                     	;# 
  3010  0EA7                     	;# 
  3011  0EA8                     	;# 
  3012  0EA9                     	;# 
  3013  0EAA                     	;# 
  3014  0EAB                     	;# 
  3015  0EAC                     	;# 
  3016  0EAD                     	;# 
  3017  0EAE                     	;# 
  3018  0EAF                     	;# 
  3019  0EB1                     	;# 
  3020  0EB2                     	;# 
  3021  0EB3                     	;# 
  3022  0EB4                     	;# 
  3023  0EB5                     	;# 
  3024  0EB6                     	;# 
  3025  0EB7                     	;# 
  3026  0EB8                     	;# 
  3027  0EB9                     	;# 
  3028  0EBA                     	;# 
  3029  0EBB                     	;# 
  3030  0EBC                     	;# 
  3031  0EBD                     	;# 
  3032  0EBE                     	;# 
  3033  0EBF                     	;# 
  3034  0EC0                     	;# 
  3035  0EC1                     	;# 
  3036  0EC1                     	;# 
  3037  0EC2                     	;# 
  3038  0EC3                     	;# 
  3039  0EC3                     	;# 
  3040  0EC4                     	;# 
  3041  0EC5                     	;# 
  3042  0EC5                     	;# 
  3043  0EC6                     	;# 
  3044  0EC7                     	;# 
  3045  0EC7                     	;# 
  3046  0EC8                     	;# 
  3047  0EC9                     	;# 
  3048  0ECA                     	;# 
  3049  0ECB                     	;# 
  3050  0ECC                     	;# 
  3051  0ECD                     	;# 
  3052  0ECE                     	;# 
  3053  0ECF                     	;# 
  3054  0ED1                     	;# 
  3055  0ED2                     	;# 
  3056  0ED3                     	;# 
  3057  0ED4                     	;# 
  3058  0ED5                     	;# 
  3059  0ED6                     	;# 
  3060  0ED7                     	;# 
  3061  0ED8                     	;# 
  3062  0ED9                     	;# 
  3063  0EDA                     	;# 
  3064  0EDB                     	;# 
  3065  0EDC                     	;# 
  3066  0EDD                     	;# 
  3067  0EDE                     	;# 
  3068  0EDF                     	;# 
  3069  0EE0                     	;# 
  3070  0EE1                     	;# 
  3071  0EE1                     	;# 
  3072  0EE2                     	;# 
  3073  0EE3                     	;# 
  3074  0EE3                     	;# 
  3075  0EE4                     	;# 
  3076  0EE5                     	;# 
  3077  0EE5                     	;# 
  3078  0EE6                     	;# 
  3079  0EE7                     	;# 
  3080  0EE7                     	;# 
  3081  0EE8                     	;# 
  3082  0EE9                     	;# 
  3083  0EEA                     	;# 
  3084  0EEB                     	;# 
  3085  0EEC                     	;# 
  3086  0EED                     	;# 
  3087  0EEE                     	;# 
  3088  0EEF                     	;# 
  3089  0F11                     	;# 
  3090  0F12                     	;# 
  3091  0F13                     	;# 
  3092  0F14                     	;# 
  3093  0F15                     	;# 
  3094  0F16                     	;# 
  3095  0F17                     	;# 
  3096  0F18                     	;# 
  3097  0F19                     	;# 
  3098  0F1A                     	;# 
  3099  0F1B                     	;# 
  3100  0F1C                     	;# 
  3101  0F1D                     	;# 
  3102  0F1E                     	;# 
  3103  0F1F                     	;# 
  3104  0F20                     	;# 
  3105  0F21                     	;# 
  3106  0F21                     	;# 
  3107  0F22                     	;# 
  3108  0F23                     	;# 
  3109  0F23                     	;# 
  3110  0F24                     	;# 
  3111  0F25                     	;# 
  3112  0F25                     	;# 
  3113  0F26                     	;# 
  3114  0F27                     	;# 
  3115  0F27                     	;# 
  3116  0F28                     	;# 
  3117  0F29                     	;# 
  3118  0F2A                     	;# 
  3119  0F2B                     	;# 
  3120  0F2C                     	;# 
  3121  0F2D                     	;# 
  3122  0F2E                     	;# 
  3123  0F2F                     	;# 
  3124  0FE4                     	;# 
  3125  0FE5                     	;# 
  3126  0FE6                     	;# 
  3127  0FE7                     	;# 
  3128  0FE8                     	;# 
  3129  0FE9                     	;# 
  3130  0FEA                     	;# 
  3131  0FEB                     	;# 
  3132  0FED                     	;# 
  3133  0FEE                     	;# 
  3134  0FEF                     	;# 
  3135  0000                     	;# 
  3136  0001                     	;# 
  3137  0002                     	;# 
  3138  0003                     	;# 
  3139  0004                     	;# 
  3140  0005                     	;# 
  3141  0006                     	;# 
  3142  0007                     	;# 
  3143  0008                     	;# 
  3144  0009                     	;# 
  3145  000A                     	;# 
  3146  000B                     	;# 
  3147  000C                     	;# 
  3148  000D                     	;# 
  3149  000E                     	;# 
  3150  000F                     	;# 
  3151  0010                     	;# 
  3152  0011                     	;# 
  3153  0012                     	;# 
  3154  0013                     	;# 
  3155  0014                     	;# 
  3156  0015                     	;# 
  3157  0016                     	;# 
  3158  0016                     	;# 
  3159  0017                     	;# 
  3160  0018                     	;# 
  3161  0019                     	;# 
  3162  001A                     	;# 
  3163  001B                     	;# 
  3164  001C                     	;# 
  3165  008C                     	;# 
  3166  008D                     	;# 
  3167  008E                     	;# 
  3168  008F                     	;# 
  3169  0090                     	;# 
  3170  0091                     	;# 
  3171  0092                     	;# 
  3172  0093                     	;# 
  3173  0094                     	;# 
  3174  0095                     	;# 
  3175  0096                     	;# 
  3176  0097                     	;# 
  3177  0098                     	;# 
  3178  0099                     	;# 
  3179  009A                     	;# 
  3180  009B                     	;# 
  3181  009B                     	;# 
  3182  009C                     	;# 
  3183  009D                     	;# 
  3184  009E                     	;# 
  3185  009F                     	;# 
  3186  010C                     	;# 
  3187  010D                     	;# 
  3188  010E                     	;# 
  3189  010F                     	;# 
  3190  0110                     	;# 
  3191  0111                     	;# 
  3192  0112                     	;# 
  3193  0113                     	;# 
  3194  0114                     	;# 
  3195  0115                     	;# 
  3196  0116                     	;# 
  3197  0117                     	;# 
  3198  0118                     	;# 
  3199  0119                     	;# 
  3200  011A                     	;# 
  3201  011B                     	;# 
  3202  011C                     	;# 
  3203  011D                     	;# 
  3204  011D                     	;# 
  3205  011D                     	;# 
  3206  011E                     	;# 
  3207  011F                     	;# 
  3208  018C                     	;# 
  3209  018D                     	;# 
  3210  018E                     	;# 
  3211  018F                     	;# 
  3212  0190                     	;# 
  3213  0191                     	;# 
  3214  0191                     	;# 
  3215  0192                     	;# 
  3216  0193                     	;# 
  3217  0193                     	;# 
  3218  0193                     	;# 
  3219  0194                     	;# 
  3220  0195                     	;# 
  3221  0196                     	;# 
  3222  0199                     	;# 
  3223  0199                     	;# 
  3224  0199                     	;# 
  3225  019A                     	;# 
  3226  019A                     	;# 
  3227  019A                     	;# 
  3228  019B                     	;# 
  3229  019B                     	;# 
  3230  019B                     	;# 
  3231  019B                     	;# 
  3232  019B                     	;# 
  3233  019C                     	;# 
  3234  019C                     	;# 
  3235  019C                     	;# 
  3236  019D                     	;# 
  3237  019D                     	;# 
  3238  019D                     	;# 
  3239  019E                     	;# 
  3240  019E                     	;# 
  3241  019E                     	;# 
  3242  019F                     	;# 
  3243  019F                     	;# 
  3244  019F                     	;# 
  3245  019F                     	;# 
  3246  019F                     	;# 
  3247  020C                     	;# 
  3248  020D                     	;# 
  3249  020E                     	;# 
  3250  020F                     	;# 
  3251  0210                     	;# 
  3252  0211                     	;# 
  3253  0211                     	;# 
  3254  0212                     	;# 
  3255  0212                     	;# 
  3256  0213                     	;# 
  3257  0213                     	;# 
  3258  0214                     	;# 
  3259  0214                     	;# 
  3260  0215                     	;# 
  3261  0215                     	;# 
  3262  0215                     	;# 
  3263  0215                     	;# 
  3264  0216                     	;# 
  3265  0216                     	;# 
  3266  0217                     	;# 
  3267  0217                     	;# 
  3268  028C                     	;# 
  3269  028D                     	;# 
  3270  028E                     	;# 
  3271  028F                     	;# 
  3272  0290                     	;# 
  3273  0291                     	;# 
  3274  0291                     	;# 
  3275  0292                     	;# 
  3276  0293                     	;# 
  3277  0298                     	;# 
  3278  0298                     	;# 
  3279  0299                     	;# 
  3280  029A                     	;# 
  3281  030C                     	;# 
  3282  030D                     	;# 
  3283  030E                     	;# 
  3284  030F                     	;# 
  3285  0310                     	;# 
  3286  0311                     	;# 
  3287  0311                     	;# 
  3288  0312                     	;# 
  3289  0313                     	;# 
  3290  038C                     	;# 
  3291  038D                     	;# 
  3292  038E                     	;# 
  3293  038F                     	;# 
  3294  0390                     	;# 
  3295  0391                     	;# 
  3296  0392                     	;# 
  3297  0393                     	;# 
  3298  0394                     	;# 
  3299  0395                     	;# 
  3300  0396                     	;# 
  3301  0397                     	;# 
  3302  0398                     	;# 
  3303  0399                     	;# 
  3304  039D                     	;# 
  3305  039E                     	;# 
  3306  039F                     	;# 
  3307  0511                     	;# 
  3308  0513                     	;# 
  3309  0515                     	;# 
  3310  051A                     	;# 
  3311  0591                     	;# 
  3312  0592                     	;# 
  3313  0592                     	;# 
  3314  0593                     	;# 
  3315  0594                     	;# 
  3316  0594                     	;# 
  3317  0595                     	;# 
  3318  0596                     	;# 
  3319  0596                     	;# 
  3320  0E91                     	;# 
  3321  0E92                     	;# 
  3322  0E93                     	;# 
  3323  0E94                     	;# 
  3324  0E95                     	;# 
  3325  0E96                     	;# 
  3326  0E97                     	;# 
  3327  0E98                     	;# 
  3328  0E99                     	;# 
  3329  0E9A                     	;# 
  3330  0E9B                     	;# 
  3331  0E9C                     	;# 
  3332  0E9D                     	;# 
  3333  0E9E                     	;# 
  3334  0E9F                     	;# 
  3335  0EA0                     	;# 
  3336  0EA1                     	;# 
  3337  0EA1                     	;# 
  3338  0EA2                     	;# 
  3339  0EA3                     	;# 
  3340  0EA3                     	;# 
  3341  0EA4                     	;# 
  3342  0EA5                     	;# 
  3343  0EA5                     	;# 
  3344  0EA6                     	;# 
  3345  0EA7                     	;# 
  3346  0EA7                     	;# 
  3347  0EA8                     	;# 
  3348  0EA9                     	;# 
  3349  0EAA                     	;# 
  3350  0EAB                     	;# 
  3351  0EAC                     	;# 
  3352  0EAD                     	;# 
  3353  0EAE                     	;# 
  3354  0EAF                     	;# 
  3355  0EB1                     	;# 
  3356  0EB2                     	;# 
  3357  0EB3                     	;# 
  3358  0EB4                     	;# 
  3359  0EB5                     	;# 
  3360  0EB6                     	;# 
  3361  0EB7                     	;# 
  3362  0EB8                     	;# 
  3363  0EB9                     	;# 
  3364  0EBA                     	;# 
  3365  0EBB                     	;# 
  3366  0EBC                     	;# 
  3367  0EBD                     	;# 
  3368  0EBE                     	;# 
  3369  0EBF                     	;# 
  3370  0EC0                     	;# 
  3371  0EC1                     	;# 
  3372  0EC1                     	;# 
  3373  0EC2                     	;# 
  3374  0EC3                     	;# 
  3375  0EC3                     	;# 
  3376  0EC4                     	;# 
  3377  0EC5                     	;# 
  3378  0EC5                     	;# 
  3379  0EC6                     	;# 
  3380  0EC7                     	;# 
  3381  0EC7                     	;# 
  3382  0EC8                     	;# 
  3383  0EC9                     	;# 
  3384  0ECA                     	;# 
  3385  0ECB                     	;# 
  3386  0ECC                     	;# 
  3387  0ECD                     	;# 
  3388  0ECE                     	;# 
  3389  0ECF                     	;# 
  3390  0ED1                     	;# 
  3391  0ED2                     	;# 
  3392  0ED3                     	;# 
  3393  0ED4                     	;# 
  3394  0ED5                     	;# 
  3395  0ED6                     	;# 
  3396  0ED7                     	;# 
  3397  0ED8                     	;# 
  3398  0ED9                     	;# 
  3399  0EDA                     	;# 
  3400  0EDB                     	;# 
  3401  0EDC                     	;# 
  3402  0EDD                     	;# 
  3403  0EDE                     	;# 
  3404  0EDF                     	;# 
  3405  0EE0                     	;# 
  3406  0EE1                     	;# 
  3407  0EE1                     	;# 
  3408  0EE2                     	;# 
  3409  0EE3                     	;# 
  3410  0EE3                     	;# 
  3411  0EE4                     	;# 
  3412  0EE5                     	;# 
  3413  0EE5                     	;# 
  3414  0EE6                     	;# 
  3415  0EE7                     	;# 
  3416  0EE7                     	;# 
  3417  0EE8                     	;# 
  3418  0EE9                     	;# 
  3419  0EEA                     	;# 
  3420  0EEB                     	;# 
  3421  0EEC                     	;# 
  3422  0EED                     	;# 
  3423  0EEE                     	;# 
  3424  0EEF                     	;# 
  3425  0F11                     	;# 
  3426  0F12                     	;# 
  3427  0F13                     	;# 
  3428  0F14                     	;# 
  3429  0F15                     	;# 
  3430  0F16                     	;# 
  3431  0F17                     	;# 
  3432  0F18                     	;# 
  3433  0F19                     	;# 
  3434  0F1A                     	;# 
  3435  0F1B                     	;# 
  3436  0F1C                     	;# 
  3437  0F1D                     	;# 
  3438  0F1E                     	;# 
  3439  0F1F                     	;# 
  3440  0F20                     	;# 
  3441  0F21                     	;# 
  3442  0F21                     	;# 
  3443  0F22                     	;# 
  3444  0F23                     	;# 
  3445  0F23                     	;# 
  3446  0F24                     	;# 
  3447  0F25                     	;# 
  3448  0F25                     	;# 
  3449  0F26                     	;# 
  3450  0F27                     	;# 
  3451  0F27                     	;# 
  3452  0F28                     	;# 
  3453  0F29                     	;# 
  3454  0F2A                     	;# 
  3455  0F2B                     	;# 
  3456  0F2C                     	;# 
  3457  0F2D                     	;# 
  3458  0F2E                     	;# 
  3459  0F2F                     	;# 
  3460  0FE4                     	;# 
  3461  0FE5                     	;# 
  3462  0FE6                     	;# 
  3463  0FE7                     	;# 
  3464  0FE8                     	;# 
  3465  0FE9                     	;# 
  3466  0FEA                     	;# 
  3467  0FEB                     	;# 
  3468  0FED                     	;# 
  3469  0FEE                     	;# 
  3470  0FEF                     	;# 
  3471  0000                     	;# 
  3472  0001                     	;# 
  3473  0002                     	;# 
  3474  0003                     	;# 
  3475  0004                     	;# 
  3476  0005                     	;# 
  3477  0006                     	;# 
  3478  0007                     	;# 
  3479  0008                     	;# 
  3480  0009                     	;# 
  3481  000A                     	;# 
  3482  000B                     	;# 
  3483  000C                     	;# 
  3484  000D                     	;# 
  3485  000E                     	;# 
  3486  000F                     	;# 
  3487  0010                     	;# 
  3488  0011                     	;# 
  3489  0012                     	;# 
  3490  0013                     	;# 
  3491  0014                     	;# 
  3492  0015                     	;# 
  3493  0016                     	;# 
  3494  0016                     	;# 
  3495  0017                     	;# 
  3496  0018                     	;# 
  3497  0019                     	;# 
  3498  001A                     	;# 
  3499  001B                     	;# 
  3500  001C                     	;# 
  3501  008C                     	;# 
  3502  008D                     	;# 
  3503  008E                     	;# 
  3504  008F                     	;# 
  3505  0090                     	;# 
  3506  0091                     	;# 
  3507  0092                     	;# 
  3508  0093                     	;# 
  3509  0094                     	;# 
  3510  0095                     	;# 
  3511  0096                     	;# 
  3512  0097                     	;# 
  3513  0098                     	;# 
  3514  0099                     	;# 
  3515  009A                     	;# 
  3516  009B                     	;# 
  3517  009B                     	;# 
  3518  009C                     	;# 
  3519  009D                     	;# 
  3520  009E                     	;# 
  3521  009F                     	;# 
  3522  010C                     	;# 
  3523  010D                     	;# 
  3524  010E                     	;# 
  3525  010F                     	;# 
  3526  0110                     	;# 
  3527  0111                     	;# 
  3528  0112                     	;# 
  3529  0113                     	;# 
  3530  0114                     	;# 
  3531  0115                     	;# 
  3532  0116                     	;# 
  3533  0117                     	;# 
  3534  0118                     	;# 
  3535  0119                     	;# 
  3536  011A                     	;# 
  3537  011B                     	;# 
  3538  011C                     	;# 
  3539  011D                     	;# 
  3540  011D                     	;# 
  3541  011D                     	;# 
  3542  011E                     	;# 
  3543  011F                     	;# 
  3544  018C                     	;# 
  3545  018D                     	;# 
  3546  018E                     	;# 
  3547  018F                     	;# 
  3548  0190                     	;# 
  3549  0191                     	;# 
  3550  0191                     	;# 
  3551  0192                     	;# 
  3552  0193                     	;# 
  3553  0193                     	;# 
  3554  0193                     	;# 
  3555  0194                     	;# 
  3556  0195                     	;# 
  3557  0196                     	;# 
  3558  0199                     	;# 
  3559  0199                     	;# 
  3560  0199                     	;# 
  3561  019A                     	;# 
  3562  019A                     	;# 
  3563  019A                     	;# 
  3564  019B                     	;# 
  3565  019B                     	;# 
  3566  019B                     	;# 
  3567  019B                     	;# 
  3568  019B                     	;# 
  3569  019C                     	;# 
  3570  019C                     	;# 
  3571  019C                     	;# 
  3572  019D                     	;# 
  3573  019D                     	;# 
  3574  019D                     	;# 
  3575  019E                     	;# 
  3576  019E                     	;# 
  3577  019E                     	;# 
  3578  019F                     	;# 
  3579  019F                     	;# 
  3580  019F                     	;# 
  3581  019F                     	;# 
  3582  019F                     	;# 
  3583  020C                     	;# 
  3584  020D                     	;# 
  3585  020E                     	;# 
  3586  020F                     	;# 
  3587  0210                     	;# 
  3588  0211                     	;# 
  3589  0211                     	;# 
  3590  0212                     	;# 
  3591  0212                     	;# 
  3592  0213                     	;# 
  3593  0213                     	;# 
  3594  0214                     	;# 
  3595  0214                     	;# 
  3596  0215                     	;# 
  3597  0215                     	;# 
  3598  0215                     	;# 
  3599  0215                     	;# 
  3600  0216                     	;# 
  3601  0216                     	;# 
  3602  0217                     	;# 
  3603  0217                     	;# 
  3604  028C                     	;# 
  3605  028D                     	;# 
  3606  028E                     	;# 
  3607  028F                     	;# 
  3608  0290                     	;# 
  3609  0291                     	;# 
  3610  0291                     	;# 
  3611  0292                     	;# 
  3612  0293                     	;# 
  3613  0298                     	;# 
  3614  0298                     	;# 
  3615  0299                     	;# 
  3616  029A                     	;# 
  3617  030C                     	;# 
  3618  030D                     	;# 
  3619  030E                     	;# 
  3620  030F                     	;# 
  3621  0310                     	;# 
  3622  0311                     	;# 
  3623  0311                     	;# 
  3624  0312                     	;# 
  3625  0313                     	;# 
  3626  038C                     	;# 
  3627  038D                     	;# 
  3628  038E                     	;# 
  3629  038F                     	;# 
  3630  0390                     	;# 
  3631  0391                     	;# 
  3632  0392                     	;# 
  3633  0393                     	;# 
  3634  0394                     	;# 
  3635  0395                     	;# 
  3636  0396                     	;# 
  3637  0397                     	;# 
  3638  0398                     	;# 
  3639  0399                     	;# 
  3640  039D                     	;# 
  3641  039E                     	;# 
  3642  039F                     	;# 
  3643  0511                     	;# 
  3644  0513                     	;# 
  3645  0515                     	;# 
  3646  051A                     	;# 
  3647  0591                     	;# 
  3648  0592                     	;# 
  3649  0592                     	;# 
  3650  0593                     	;# 
  3651  0594                     	;# 
  3652  0594                     	;# 
  3653  0595                     	;# 
  3654  0596                     	;# 
  3655  0596                     	;# 
  3656  0E91                     	;# 
  3657  0E92                     	;# 
  3658  0E93                     	;# 
  3659  0E94                     	;# 
  3660  0E95                     	;# 
  3661  0E96                     	;# 
  3662  0E97                     	;# 
  3663  0E98                     	;# 
  3664  0E99                     	;# 
  3665  0E9A                     	;# 
  3666  0E9B                     	;# 
  3667  0E9C                     	;# 
  3668  0E9D                     	;# 
  3669  0E9E                     	;# 
  3670  0E9F                     	;# 
  3671  0EA0                     	;# 
  3672  0EA1                     	;# 
  3673  0EA1                     	;# 
  3674  0EA2                     	;# 
  3675  0EA3                     	;# 
  3676  0EA3                     	;# 
  3677  0EA4                     	;# 
  3678  0EA5                     	;# 
  3679  0EA5                     	;# 
  3680  0EA6                     	;# 
  3681  0EA7                     	;# 
  3682  0EA7                     	;# 
  3683  0EA8                     	;# 
  3684  0EA9                     	;# 
  3685  0EAA                     	;# 
  3686  0EAB                     	;# 
  3687  0EAC                     	;# 
  3688  0EAD                     	;# 
  3689  0EAE                     	;# 
  3690  0EAF                     	;# 
  3691  0EB1                     	;# 
  3692  0EB2                     	;# 
  3693  0EB3                     	;# 
  3694  0EB4                     	;# 
  3695  0EB5                     	;# 
  3696  0EB6                     	;# 
  3697  0EB7                     	;# 
  3698  0EB8                     	;# 
  3699  0EB9                     	;# 
  3700  0EBA                     	;# 
  3701  0EBB                     	;# 
  3702  0EBC                     	;# 
  3703  0EBD                     	;# 
  3704  0EBE                     	;# 
  3705  0EBF                     	;# 
  3706  0EC0                     	;# 
  3707  0EC1                     	;# 
  3708  0EC1                     	;# 
  3709  0EC2                     	;# 
  3710  0EC3                     	;# 
  3711  0EC3                     	;# 
  3712  0EC4                     	;# 
  3713  0EC5                     	;# 
  3714  0EC5                     	;# 
  3715  0EC6                     	;# 
  3716  0EC7                     	;# 
  3717  0EC7                     	;# 
  3718  0EC8                     	;# 
  3719  0EC9                     	;# 
  3720  0ECA                     	;# 
  3721  0ECB                     	;# 
  3722  0ECC                     	;# 
  3723  0ECD                     	;# 
  3724  0ECE                     	;# 
  3725  0ECF                     	;# 
  3726  0ED1                     	;# 
  3727  0ED2                     	;# 
  3728  0ED3                     	;# 
  3729  0ED4                     	;# 
  3730  0ED5                     	;# 
  3731  0ED6                     	;# 
  3732  0ED7                     	;# 
  3733  0ED8                     	;# 
  3734  0ED9                     	;# 
  3735  0EDA                     	;# 
  3736  0EDB                     	;# 
  3737  0EDC                     	;# 
  3738  0EDD                     	;# 
  3739  0EDE                     	;# 
  3740  0EDF                     	;# 
  3741  0EE0                     	;# 
  3742  0EE1                     	;# 
  3743  0EE1                     	;# 
  3744  0EE2                     	;# 
  3745  0EE3                     	;# 
  3746  0EE3                     	;# 
  3747  0EE4                     	;# 
  3748  0EE5                     	;# 
  3749  0EE5                     	;# 
  3750  0EE6                     	;# 
  3751  0EE7                     	;# 
  3752  0EE7                     	;# 
  3753  0EE8                     	;# 
  3754  0EE9                     	;# 
  3755  0EEA                     	;# 
  3756  0EEB                     	;# 
  3757  0EEC                     	;# 
  3758  0EED                     	;# 
  3759  0EEE                     	;# 
  3760  0EEF                     	;# 
  3761  0F11                     	;# 
  3762  0F12                     	;# 
  3763  0F13                     	;# 
  3764  0F14                     	;# 
  3765  0F15                     	;# 
  3766  0F16                     	;# 
  3767  0F17                     	;# 
  3768  0F18                     	;# 
  3769  0F19                     	;# 
  3770  0F1A                     	;# 
  3771  0F1B                     	;# 
  3772  0F1C                     	;# 
  3773  0F1D                     	;# 
  3774  0F1E                     	;# 
  3775  0F1F                     	;# 
  3776  0F20                     	;# 
  3777  0F21                     	;# 
  3778  0F21                     	;# 
  3779  0F22                     	;# 
  3780  0F23                     	;# 
  3781  0F23                     	;# 
  3782  0F24                     	;# 
  3783  0F25                     	;# 
  3784  0F25                     	;# 
  3785  0F26                     	;# 
  3786  0F27                     	;# 
  3787  0F27                     	;# 
  3788  0F28                     	;# 
  3789  0F29                     	;# 
  3790  0F2A                     	;# 
  3791  0F2B                     	;# 
  3792  0F2C                     	;# 
  3793  0F2D                     	;# 
  3794  0F2E                     	;# 
  3795  0F2F                     	;# 
  3796  0FE4                     	;# 
  3797  0FE5                     	;# 
  3798  0FE6                     	;# 
  3799  0FE7                     	;# 
  3800  0FE8                     	;# 
  3801  0FE9                     	;# 
  3802  0FEA                     	;# 
  3803  0FEB                     	;# 
  3804  0FED                     	;# 
  3805  0FEE                     	;# 
  3806  0FEF                     	;# 
  3807  0000                     	;# 
  3808  0001                     	;# 
  3809  0002                     	;# 
  3810  0003                     	;# 
  3811  0004                     	;# 
  3812  0005                     	;# 
  3813  0006                     	;# 
  3814  0007                     	;# 
  3815  0008                     	;# 
  3816  0009                     	;# 
  3817  000A                     	;# 
  3818  000B                     	;# 
  3819  000C                     	;# 
  3820  000D                     	;# 
  3821  000E                     	;# 
  3822  000F                     	;# 
  3823  0010                     	;# 
  3824  0011                     	;# 
  3825  0012                     	;# 
  3826  0013                     	;# 
  3827  0014                     	;# 
  3828  0015                     	;# 
  3829  0016                     	;# 
  3830  0016                     	;# 
  3831  0017                     	;# 
  3832  0018                     	;# 
  3833  0019                     	;# 
  3834  001A                     	;# 
  3835  001B                     	;# 
  3836  001C                     	;# 
  3837  008C                     	;# 
  3838  008D                     	;# 
  3839  008E                     	;# 
  3840  008F                     	;# 
  3841  0090                     	;# 
  3842  0091                     	;# 
  3843  0092                     	;# 
  3844  0093                     	;# 
  3845  0094                     	;# 
  3846  0095                     	;# 
  3847  0096                     	;# 
  3848  0097                     	;# 
  3849  0098                     	;# 
  3850  0099                     	;# 
  3851  009A                     	;# 
  3852  009B                     	;# 
  3853  009B                     	;# 
  3854  009C                     	;# 
  3855  009D                     	;# 
  3856  009E                     	;# 
  3857  009F                     	;# 
  3858  010C                     	;# 
  3859  010D                     	;# 
  3860  010E                     	;# 
  3861  010F                     	;# 
  3862  0110                     	;# 
  3863  0111                     	;# 
  3864  0112                     	;# 
  3865  0113                     	;# 
  3866  0114                     	;# 
  3867  0115                     	;# 
  3868  0116                     	;# 
  3869  0117                     	;# 
  3870  0118                     	;# 
  3871  0119                     	;# 
  3872  011A                     	;# 
  3873  011B                     	;# 
  3874  011C                     	;# 
  3875  011D                     	;# 
  3876  011D                     	;# 
  3877  011D                     	;# 
  3878  011E                     	;# 
  3879  011F                     	;# 
  3880  018C                     	;# 
  3881  018D                     	;# 
  3882  018E                     	;# 
  3883  018F                     	;# 
  3884  0190                     	;# 
  3885  0191                     	;# 
  3886  0191                     	;# 
  3887  0192                     	;# 
  3888  0193                     	;# 
  3889  0193                     	;# 
  3890  0193                     	;# 
  3891  0194                     	;# 
  3892  0195                     	;# 
  3893  0196                     	;# 
  3894  0199                     	;# 
  3895  0199                     	;# 
  3896  0199                     	;# 
  3897  019A                     	;# 
  3898  019A                     	;# 
  3899  019A                     	;# 
  3900  019B                     	;# 
  3901  019B                     	;# 
  3902  019B                     	;# 
  3903  019B                     	;# 
  3904  019B                     	;# 
  3905  019C                     	;# 
  3906  019C                     	;# 
  3907  019C                     	;# 
  3908  019D                     	;# 
  3909  019D                     	;# 
  3910  019D                     	;# 
  3911  019E                     	;# 
  3912  019E                     	;# 
  3913  019E                     	;# 
  3914  019F                     	;# 
  3915  019F                     	;# 
  3916  019F                     	;# 
  3917  019F                     	;# 
  3918  019F                     	;# 
  3919  020C                     	;# 
  3920  020D                     	;# 
  3921  020E                     	;# 
  3922  020F                     	;# 
  3923  0210                     	;# 
  3924  0211                     	;# 
  3925  0211                     	;# 
  3926  0212                     	;# 
  3927  0212                     	;# 
  3928  0213                     	;# 
  3929  0213                     	;# 
  3930  0214                     	;# 
  3931  0214                     	;# 
  3932  0215                     	;# 
  3933  0215                     	;# 
  3934  0215                     	;# 
  3935  0215                     	;# 
  3936  0216                     	;# 
  3937  0216                     	;# 
  3938  0217                     	;# 
  3939  0217                     	;# 
  3940  028C                     	;# 
  3941  028D                     	;# 
  3942  028E                     	;# 
  3943  028F                     	;# 
  3944  0290                     	;# 
  3945  0291                     	;# 
  3946  0291                     	;# 
  3947  0292                     	;# 
  3948  0293                     	;# 
  3949  0298                     	;# 
  3950  0298                     	;# 
  3951  0299                     	;# 
  3952  029A                     	;# 
  3953  030C                     	;# 
  3954  030D                     	;# 
  3955  030E                     	;# 
  3956  030F                     	;# 
  3957  0310                     	;# 
  3958  0311                     	;# 
  3959  0311                     	;# 
  3960  0312                     	;# 
  3961  0313                     	;# 
  3962  038C                     	;# 
  3963  038D                     	;# 
  3964  038E                     	;# 
  3965  038F                     	;# 
  3966  0390                     	;# 
  3967  0391                     	;# 
  3968  0392                     	;# 
  3969  0393                     	;# 
  3970  0394                     	;# 
  3971  0395                     	;# 
  3972  0396                     	;# 
  3973  0397                     	;# 
  3974  0398                     	;# 
  3975  0399                     	;# 
  3976  039D                     	;# 
  3977  039E                     	;# 
  3978  039F                     	;# 
  3979  0511                     	;# 
  3980  0513                     	;# 
  3981  0515                     	;# 
  3982  051A                     	;# 
  3983  0591                     	;# 
  3984  0592                     	;# 
  3985  0592                     	;# 
  3986  0593                     	;# 
  3987  0594                     	;# 
  3988  0594                     	;# 
  3989  0595                     	;# 
  3990  0596                     	;# 
  3991  0596                     	;# 
  3992  0E91                     	;# 
  3993  0E92                     	;# 
  3994  0E93                     	;# 
  3995  0E94                     	;# 
  3996  0E95                     	;# 
  3997  0E96                     	;# 
  3998  0E97                     	;# 
  3999  0E98                     	;# 
  4000  0E99                     	;# 
  4001  0E9A                     	;# 
  4002  0E9B                     	;# 
  4003  0E9C                     	;# 
  4004  0E9D                     	;# 
  4005  0E9E                     	;# 
  4006  0E9F                     	;# 
  4007  0EA0                     	;# 
  4008  0EA1                     	;# 
  4009  0EA1                     	;# 
  4010  0EA2                     	;# 
  4011  0EA3                     	;# 
  4012  0EA3                     	;# 
  4013  0EA4                     	;# 
  4014  0EA5                     	;# 
  4015  0EA5                     	;# 
  4016  0EA6                     	;# 
  4017  0EA7                     	;# 
  4018  0EA7                     	;# 
  4019  0EA8                     	;# 
  4020  0EA9                     	;# 
  4021  0EAA                     	;# 
  4022  0EAB                     	;# 
  4023  0EAC                     	;# 
  4024  0EAD                     	;# 
  4025  0EAE                     	;# 
  4026  0EAF                     	;# 
  4027  0EB1                     	;# 
  4028  0EB2                     	;# 
  4029  0EB3                     	;# 
  4030  0EB4                     	;# 
  4031  0EB5                     	;# 
  4032  0EB6                     	;# 
  4033  0EB7                     	;# 
  4034  0EB8                     	;# 
  4035  0EB9                     	;# 
  4036  0EBA                     	;# 
  4037  0EBB                     	;# 
  4038  0EBC                     	;# 
  4039  0EBD                     	;# 
  4040  0EBE                     	;# 
  4041  0EBF                     	;# 
  4042  0EC0                     	;# 
  4043  0EC1                     	;# 
  4044  0EC1                     	;# 
  4045  0EC2                     	;# 
  4046  0EC3                     	;# 
  4047  0EC3                     	;# 
  4048  0EC4                     	;# 
  4049  0EC5                     	;# 
  4050  0EC5                     	;# 
  4051  0EC6                     	;# 
  4052  0EC7                     	;# 
  4053  0EC7                     	;# 
  4054  0EC8                     	;# 
  4055  0EC9                     	;# 
  4056  0ECA                     	;# 
  4057  0ECB                     	;# 
  4058  0ECC                     	;# 
  4059  0ECD                     	;# 
  4060  0ECE                     	;# 
  4061  0ECF                     	;# 
  4062  0ED1                     	;# 
  4063  0ED2                     	;# 
  4064  0ED3                     	;# 
  4065  0ED4                     	;# 
  4066  0ED5                     	;# 
  4067  0ED6                     	;# 
  4068  0ED7                     	;# 
  4069  0ED8                     	;# 
  4070  0ED9                     	;# 
  4071  0EDA                     	;# 
  4072  0EDB                     	;# 
  4073  0EDC                     	;# 
  4074  0EDD                     	;# 
  4075  0EDE                     	;# 
  4076  0EDF                     	;# 
  4077  0EE0                     	;# 
  4078  0EE1                     	;# 
  4079  0EE1                     	;# 
  4080  0EE2                     	;# 
  4081  0EE3                     	;# 
  4082  0EE3                     	;# 
  4083  0EE4                     	;# 
  4084  0EE5                     	;# 
  4085  0EE5                     	;# 
  4086  0EE6                     	;# 
  4087  0EE7                     	;# 
  4088  0EE7                     	;# 
  4089  0EE8                     	;# 
  4090  0EE9                     	;# 
  4091  0EEA                     	;# 
  4092  0EEB                     	;# 
  4093  0EEC                     	;# 
  4094  0EED                     	;# 
  4095  0EEE                     	;# 
  4096  0EEF                     	;# 
  4097  0F11                     	;# 
  4098  0F12                     	;# 
  4099  0F13                     	;# 
  4100  0F14                     	;# 
  4101  0F15                     	;# 
  4102  0F16                     	;# 
  4103  0F17                     	;# 
  4104  0F18                     	;# 
  4105  0F19                     	;# 
  4106  0F1A                     	;# 
  4107  0F1B                     	;# 
  4108  0F1C                     	;# 
  4109  0F1D                     	;# 
  4110  0F1E                     	;# 
  4111  0F1F                     	;# 
  4112  0F20                     	;# 
  4113  0F21                     	;# 
  4114  0F21                     	;# 
  4115  0F22                     	;# 
  4116  0F23                     	;# 
  4117  0F23                     	;# 
  4118  0F24                     	;# 
  4119  0F25                     	;# 
  4120  0F25                     	;# 
  4121  0F26                     	;# 
  4122  0F27                     	;# 
  4123  0F27                     	;# 
  4124  0F28                     	;# 
  4125  0F29                     	;# 
  4126  0F2A                     	;# 
  4127  0F2B                     	;# 
  4128  0F2C                     	;# 
  4129  0F2D                     	;# 
  4130  0F2E                     	;# 
  4131  0F2F                     	;# 
  4132  0FE4                     	;# 
  4133  0FE5                     	;# 
  4134  0FE6                     	;# 
  4135  0FE7                     	;# 
  4136  0FE8                     	;# 
  4137  0FE9                     	;# 
  4138  0FEA                     	;# 
  4139  0FEB                     	;# 
  4140  0FED                     	;# 
  4141  0FEE                     	;# 
  4142  0FEF                     	;# 
  4143  0000                     	;# 
  4144  0001                     	;# 
  4145  0002                     	;# 
  4146  0003                     	;# 
  4147  0004                     	;# 
  4148  0005                     	;# 
  4149  0006                     	;# 
  4150  0007                     	;# 
  4151  0008                     	;# 
  4152  0009                     	;# 
  4153  000A                     	;# 
  4154  000B                     	;# 
  4155  000C                     	;# 
  4156  000D                     	;# 
  4157  000E                     	;# 
  4158  000F                     	;# 
  4159  0010                     	;# 
  4160  0011                     	;# 
  4161  0012                     	;# 
  4162  0013                     	;# 
  4163  0014                     	;# 
  4164  0015                     	;# 
  4165  0016                     	;# 
  4166  0016                     	;# 
  4167  0017                     	;# 
  4168  0018                     	;# 
  4169  0019                     	;# 
  4170  001A                     	;# 
  4171  001B                     	;# 
  4172  001C                     	;# 
  4173  008C                     	;# 
  4174  008D                     	;# 
  4175  008E                     	;# 
  4176  008F                     	;# 
  4177  0090                     	;# 
  4178  0091                     	;# 
  4179  0092                     	;# 
  4180  0093                     	;# 
  4181  0094                     	;# 
  4182  0095                     	;# 
  4183  0096                     	;# 
  4184  0097                     	;# 
  4185  0098                     	;# 
  4186  0099                     	;# 
  4187  009A                     	;# 
  4188  009B                     	;# 
  4189  009B                     	;# 
  4190  009C                     	;# 
  4191  009D                     	;# 
  4192  009E                     	;# 
  4193  009F                     	;# 
  4194  010C                     	;# 
  4195  010D                     	;# 
  4196  010E                     	;# 
  4197  010F                     	;# 
  4198  0110                     	;# 
  4199  0111                     	;# 
  4200  0112                     	;# 
  4201  0113                     	;# 
  4202  0114                     	;# 
  4203  0115                     	;# 
  4204  0116                     	;# 
  4205  0117                     	;# 
  4206  0118                     	;# 
  4207  0119                     	;# 
  4208  011A                     	;# 
  4209  011B                     	;# 
  4210  011C                     	;# 
  4211  011D                     	;# 
  4212  011D                     	;# 
  4213  011D                     	;# 
  4214  011E                     	;# 
  4215  011F                     	;# 
  4216  018C                     	;# 
  4217  018D                     	;# 
  4218  018E                     	;# 
  4219  018F                     	;# 
  4220  0190                     	;# 
  4221  0191                     	;# 
  4222  0191                     	;# 
  4223  0192                     	;# 
  4224  0193                     	;# 
  4225  0193                     	;# 
  4226  0193                     	;# 
  4227  0194                     	;# 
  4228  0195                     	;# 
  4229  0196                     	;# 
  4230  0199                     	;# 
  4231  0199                     	;# 
  4232  0199                     	;# 
  4233  019A                     	;# 
  4234  019A                     	;# 
  4235  019A                     	;# 
  4236  019B                     	;# 
  4237  019B                     	;# 
  4238  019B                     	;# 
  4239  019B                     	;# 
  4240  019B                     	;# 
  4241  019C                     	;# 
  4242  019C                     	;# 
  4243  019C                     	;# 
  4244  019D                     	;# 
  4245  019D                     	;# 
  4246  019D                     	;# 
  4247  019E                     	;# 
  4248  019E                     	;# 
  4249  019E                     	;# 
  4250  019F                     	;# 
  4251  019F                     	;# 
  4252  019F                     	;# 
  4253  019F                     	;# 
  4254  019F                     	;# 
  4255  020C                     	;# 
  4256  020D                     	;# 
  4257  020E                     	;# 
  4258  020F                     	;# 
  4259  0210                     	;# 
  4260  0211                     	;# 
  4261  0211                     	;# 
  4262  0212                     	;# 
  4263  0212                     	;# 
  4264  0213                     	;# 
  4265  0213                     	;# 
  4266  0214                     	;# 
  4267  0214                     	;# 
  4268  0215                     	;# 
  4269  0215                     	;# 
  4270  0215                     	;# 
  4271  0215                     	;# 
  4272  0216                     	;# 
  4273  0216                     	;# 
  4274  0217                     	;# 
  4275  0217                     	;# 
  4276  028C                     	;# 
  4277  028D                     	;# 
  4278  028E                     	;# 
  4279  028F                     	;# 
  4280  0290                     	;# 
  4281  0291                     	;# 
  4282  0291                     	;# 
  4283  0292                     	;# 
  4284  0293                     	;# 
  4285  0298                     	;# 
  4286  0298                     	;# 
  4287  0299                     	;# 
  4288  029A                     	;# 
  4289  030C                     	;# 
  4290  030D                     	;# 
  4291  030E                     	;# 
  4292  030F                     	;# 
  4293  0310                     	;# 
  4294  0311                     	;# 
  4295  0311                     	;# 
  4296  0312                     	;# 
  4297  0313                     	;# 
  4298  038C                     	;# 
  4299  038D                     	;# 
  4300  038E                     	;# 
  4301  038F                     	;# 
  4302  0390                     	;# 
  4303  0391                     	;# 
  4304  0392                     	;# 
  4305  0393                     	;# 
  4306  0394                     	;# 
  4307  0395                     	;# 
  4308  0396                     	;# 
  4309  0397                     	;# 
  4310  0398                     	;# 
  4311  0399                     	;# 
  4312  039D                     	;# 
  4313  039E                     	;# 
  4314  039F                     	;# 
  4315  0511                     	;# 
  4316  0513                     	;# 
  4317  0515                     	;# 
  4318  051A                     	;# 
  4319  0591                     	;# 
  4320  0592                     	;# 
  4321  0592                     	;# 
  4322  0593                     	;# 
  4323  0594                     	;# 
  4324  0594                     	;# 
  4325  0595                     	;# 
  4326  0596                     	;# 
  4327  0596                     	;# 
  4328  0E91                     	;# 
  4329  0E92                     	;# 
  4330  0E93                     	;# 
  4331  0E94                     	;# 
  4332  0E95                     	;# 
  4333  0E96                     	;# 
  4334  0E97                     	;# 
  4335  0E98                     	;# 
  4336  0E99                     	;# 
  4337  0E9A                     	;# 
  4338  0E9B                     	;# 
  4339  0E9C                     	;# 
  4340  0E9D                     	;# 
  4341  0E9E                     	;# 
  4342  0E9F                     	;# 
  4343  0EA0                     	;# 
  4344  0EA1                     	;# 
  4345  0EA1                     	;# 
  4346  0EA2                     	;# 
  4347  0EA3                     	;# 
  4348  0EA3                     	;# 
  4349  0EA4                     	;# 
  4350  0EA5                     	;# 
  4351  0EA5                     	;# 
  4352  0EA6                     	;# 
  4353  0EA7                     	;# 
  4354  0EA7                     	;# 
  4355  0EA8                     	;# 
  4356  0EA9                     	;# 
  4357  0EAA                     	;# 
  4358  0EAB                     	;# 
  4359  0EAC                     	;# 
  4360  0EAD                     	;# 
  4361  0EAE                     	;# 
  4362  0EAF                     	;# 
  4363  0EB1                     	;# 
  4364  0EB2                     	;# 
  4365  0EB3                     	;# 
  4366  0EB4                     	;# 
  4367  0EB5                     	;# 
  4368  0EB6                     	;# 
  4369  0EB7                     	;# 
  4370  0EB8                     	;# 
  4371  0EB9                     	;# 
  4372  0EBA                     	;# 
  4373  0EBB                     	;# 
  4374  0EBC                     	;# 
  4375  0EBD                     	;# 
  4376  0EBE                     	;# 
  4377  0EBF                     	;# 
  4378  0EC0                     	;# 
  4379  0EC1                     	;# 
  4380  0EC1                     	;# 
  4381  0EC2                     	;# 
  4382  0EC3                     	;# 
  4383  0EC3                     	;# 
  4384  0EC4                     	;# 
  4385  0EC5                     	;# 
  4386  0EC5                     	;# 
  4387  0EC6                     	;# 
  4388  0EC7                     	;# 
  4389  0EC7                     	;# 
  4390  0EC8                     	;# 
  4391  0EC9                     	;# 
  4392  0ECA                     	;# 
  4393  0ECB                     	;# 
  4394  0ECC                     	;# 
  4395  0ECD                     	;# 
  4396  0ECE                     	;# 
  4397  0ECF                     	;# 
  4398  0ED1                     	;# 
  4399  0ED2                     	;# 
  4400  0ED3                     	;# 
  4401  0ED4                     	;# 
  4402  0ED5                     	;# 
  4403  0ED6                     	;# 
  4404  0ED7                     	;# 
  4405  0ED8                     	;# 
  4406  0ED9                     	;# 
  4407  0EDA                     	;# 
  4408  0EDB                     	;# 
  4409  0EDC                     	;# 
  4410  0EDD                     	;# 
  4411  0EDE                     	;# 
  4412  0EDF                     	;# 
  4413  0EE0                     	;# 
  4414  0EE1                     	;# 
  4415  0EE1                     	;# 
  4416  0EE2                     	;# 
  4417  0EE3                     	;# 
  4418  0EE3                     	;# 
  4419  0EE4                     	;# 
  4420  0EE5                     	;# 
  4421  0EE5                     	;# 
  4422  0EE6                     	;# 
  4423  0EE7                     	;# 
  4424  0EE7                     	;# 
  4425  0EE8                     	;# 
  4426  0EE9                     	;# 
  4427  0EEA                     	;# 
  4428  0EEB                     	;# 
  4429  0EEC                     	;# 
  4430  0EED                     	;# 
  4431  0EEE                     	;# 
  4432  0EEF                     	;# 
  4433  0F11                     	;# 
  4434  0F12                     	;# 
  4435  0F13                     	;# 
  4436  0F14                     	;# 
  4437  0F15                     	;# 
  4438  0F16                     	;# 
  4439  0F17                     	;# 
  4440  0F18                     	;# 
  4441  0F19                     	;# 
  4442  0F1A                     	;# 
  4443  0F1B                     	;# 
  4444  0F1C                     	;# 
  4445  0F1D                     	;# 
  4446  0F1E                     	;# 
  4447  0F1F                     	;# 
  4448  0F20                     	;# 
  4449  0F21                     	;# 
  4450  0F21                     	;# 
  4451  0F22                     	;# 
  4452  0F23                     	;# 
  4453  0F23                     	;# 
  4454  0F24                     	;# 
  4455  0F25                     	;# 
  4456  0F25                     	;# 
  4457  0F26                     	;# 
  4458  0F27                     	;# 
  4459  0F27                     	;# 
  4460  0F28                     	;# 
  4461  0F29                     	;# 
  4462  0F2A                     	;# 
  4463  0F2B                     	;# 
  4464  0F2C                     	;# 
  4465  0F2D                     	;# 
  4466  0F2E                     	;# 
  4467  0F2F                     	;# 
  4468  0FE4                     	;# 
  4469  0FE5                     	;# 
  4470  0FE6                     	;# 
  4471  0FE7                     	;# 
  4472  0FE8                     	;# 
  4473  0FE9                     	;# 
  4474  0FEA                     	;# 
  4475  0FEB                     	;# 
  4476  0FED                     	;# 
  4477  0FEE                     	;# 
  4478  0FEF                     	;# 
  4479  0000                     	;# 
  4480  0001                     	;# 
  4481  0002                     	;# 
  4482  0003                     	;# 
  4483  0004                     	;# 
  4484  0005                     	;# 
  4485  0006                     	;# 
  4486  0007                     	;# 
  4487  0008                     	;# 
  4488  0009                     	;# 
  4489  000A                     	;# 
  4490  000B                     	;# 
  4491  000C                     	;# 
  4492  000D                     	;# 
  4493  000E                     	;# 
  4494  000F                     	;# 
  4495  0010                     	;# 
  4496  0011                     	;# 
  4497  0012                     	;# 
  4498  0013                     	;# 
  4499  0014                     	;# 
  4500  0015                     	;# 
  4501  0016                     	;# 
  4502  0016                     	;# 
  4503  0017                     	;# 
  4504  0018                     	;# 
  4505  0019                     	;# 
  4506  001A                     	;# 
  4507  001B                     	;# 
  4508  001C                     	;# 
  4509  008C                     	;# 
  4510  008D                     	;# 
  4511  008E                     	;# 
  4512  008F                     	;# 
  4513  0090                     	;# 
  4514  0091                     	;# 
  4515  0092                     	;# 
  4516  0093                     	;# 
  4517  0094                     	;# 
  4518  0095                     	;# 
  4519  0096                     	;# 
  4520  0097                     	;# 
  4521  0098                     	;# 
  4522  0099                     	;# 
  4523  009A                     	;# 
  4524  009B                     	;# 
  4525  009B                     	;# 
  4526  009C                     	;# 
  4527  009D                     	;# 
  4528  009E                     	;# 
  4529  009F                     	;# 
  4530  010C                     	;# 
  4531  010D                     	;# 
  4532  010E                     	;# 
  4533  010F                     	;# 
  4534  0110                     	;# 
  4535  0111                     	;# 
  4536  0112                     	;# 
  4537  0113                     	;# 
  4538  0114                     	;# 
  4539  0115                     	;# 
  4540  0116                     	;# 
  4541  0117                     	;# 
  4542  0118                     	;# 
  4543  0119                     	;# 
  4544  011A                     	;# 
  4545  011B                     	;# 
  4546  011C                     	;# 
  4547  011D                     	;# 
  4548  011D                     	;# 
  4549  011D                     	;# 
  4550  011E                     	;# 
  4551  011F                     	;# 
  4552  018C                     	;# 
  4553  018D                     	;# 
  4554  018E                     	;# 
  4555  018F                     	;# 
  4556  0190                     	;# 
  4557  0191                     	;# 
  4558  0191                     	;# 
  4559  0192                     	;# 
  4560  0193                     	;# 
  4561  0193                     	;# 
  4562  0193                     	;# 
  4563  0194                     	;# 
  4564  0195                     	;# 
  4565  0196                     	;# 
  4566  0199                     	;# 
  4567  0199                     	;# 
  4568  0199                     	;# 
  4569  019A                     	;# 
  4570  019A                     	;# 
  4571  019A                     	;# 
  4572  019B                     	;# 
  4573  019B                     	;# 
  4574  019B                     	;# 
  4575  019B                     	;# 
  4576  019B                     	;# 
  4577  019C                     	;# 
  4578  019C                     	;# 
  4579  019C                     	;# 
  4580  019D                     	;# 
  4581  019D                     	;# 
  4582  019D                     	;# 
  4583  019E                     	;# 
  4584  019E                     	;# 
  4585  019E                     	;# 
  4586  019F                     	;# 
  4587  019F                     	;# 
  4588  019F                     	;# 
  4589  019F                     	;# 
  4590  019F                     	;# 
  4591  020C                     	;# 
  4592  020D                     	;# 
  4593  020E                     	;# 
  4594  020F                     	;# 
  4595  0210                     	;# 
  4596  0211                     	;# 
  4597  0211                     	;# 
  4598  0212                     	;# 
  4599  0212                     	;# 
  4600  0213                     	;# 
  4601  0213                     	;# 
  4602  0214                     	;# 
  4603  0214                     	;# 
  4604  0215                     	;# 
  4605  0215                     	;# 
  4606  0215                     	;# 
  4607  0215                     	;# 
  4608  0216                     	;# 
  4609  0216                     	;# 
  4610  0217                     	;# 
  4611  0217                     	;# 
  4612  028C                     	;# 
  4613  028D                     	;# 
  4614  028E                     	;# 
  4615  028F                     	;# 
  4616  0290                     	;# 
  4617  0291                     	;# 
  4618  0291                     	;# 
  4619  0292                     	;# 
  4620  0293                     	;# 
  4621  0298                     	;# 
  4622  0298                     	;# 
  4623  0299                     	;# 
  4624  029A                     	;# 
  4625  030C                     	;# 
  4626  030D                     	;# 
  4627  030E                     	;# 
  4628  030F                     	;# 
  4629  0310                     	;# 
  4630  0311                     	;# 
  4631  0311                     	;# 
  4632  0312                     	;# 
  4633  0313                     	;# 
  4634  038C                     	;# 
  4635  038D                     	;# 
  4636  038E                     	;# 
  4637  038F                     	;# 
  4638  0390                     	;# 
  4639  0391                     	;# 
  4640  0392                     	;# 
  4641  0393                     	;# 
  4642  0394                     	;# 
  4643  0395                     	;# 
  4644  0396                     	;# 
  4645  0397                     	;# 
  4646  0398                     	;# 
  4647  0399                     	;# 
  4648  039D                     	;# 
  4649  039E                     	;# 
  4650  039F                     	;# 
  4651  0511                     	;# 
  4652  0513                     	;# 
  4653  0515                     	;# 
  4654  051A                     	;# 
  4655  0591                     	;# 
  4656  0592                     	;# 
  4657  0592                     	;# 
  4658  0593                     	;# 
  4659  0594                     	;# 
  4660  0594                     	;# 
  4661  0595                     	;# 
  4662  0596                     	;# 
  4663  0596                     	;# 
  4664  0E91                     	;# 
  4665  0E92                     	;# 
  4666  0E93                     	;# 
  4667  0E94                     	;# 
  4668  0E95                     	;# 
  4669  0E96                     	;# 
  4670  0E97                     	;# 
  4671  0E98                     	;# 
  4672  0E99                     	;# 
  4673  0E9A                     	;# 
  4674  0E9B                     	;# 
  4675  0E9C                     	;# 
  4676  0E9D                     	;# 
  4677  0E9E                     	;# 
  4678  0E9F                     	;# 
  4679  0EA0                     	;# 
  4680  0EA1                     	;# 
  4681  0EA1                     	;# 
  4682  0EA2                     	;# 
  4683  0EA3                     	;# 
  4684  0EA3                     	;# 
  4685  0EA4                     	;# 
  4686  0EA5                     	;# 
  4687  0EA5                     	;# 
  4688  0EA6                     	;# 
  4689  0EA7                     	;# 
  4690  0EA7                     	;# 
  4691  0EA8                     	;# 
  4692  0EA9                     	;# 
  4693  0EAA                     	;# 
  4694  0EAB                     	;# 
  4695  0EAC                     	;# 
  4696  0EAD                     	;# 
  4697  0EAE                     	;# 
  4698  0EAF                     	;# 
  4699  0EB1                     	;# 
  4700  0EB2                     	;# 
  4701  0EB3                     	;# 
  4702  0EB4                     	;# 
  4703  0EB5                     	;# 
  4704  0EB6                     	;# 
  4705  0EB7                     	;# 
  4706  0EB8                     	;# 
  4707  0EB9                     	;# 
  4708  0EBA                     	;# 
  4709  0EBB                     	;# 
  4710  0EBC                     	;# 
  4711  0EBD                     	;# 
  4712  0EBE                     	;# 
  4713  0EBF                     	;# 
  4714  0EC0                     	;# 
  4715  0EC1                     	;# 
  4716  0EC1                     	;# 
  4717  0EC2                     	;# 
  4718  0EC3                     	;# 
  4719  0EC3                     	;# 
  4720  0EC4                     	;# 
  4721  0EC5                     	;# 
  4722  0EC5                     	;# 
  4723  0EC6                     	;# 
  4724  0EC7                     	;# 
  4725  0EC7                     	;# 
  4726  0EC8                     	;# 
  4727  0EC9                     	;# 
  4728  0ECA                     	;# 
  4729  0ECB                     	;# 
  4730  0ECC                     	;# 
  4731  0ECD                     	;# 
  4732  0ECE                     	;# 
  4733  0ECF                     	;# 
  4734  0ED1                     	;# 
  4735  0ED2                     	;# 
  4736  0ED3                     	;# 
  4737  0ED4                     	;# 
  4738  0ED5                     	;# 
  4739  0ED6                     	;# 
  4740  0ED7                     	;# 
  4741  0ED8                     	;# 
  4742  0ED9                     	;# 
  4743  0EDA                     	;# 
  4744  0EDB                     	;# 
  4745  0EDC                     	;# 
  4746  0EDD                     	;# 
  4747  0EDE                     	;# 
  4748  0EDF                     	;# 
  4749  0EE0                     	;# 
  4750  0EE1                     	;# 
  4751  0EE1                     	;# 
  4752  0EE2                     	;# 
  4753  0EE3                     	;# 
  4754  0EE3                     	;# 
  4755  0EE4                     	;# 
  4756  0EE5                     	;# 
  4757  0EE5                     	;# 
  4758  0EE6                     	;# 
  4759  0EE7                     	;# 
  4760  0EE7                     	;# 
  4761  0EE8                     	;# 
  4762  0EE9                     	;# 
  4763  0EEA                     	;# 
  4764  0EEB                     	;# 
  4765  0EEC                     	;# 
  4766  0EED                     	;# 
  4767  0EEE                     	;# 
  4768  0EEF                     	;# 
  4769  0F11                     	;# 
  4770  0F12                     	;# 
  4771  0F13                     	;# 
  4772  0F14                     	;# 
  4773  0F15                     	;# 
  4774  0F16                     	;# 
  4775  0F17                     	;# 
  4776  0F18                     	;# 
  4777  0F19                     	;# 
  4778  0F1A                     	;# 
  4779  0F1B                     	;# 
  4780  0F1C                     	;# 
  4781  0F1D                     	;# 
  4782  0F1E                     	;# 
  4783  0F1F                     	;# 
  4784  0F20                     	;# 
  4785  0F21                     	;# 
  4786  0F21                     	;# 
  4787  0F22                     	;# 
  4788  0F23                     	;# 
  4789  0F23                     	;# 
  4790  0F24                     	;# 
  4791  0F25                     	;# 
  4792  0F25                     	;# 
  4793  0F26                     	;# 
  4794  0F27                     	;# 
  4795  0F27                     	;# 
  4796  0F28                     	;# 
  4797  0F29                     	;# 
  4798  0F2A                     	;# 
  4799  0F2B                     	;# 
  4800  0F2C                     	;# 
  4801  0F2D                     	;# 
  4802  0F2E                     	;# 
  4803  0F2F                     	;# 
  4804  0FE4                     	;# 
  4805  0FE5                     	;# 
  4806  0FE6                     	;# 
  4807  0FE7                     	;# 
  4808  0FE8                     	;# 
  4809  0FE9                     	;# 
  4810  0FEA                     	;# 
  4811  0FEB                     	;# 
  4812  0FED                     	;# 
  4813  0FEE                     	;# 
  4814  0FEF                     	;# 
  4815  0000                     	;# 
  4816  0001                     	;# 
  4817  0002                     	;# 
  4818  0003                     	;# 
  4819  0004                     	;# 
  4820  0005                     	;# 
  4821  0006                     	;# 
  4822  0007                     	;# 
  4823  0008                     	;# 
  4824  0009                     	;# 
  4825  000A                     	;# 
  4826  000B                     	;# 
  4827  000C                     	;# 
  4828  000D                     	;# 
  4829  000E                     	;# 
  4830  000F                     	;# 
  4831  0010                     	;# 
  4832  0011                     	;# 
  4833  0012                     	;# 
  4834  0013                     	;# 
  4835  0014                     	;# 
  4836  0015                     	;# 
  4837  0016                     	;# 
  4838  0016                     	;# 
  4839  0017                     	;# 
  4840  0018                     	;# 
  4841  0019                     	;# 
  4842  001A                     	;# 
  4843  001B                     	;# 
  4844  001C                     	;# 
  4845  008C                     	;# 
  4846  008D                     	;# 
  4847  008E                     	;# 
  4848  008F                     	;# 
  4849  0090                     	;# 
  4850  0091                     	;# 
  4851  0092                     	;# 
  4852  0093                     	;# 
  4853  0094                     	;# 
  4854  0095                     	;# 
  4855  0096                     	;# 
  4856  0097                     	;# 
  4857  0098                     	;# 
  4858  0099                     	;# 
  4859  009A                     	;# 
  4860  009B                     	;# 
  4861  009B                     	;# 
  4862  009C                     	;# 
  4863  009D                     	;# 
  4864  009E                     	;# 
  4865  009F                     	;# 
  4866  010C                     	;# 
  4867  010D                     	;# 
  4868  010E                     	;# 
  4869  010F                     	;# 
  4870  0110                     	;# 
  4871  0111                     	;# 
  4872  0112                     	;# 
  4873  0113                     	;# 
  4874  0114                     	;# 
  4875  0115                     	;# 
  4876  0116                     	;# 
  4877  0117                     	;# 
  4878  0118                     	;# 
  4879  0119                     	;# 
  4880  011A                     	;# 
  4881  011B                     	;# 
  4882  011C                     	;# 
  4883  011D                     	;# 
  4884  011D                     	;# 
  4885  011D                     	;# 
  4886  011E                     	;# 
  4887  011F                     	;# 
  4888  018C                     	;# 
  4889  018D                     	;# 
  4890  018E                     	;# 
  4891  018F                     	;# 
  4892  0190                     	;# 
  4893  0191                     	;# 
  4894  0191                     	;# 
  4895  0192                     	;# 
  4896  0193                     	;# 
  4897  0193                     	;# 
  4898  0193                     	;# 
  4899  0194                     	;# 
  4900  0195                     	;# 
  4901  0196                     	;# 
  4902  0199                     	;# 
  4903  0199                     	;# 
  4904  0199                     	;# 
  4905  019A                     	;# 
  4906  019A                     	;# 
  4907  019A                     	;# 
  4908  019B                     	;# 
  4909  019B                     	;# 
  4910  019B                     	;# 
  4911  019B                     	;# 
  4912  019B                     	;# 
  4913  019C                     	;# 
  4914  019C                     	;# 
  4915  019C                     	;# 
  4916  019D                     	;# 
  4917  019D                     	;# 
  4918  019D                     	;# 
  4919  019E                     	;# 
  4920  019E                     	;# 
  4921  019E                     	;# 
  4922  019F                     	;# 
  4923  019F                     	;# 
  4924  019F                     	;# 
  4925  019F                     	;# 
  4926  019F                     	;# 
  4927  020C                     	;# 
  4928  020D                     	;# 
  4929  020E                     	;# 
  4930  020F                     	;# 
  4931  0210                     	;# 
  4932  0211                     	;# 
  4933  0211                     	;# 
  4934  0212                     	;# 
  4935  0212                     	;# 
  4936  0213                     	;# 
  4937  0213                     	;# 
  4938  0214                     	;# 
  4939  0214                     	;# 
  4940  0215                     	;# 
  4941  0215                     	;# 
  4942  0215                     	;# 
  4943  0215                     	;# 
  4944  0216                     	;# 
  4945  0216                     	;# 
  4946  0217                     	;# 
  4947  0217                     	;# 
  4948  028C                     	;# 
  4949  028D                     	;# 
  4950  028E                     	;# 
  4951  028F                     	;# 
  4952  0290                     	;# 
  4953  0291                     	;# 
  4954  0291                     	;# 
  4955  0292                     	;# 
  4956  0293                     	;# 
  4957  0298                     	;# 
  4958  0298                     	;# 
  4959  0299                     	;# 
  4960  029A                     	;# 
  4961  030C                     	;# 
  4962  030D                     	;# 
  4963  030E                     	;# 
  4964  030F                     	;# 
  4965  0310                     	;# 
  4966  0311                     	;# 
  4967  0311                     	;# 
  4968  0312                     	;# 
  4969  0313                     	;# 
  4970  038C                     	;# 
  4971  038D                     	;# 
  4972  038E                     	;# 
  4973  038F                     	;# 
  4974  0390                     	;# 
  4975  0391                     	;# 
  4976  0392                     	;# 
  4977  0393                     	;# 
  4978  0394                     	;# 
  4979  0395                     	;# 
  4980  0396                     	;# 
  4981  0397                     	;# 
  4982  0398                     	;# 
  4983  0399                     	;# 
  4984  039D                     	;# 
  4985  039E                     	;# 
  4986  039F                     	;# 
  4987  0511                     	;# 
  4988  0513                     	;# 
  4989  0515                     	;# 
  4990  051A                     	;# 
  4991  0591                     	;# 
  4992  0592                     	;# 
  4993  0592                     	;# 
  4994  0593                     	;# 
  4995  0594                     	;# 
  4996  0594                     	;# 
  4997  0595                     	;# 
  4998  0596                     	;# 
  4999  0596                     	;# 
  5000  0E91                     	;# 
  5001  0E92                     	;# 
  5002  0E93                     	;# 
  5003  0E94                     	;# 
  5004  0E95                     	;# 
  5005  0E96                     	;# 
  5006  0E97                     	;# 
  5007  0E98                     	;# 
  5008  0E99                     	;# 
  5009  0E9A                     	;# 
  5010  0E9B                     	;# 
  5011  0E9C                     	;# 
  5012  0E9D                     	;# 
  5013  0E9E                     	;# 
  5014  0E9F                     	;# 
  5015  0EA0                     	;# 
  5016  0EA1                     	;# 
  5017  0EA1                     	;# 
  5018  0EA2                     	;# 
  5019  0EA3                     	;# 
  5020  0EA3                     	;# 
  5021  0EA4                     	;# 
  5022  0EA5                     	;# 
  5023  0EA5                     	;# 
  5024  0EA6                     	;# 
  5025  0EA7                     	;# 
  5026  0EA7                     	;# 
  5027  0EA8                     	;# 
  5028  0EA9                     	;# 
  5029  0EAA                     	;# 
  5030  0EAB                     	;# 
  5031  0EAC                     	;# 
  5032  0EAD                     	;# 
  5033  0EAE                     	;# 
  5034  0EAF                     	;# 
  5035  0EB1                     	;# 
  5036  0EB2                     	;# 
  5037  0EB3                     	;# 
  5038  0EB4                     	;# 
  5039  0EB5                     	;# 
  5040  0EB6                     	;# 
  5041  0EB7                     	;# 
  5042  0EB8                     	;# 
  5043  0EB9                     	;# 
  5044  0EBA                     	;# 
  5045  0EBB                     	;# 
  5046  0EBC                     	;# 
  5047  0EBD                     	;# 
  5048  0EBE                     	;# 
  5049  0EBF                     	;# 
  5050  0EC0                     	;# 
  5051  0EC1                     	;# 
  5052  0EC1                     	;# 
  5053  0EC2                     	;# 
  5054  0EC3                     	;# 
  5055  0EC3                     	;# 
  5056  0EC4                     	;# 
  5057  0EC5                     	;# 
  5058  0EC5                     	;# 
  5059  0EC6                     	;# 
  5060  0EC7                     	;# 
  5061  0EC7                     	;# 
  5062  0EC8                     	;# 
  5063  0EC9                     	;# 
  5064  0ECA                     	;# 
  5065  0ECB                     	;# 
  5066  0ECC                     	;# 
  5067  0ECD                     	;# 
  5068  0ECE                     	;# 
  5069  0ECF                     	;# 
  5070  0ED1                     	;# 
  5071  0ED2                     	;# 
  5072  0ED3                     	;# 
  5073  0ED4                     	;# 
  5074  0ED5                     	;# 
  5075  0ED6                     	;# 
  5076  0ED7                     	;# 
  5077  0ED8                     	;# 
  5078  0ED9                     	;# 
  5079  0EDA                     	;# 
  5080  0EDB                     	;# 
  5081  0EDC                     	;# 
  5082  0EDD                     	;# 
  5083  0EDE                     	;# 
  5084  0EDF                     	;# 
  5085  0EE0                     	;# 
  5086  0EE1                     	;# 
  5087  0EE1                     	;# 
  5088  0EE2                     	;# 
  5089  0EE3                     	;# 
  5090  0EE3                     	;# 
  5091  0EE4                     	;# 
  5092  0EE5                     	;# 
  5093  0EE5                     	;# 
  5094  0EE6                     	;# 
  5095  0EE7                     	;# 
  5096  0EE7                     	;# 
  5097  0EE8                     	;# 
  5098  0EE9                     	;# 
  5099  0EEA                     	;# 
  5100  0EEB                     	;# 
  5101  0EEC                     	;# 
  5102  0EED                     	;# 
  5103  0EEE                     	;# 
  5104  0EEF                     	;# 
  5105  0F11                     	;# 
  5106  0F12                     	;# 
  5107  0F13                     	;# 
  5108  0F14                     	;# 
  5109  0F15                     	;# 
  5110  0F16                     	;# 
  5111  0F17                     	;# 
  5112  0F18                     	;# 
  5113  0F19                     	;# 
  5114  0F1A                     	;# 
  5115  0F1B                     	;# 
  5116  0F1C                     	;# 
  5117  0F1D                     	;# 
  5118  0F1E                     	;# 
  5119  0F1F                     	;# 
  5120  0F20                     	;# 
  5121  0F21                     	;# 
  5122  0F21                     	;# 
  5123  0F22                     	;# 
  5124  0F23                     	;# 
  5125  0F23                     	;# 
  5126  0F24                     	;# 
  5127  0F25                     	;# 
  5128  0F25                     	;# 
  5129  0F26                     	;# 
  5130  0F27                     	;# 
  5131  0F27                     	;# 
  5132  0F28                     	;# 
  5133  0F29                     	;# 
  5134  0F2A                     	;# 
  5135  0F2B                     	;# 
  5136  0F2C                     	;# 
  5137  0F2D                     	;# 
  5138  0F2E                     	;# 
  5139  0F2F                     	;# 
  5140  0FE4                     	;# 
  5141  0FE5                     	;# 
  5142  0FE6                     	;# 
  5143  0FE7                     	;# 
  5144  0FE8                     	;# 
  5145  0FE9                     	;# 
  5146  0FEA                     	;# 
  5147  0FEB                     	;# 
  5148  0FED                     	;# 
  5149  0FEE                     	;# 
  5150  0FEF                     	;# 
  5151  0000                     	;# 
  5152  0001                     	;# 
  5153  0002                     	;# 
  5154  0003                     	;# 
  5155  0004                     	;# 
  5156  0005                     	;# 
  5157  0006                     	;# 
  5158  0007                     	;# 
  5159  0008                     	;# 
  5160  0009                     	;# 
  5161  000A                     	;# 
  5162  000B                     	;# 
  5163  000C                     	;# 
  5164  000D                     	;# 
  5165  000E                     	;# 
  5166  000F                     	;# 
  5167  0010                     	;# 
  5168  0011                     	;# 
  5169  0012                     	;# 
  5170  0013                     	;# 
  5171  0014                     	;# 
  5172  0015                     	;# 
  5173  0016                     	;# 
  5174  0016                     	;# 
  5175  0017                     	;# 
  5176  0018                     	;# 
  5177  0019                     	;# 
  5178  001A                     	;# 
  5179  001B                     	;# 
  5180  001C                     	;# 
  5181  008C                     	;# 
  5182  008D                     	;# 
  5183  008E                     	;# 
  5184  008F                     	;# 
  5185  0090                     	;# 
  5186  0091                     	;# 
  5187  0092                     	;# 
  5188  0093                     	;# 
  5189  0094                     	;# 
  5190  0095                     	;# 
  5191  0096                     	;# 
  5192  0097                     	;# 
  5193  0098                     	;# 
  5194  0099                     	;# 
  5195  009A                     	;# 
  5196  009B                     	;# 
  5197  009B                     	;# 
  5198  009C                     	;# 
  5199  009D                     	;# 
  5200  009E                     	;# 
  5201  009F                     	;# 
  5202  010C                     	;# 
  5203  010D                     	;# 
  5204  010E                     	;# 
  5205  010F                     	;# 
  5206  0110                     	;# 
  5207  0111                     	;# 
  5208  0112                     	;# 
  5209  0113                     	;# 
  5210  0114                     	;# 
  5211  0115                     	;# 
  5212  0116                     	;# 
  5213  0117                     	;# 
  5214  0118                     	;# 
  5215  0119                     	;# 
  5216  011A                     	;# 
  5217  011B                     	;# 
  5218  011C                     	;# 
  5219  011D                     	;# 
  5220  011D                     	;# 
  5221  011D                     	;# 
  5222  011E                     	;# 
  5223  011F                     	;# 
  5224  018C                     	;# 
  5225  018D                     	;# 
  5226  018E                     	;# 
  5227  018F                     	;# 
  5228  0190                     	;# 
  5229  0191                     	;# 
  5230  0191                     	;# 
  5231  0192                     	;# 
  5232  0193                     	;# 
  5233  0193                     	;# 
  5234  0193                     	;# 
  5235  0194                     	;# 
  5236  0195                     	;# 
  5237  0196                     	;# 
  5238  0199                     	;# 
  5239  0199                     	;# 
  5240  0199                     	;# 
  5241  019A                     	;# 
  5242  019A                     	;# 
  5243  019A                     	;# 
  5244  019B                     	;# 
  5245  019B                     	;# 
  5246  019B                     	;# 
  5247  019B                     	;# 
  5248  019B                     	;# 
  5249  019C                     	;# 
  5250  019C                     	;# 
  5251  019C                     	;# 
  5252  019D                     	;# 
  5253  019D                     	;# 
  5254  019D                     	;# 
  5255  019E                     	;# 
  5256  019E                     	;# 
  5257  019E                     	;# 
  5258  019F                     	;# 
  5259  019F                     	;# 
  5260  019F                     	;# 
  5261  019F                     	;# 
  5262  019F                     	;# 
  5263  020C                     	;# 
  5264  020D                     	;# 
  5265  020E                     	;# 
  5266  020F                     	;# 
  5267  0210                     	;# 
  5268  0211                     	;# 
  5269  0211                     	;# 
  5270  0212                     	;# 
  5271  0212                     	;# 
  5272  0213                     	;# 
  5273  0213                     	;# 
  5274  0214                     	;# 
  5275  0214                     	;# 
  5276  0215                     	;# 
  5277  0215                     	;# 
  5278  0215                     	;# 
  5279  0215                     	;# 
  5280  0216                     	;# 
  5281  0216                     	;# 
  5282  0217                     	;# 
  5283  0217                     	;# 
  5284  028C                     	;# 
  5285  028D                     	;# 
  5286  028E                     	;# 
  5287  028F                     	;# 
  5288  0290                     	;# 
  5289  0291                     	;# 
  5290  0291                     	;# 
  5291  0292                     	;# 
  5292  0293                     	;# 
  5293  0298                     	;# 
  5294  0298                     	;# 
  5295  0299                     	;# 
  5296  029A                     	;# 
  5297  030C                     	;# 
  5298  030D                     	;# 
  5299  030E                     	;# 
  5300  030F                     	;# 
  5301  0310                     	;# 
  5302  0311                     	;# 
  5303  0311                     	;# 
  5304  0312                     	;# 
  5305  0313                     	;# 
  5306  038C                     	;# 
  5307  038D                     	;# 
  5308  038E                     	;# 
  5309  038F                     	;# 
  5310  0390                     	;# 
  5311  0391                     	;# 
  5312  0392                     	;# 
  5313  0393                     	;# 
  5314  0394                     	;# 
  5315  0395                     	;# 
  5316  0396                     	;# 
  5317  0397                     	;# 
  5318  0398                     	;# 
  5319  0399                     	;# 
  5320  039D                     	;# 
  5321  039E                     	;# 
  5322  039F                     	;# 
  5323  0511                     	;# 
  5324  0513                     	;# 
  5325  0515                     	;# 
  5326  051A                     	;# 
  5327  0591                     	;# 
  5328  0592                     	;# 
  5329  0592                     	;# 
  5330  0593                     	;# 
  5331  0594                     	;# 
  5332  0594                     	;# 
  5333  0595                     	;# 
  5334  0596                     	;# 
  5335  0596                     	;# 
  5336  0E91                     	;# 
  5337  0E92                     	;# 
  5338  0E93                     	;# 
  5339  0E94                     	;# 
  5340  0E95                     	;# 
  5341  0E96                     	;# 
  5342  0E97                     	;# 
  5343  0E98                     	;# 
  5344  0E99                     	;# 
  5345  0E9A                     	;# 
  5346  0E9B                     	;# 
  5347  0E9C                     	;# 
  5348  0E9D                     	;# 
  5349  0E9E                     	;# 
  5350  0E9F                     	;# 
  5351  0EA0                     	;# 
  5352  0EA1                     	;# 
  5353  0EA1                     	;# 
  5354  0EA2                     	;# 
  5355  0EA3                     	;# 
  5356  0EA3                     	;# 
  5357  0EA4                     	;# 
  5358  0EA5                     	;# 
  5359  0EA5                     	;# 
  5360  0EA6                     	;# 
  5361  0EA7                     	;# 
  5362  0EA7                     	;# 
  5363  0EA8                     	;# 
  5364  0EA9                     	;# 
  5365  0EAA                     	;# 
  5366  0EAB                     	;# 
  5367  0EAC                     	;# 
  5368  0EAD                     	;# 
  5369  0EAE                     	;# 
  5370  0EAF                     	;# 
  5371  0EB1                     	;# 
  5372  0EB2                     	;# 
  5373  0EB3                     	;# 
  5374  0EB4                     	;# 
  5375  0EB5                     	;# 
  5376  0EB6                     	;# 
  5377  0EB7                     	;# 
  5378  0EB8                     	;# 
  5379  0EB9                     	;# 
  5380  0EBA                     	;# 
  5381  0EBB                     	;# 
  5382  0EBC                     	;# 
  5383  0EBD                     	;# 
  5384  0EBE                     	;# 
  5385  0EBF                     	;# 
  5386  0EC0                     	;# 
  5387  0EC1                     	;# 
  5388  0EC1                     	;# 
  5389  0EC2                     	;# 
  5390  0EC3                     	;# 
  5391  0EC3                     	;# 
  5392  0EC4                     	;# 
  5393  0EC5                     	;# 
  5394  0EC5                     	;# 
  5395  0EC6                     	;# 
  5396  0EC7                     	;# 
  5397  0EC7                     	;# 
  5398  0EC8                     	;# 
  5399  0EC9                     	;# 
  5400  0ECA                     	;# 
  5401  0ECB                     	;# 
  5402  0ECC                     	;# 
  5403  0ECD                     	;# 
  5404  0ECE                     	;# 
  5405  0ECF                     	;# 
  5406  0ED1                     	;# 
  5407  0ED2                     	;# 
  5408  0ED3                     	;# 
  5409  0ED4                     	;# 
  5410  0ED5                     	;# 
  5411  0ED6                     	;# 
  5412  0ED7                     	;# 
  5413  0ED8                     	;# 
  5414  0ED9                     	;# 
  5415  0EDA                     	;# 
  5416  0EDB                     	;# 
  5417  0EDC                     	;# 
  5418  0EDD                     	;# 
  5419  0EDE                     	;# 
  5420  0EDF                     	;# 
  5421  0EE0                     	;# 
  5422  0EE1                     	;# 
  5423  0EE1                     	;# 
  5424  0EE2                     	;# 
  5425  0EE3                     	;# 
  5426  0EE3                     	;# 
  5427  0EE4                     	;# 
  5428  0EE5                     	;# 
  5429  0EE5                     	;# 
  5430  0EE6                     	;# 
  5431  0EE7                     	;# 
  5432  0EE7                     	;# 
  5433  0EE8                     	;# 
  5434  0EE9                     	;# 
  5435  0EEA                     	;# 
  5436  0EEB                     	;# 
  5437  0EEC                     	;# 
  5438  0EED                     	;# 
  5439  0EEE                     	;# 
  5440  0EEF                     	;# 
  5441  0F11                     	;# 
  5442  0F12                     	;# 
  5443  0F13                     	;# 
  5444  0F14                     	;# 
  5445  0F15                     	;# 
  5446  0F16                     	;# 
  5447  0F17                     	;# 
  5448  0F18                     	;# 
  5449  0F19                     	;# 
  5450  0F1A                     	;# 
  5451  0F1B                     	;# 
  5452  0F1C                     	;# 
  5453  0F1D                     	;# 
  5454  0F1E                     	;# 
  5455  0F1F                     	;# 
  5456  0F20                     	;# 
  5457  0F21                     	;# 
  5458  0F21                     	;# 
  5459  0F22                     	;# 
  5460  0F23                     	;# 
  5461  0F23                     	;# 
  5462  0F24                     	;# 
  5463  0F25                     	;# 
  5464  0F25                     	;# 
  5465  0F26                     	;# 
  5466  0F27                     	;# 
  5467  0F27                     	;# 
  5468  0F28                     	;# 
  5469  0F29                     	;# 
  5470  0F2A                     	;# 
  5471  0F2B                     	;# 
  5472  0F2C                     	;# 
  5473  0F2D                     	;# 
  5474  0F2E                     	;# 
  5475  0F2F                     	;# 
  5476  0FE4                     	;# 
  5477  0FE5                     	;# 
  5478  0FE6                     	;# 
  5479  0FE7                     	;# 
  5480  0FE8                     	;# 
  5481  0FE9                     	;# 
  5482  0FEA                     	;# 
  5483  0FEB                     	;# 
  5484  0FED                     	;# 
  5485  0FEE                     	;# 
  5486  0FEF                     	;# 
  5487  0000                     	;# 
  5488  0001                     	;# 
  5489  0002                     	;# 
  5490  0003                     	;# 
  5491  0004                     	;# 
  5492  0005                     	;# 
  5493  0006                     	;# 
  5494  0007                     	;# 
  5495  0008                     	;# 
  5496  0009                     	;# 
  5497  000A                     	;# 
  5498  000B                     	;# 
  5499  000C                     	;# 
  5500  000D                     	;# 
  5501  000E                     	;# 
  5502  000F                     	;# 
  5503  0010                     	;# 
  5504  0011                     	;# 
  5505  0012                     	;# 
  5506  0013                     	;# 
  5507  0014                     	;# 
  5508  0015                     	;# 
  5509  0016                     	;# 
  5510  0016                     	;# 
  5511  0017                     	;# 
  5512  0018                     	;# 
  5513  0019                     	;# 
  5514  001A                     	;# 
  5515  001B                     	;# 
  5516  001C                     	;# 
  5517  008C                     	;# 
  5518  008D                     	;# 
  5519  008E                     	;# 
  5520  008F                     	;# 
  5521  0090                     	;# 
  5522  0091                     	;# 
  5523  0092                     	;# 
  5524  0093                     	;# 
  5525  0094                     	;# 
  5526  0095                     	;# 
  5527  0096                     	;# 
  5528  0097                     	;# 
  5529  0098                     	;# 
  5530  0099                     	;# 
  5531  009A                     	;# 
  5532  009B                     	;# 
  5533  009B                     	;# 
  5534  009C                     	;# 
  5535  009D                     	;# 
  5536  009E                     	;# 
  5537  009F                     	;# 
  5538  010C                     	;# 
  5539  010D                     	;# 
  5540  010E                     	;# 
  5541  010F                     	;# 
  5542  0110                     	;# 
  5543  0111                     	;# 
  5544  0112                     	;# 
  5545  0113                     	;# 
  5546  0114                     	;# 
  5547  0115                     	;# 
  5548  0116                     	;# 
  5549  0117                     	;# 
  5550  0118                     	;# 
  5551  0119                     	;# 
  5552  011A                     	;# 
  5553  011B                     	;# 
  5554  011C                     	;# 
  5555  011D                     	;# 
  5556  011D                     	;# 
  5557  011D                     	;# 
  5558  011E                     	;# 
  5559  011F                     	;# 
  5560  018C                     	;# 
  5561  018D                     	;# 
  5562  018E                     	;# 
  5563  018F                     	;# 
  5564  0190                     	;# 
  5565  0191                     	;# 
  5566  0191                     	;# 
  5567  0192                     	;# 
  5568  0193                     	;# 
  5569  0193                     	;# 
  5570  0193                     	;# 
  5571  0194                     	;# 
  5572  0195                     	;# 
  5573  0196                     	;# 
  5574  0199                     	;# 
  5575  0199                     	;# 
  5576  0199                     	;# 
  5577  019A                     	;# 
  5578  019A                     	;# 
  5579  019A                     	;# 
  5580  019B                     	;# 
  5581  019B                     	;# 
  5582  019B                     	;# 
  5583  019B                     	;# 
  5584  019B                     	;# 
  5585  019C                     	;# 
  5586  019C                     	;# 
  5587  019C                     	;# 
  5588  019D                     	;# 
  5589  019D                     	;# 
  5590  019D                     	;# 
  5591  019E                     	;# 
  5592  019E                     	;# 
  5593  019E                     	;# 
  5594  019F                     	;# 
  5595  019F                     	;# 
  5596  019F                     	;# 
  5597  019F                     	;# 
  5598  019F                     	;# 
  5599  020C                     	;# 
  5600  020D                     	;# 
  5601  020E                     	;# 
  5602  020F                     	;# 
  5603  0210                     	;# 
  5604  0211                     	;# 
  5605  0211                     	;# 
  5606  0212                     	;# 
  5607  0212                     	;# 
  5608  0213                     	;# 
  5609  0213                     	;# 
  5610  0214                     	;# 
  5611  0214                     	;# 
  5612  0215                     	;# 
  5613  0215                     	;# 
  5614  0215                     	;# 
  5615  0215                     	;# 
  5616  0216                     	;# 
  5617  0216                     	;# 
  5618  0217                     	;# 
  5619  0217                     	;# 
  5620  028C                     	;# 
  5621  028D                     	;# 
  5622  028E                     	;# 
  5623  028F                     	;# 
  5624  0290                     	;# 
  5625  0291                     	;# 
  5626  0291                     	;# 
  5627  0292                     	;# 
  5628  0293                     	;# 
  5629  0298                     	;# 
  5630  0298                     	;# 
  5631  0299                     	;# 
  5632  029A                     	;# 
  5633  030C                     	;# 
  5634  030D                     	;# 
  5635  030E                     	;# 
  5636  030F                     	;# 
  5637  0310                     	;# 
  5638  0311                     	;# 
  5639  0311                     	;# 
  5640  0312                     	;# 
  5641  0313                     	;# 
  5642  038C                     	;# 
  5643  038D                     	;# 
  5644  038E                     	;# 
  5645  038F                     	;# 
  5646  0390                     	;# 
  5647  0391                     	;# 
  5648  0392                     	;# 
  5649  0393                     	;# 
  5650  0394                     	;# 
  5651  0395                     	;# 
  5652  0396                     	;# 
  5653  0397                     	;# 
  5654  0398                     	;# 
  5655  0399                     	;# 
  5656  039D                     	;# 
  5657  039E                     	;# 
  5658  039F                     	;# 
  5659  0511                     	;# 
  5660  0513                     	;# 
  5661  0515                     	;# 
  5662  051A                     	;# 
  5663  0591                     	;# 
  5664  0592                     	;# 
  5665  0592                     	;# 
  5666  0593                     	;# 
  5667  0594                     	;# 
  5668  0594                     	;# 
  5669  0595                     	;# 
  5670  0596                     	;# 
  5671  0596                     	;# 
  5672  0E91                     	;# 
  5673  0E92                     	;# 
  5674  0E93                     	;# 
  5675  0E94                     	;# 
  5676  0E95                     	;# 
  5677  0E96                     	;# 
  5678  0E97                     	;# 
  5679  0E98                     	;# 
  5680  0E99                     	;# 
  5681  0E9A                     	;# 
  5682  0E9B                     	;# 
  5683  0E9C                     	;# 
  5684  0E9D                     	;# 
  5685  0E9E                     	;# 
  5686  0E9F                     	;# 
  5687  0EA0                     	;# 
  5688  0EA1                     	;# 
  5689  0EA1                     	;# 
  5690  0EA2                     	;# 
  5691  0EA3                     	;# 
  5692  0EA3                     	;# 
  5693  0EA4                     	;# 
  5694  0EA5                     	;# 
  5695  0EA5                     	;# 
  5696  0EA6                     	;# 
  5697  0EA7                     	;# 
  5698  0EA7                     	;# 
  5699  0EA8                     	;# 
  5700  0EA9                     	;# 
  5701  0EAA                     	;# 
  5702  0EAB                     	;# 
  5703  0EAC                     	;# 
  5704  0EAD                     	;# 
  5705  0EAE                     	;# 
  5706  0EAF                     	;# 
  5707  0EB1                     	;# 
  5708  0EB2                     	;# 
  5709  0EB3                     	;# 
  5710  0EB4                     	;# 
  5711  0EB5                     	;# 
  5712  0EB6                     	;# 
  5713  0EB7                     	;# 
  5714  0EB8                     	;# 
  5715  0EB9                     	;# 
  5716  0EBA                     	;# 
  5717  0EBB                     	;# 
  5718  0EBC                     	;# 
  5719  0EBD                     	;# 
  5720  0EBE                     	;# 
  5721  0EBF                     	;# 
  5722  0EC0                     	;# 
  5723  0EC1                     	;# 
  5724  0EC1                     	;# 
  5725  0EC2                     	;# 
  5726  0EC3                     	;# 
  5727  0EC3                     	;# 
  5728  0EC4                     	;# 
  5729  0EC5                     	;# 
  5730  0EC5                     	;# 
  5731  0EC6                     	;# 
  5732  0EC7                     	;# 
  5733  0EC7                     	;# 
  5734  0EC8                     	;# 
  5735  0EC9                     	;# 
  5736  0ECA                     	;# 
  5737  0ECB                     	;# 
  5738  0ECC                     	;# 
  5739  0ECD                     	;# 
  5740  0ECE                     	;# 
  5741  0ECF                     	;# 
  5742  0ED1                     	;# 
  5743  0ED2                     	;# 
  5744  0ED3                     	;# 
  5745  0ED4                     	;# 
  5746  0ED5                     	;# 
  5747  0ED6                     	;# 
  5748  0ED7                     	;# 
  5749  0ED8                     	;# 
  5750  0ED9                     	;# 
  5751  0EDA                     	;# 
  5752  0EDB                     	;# 
  5753  0EDC                     	;# 
  5754  0EDD                     	;# 
  5755  0EDE                     	;# 
  5756  0EDF                     	;# 
  5757  0EE0                     	;# 
  5758  0EE1                     	;# 
  5759  0EE1                     	;# 
  5760  0EE2                     	;# 
  5761  0EE3                     	;# 
  5762  0EE3                     	;# 
  5763  0EE4                     	;# 
  5764  0EE5                     	;# 
  5765  0EE5                     	;# 
  5766  0EE6                     	;# 
  5767  0EE7                     	;# 
  5768  0EE7                     	;# 
  5769  0EE8                     	;# 
  5770  0EE9                     	;# 
  5771  0EEA                     	;# 
  5772  0EEB                     	;# 
  5773  0EEC                     	;# 
  5774  0EED                     	;# 
  5775  0EEE                     	;# 
  5776  0EEF                     	;# 
  5777  0F11                     	;# 
  5778  0F12                     	;# 
  5779  0F13                     	;# 
  5780  0F14                     	;# 
  5781  0F15                     	;# 
  5782  0F16                     	;# 
  5783  0F17                     	;# 
  5784  0F18                     	;# 
  5785  0F19                     	;# 
  5786  0F1A                     	;# 
  5787  0F1B                     	;# 
  5788  0F1C                     	;# 
  5789  0F1D                     	;# 
  5790  0F1E                     	;# 
  5791  0F1F                     	;# 
  5792  0F20                     	;# 
  5793  0F21                     	;# 
  5794  0F21                     	;# 
  5795  0F22                     	;# 
  5796  0F23                     	;# 
  5797  0F23                     	;# 
  5798  0F24                     	;# 
  5799  0F25                     	;# 
  5800  0F25                     	;# 
  5801  0F26                     	;# 
  5802  0F27                     	;# 
  5803  0F27                     	;# 
  5804  0F28                     	;# 
  5805  0F29                     	;# 
  5806  0F2A                     	;# 
  5807  0F2B                     	;# 
  5808  0F2C                     	;# 
  5809  0F2D                     	;# 
  5810  0F2E                     	;# 
  5811  0F2F                     	;# 
  5812  0FE4                     	;# 
  5813  0FE5                     	;# 
  5814  0FE6                     	;# 
  5815  0FE7                     	;# 
  5816  0FE8                     	;# 
  5817  0FE9                     	;# 
  5818  0FEA                     	;# 
  5819  0FEB                     	;# 
  5820  0FED                     	;# 
  5821  0FEE                     	;# 
  5822  0FEF                     	;# 
  5823  0000                     	;# 
  5824  0001                     	;# 
  5825  0002                     	;# 
  5826  0003                     	;# 
  5827  0004                     	;# 
  5828  0005                     	;# 
  5829  0006                     	;# 
  5830  0007                     	;# 
  5831  0008                     	;# 
  5832  0009                     	;# 
  5833  000A                     	;# 
  5834  000B                     	;# 
  5835  000C                     	;# 
  5836  000D                     	;# 
  5837  000E                     	;# 
  5838  000F                     	;# 
  5839  0010                     	;# 
  5840  0011                     	;# 
  5841  0012                     	;# 
  5842  0013                     	;# 
  5843  0014                     	;# 
  5844  0015                     	;# 
  5845  0016                     	;# 
  5846  0016                     	;# 
  5847  0017                     	;# 
  5848  0018                     	;# 
  5849  0019                     	;# 
  5850  001A                     	;# 
  5851  001B                     	;# 
  5852  001C                     	;# 
  5853  008C                     	;# 
  5854  008D                     	;# 
  5855  008E                     	;# 
  5856  008F                     	;# 
  5857  0090                     	;# 
  5858  0091                     	;# 
  5859  0092                     	;# 
  5860  0093                     	;# 
  5861  0094                     	;# 
  5862  0095                     	;# 
  5863  0096                     	;# 
  5864  0097                     	;# 
  5865  0098                     	;# 
  5866  0099                     	;# 
  5867  009A                     	;# 
  5868  009B                     	;# 
  5869  009B                     	;# 
  5870  009C                     	;# 
  5871  009D                     	;# 
  5872  009E                     	;# 
  5873  009F                     	;# 
  5874  010C                     	;# 
  5875  010D                     	;# 
  5876  010E                     	;# 
  5877  010F                     	;# 
  5878  0110                     	;# 
  5879  0111                     	;# 
  5880  0112                     	;# 
  5881  0113                     	;# 
  5882  0114                     	;# 
  5883  0115                     	;# 
  5884  0116                     	;# 
  5885  0117                     	;# 
  5886  0118                     	;# 
  5887  0119                     	;# 
  5888  011A                     	;# 
  5889  011B                     	;# 
  5890  011C                     	;# 
  5891  011D                     	;# 
  5892  011D                     	;# 
  5893  011D                     	;# 
  5894  011E                     	;# 
  5895  011F                     	;# 
  5896  018C                     	;# 
  5897  018D                     	;# 
  5898  018E                     	;# 
  5899  018F                     	;# 
  5900  0190                     	;# 
  5901  0191                     	;# 
  5902  0191                     	;# 
  5903  0192                     	;# 
  5904  0193                     	;# 
  5905  0193                     	;# 
  5906  0193                     	;# 
  5907  0194                     	;# 
  5908  0195                     	;# 
  5909  0196                     	;# 
  5910  0199                     	;# 
  5911  0199                     	;# 
  5912  0199                     	;# 
  5913  019A                     	;# 
  5914  019A                     	;# 
  5915  019A                     	;# 
  5916  019B                     	;# 
  5917  019B                     	;# 
  5918  019B                     	;# 
  5919  019B                     	;# 
  5920  019B                     	;# 
  5921  019C                     	;# 
  5922  019C                     	;# 
  5923  019C                     	;# 
  5924  019D                     	;# 
  5925  019D                     	;# 
  5926  019D                     	;# 
  5927  019E                     	;# 
  5928  019E                     	;# 
  5929  019E                     	;# 
  5930  019F                     	;# 
  5931  019F                     	;# 
  5932  019F                     	;# 
  5933  019F                     	;# 
  5934  019F                     	;# 
  5935  020C                     	;# 
  5936  020D                     	;# 
  5937  020E                     	;# 
  5938  020F                     	;# 
  5939  0210                     	;# 
  5940  0211                     	;# 
  5941  0211                     	;# 
  5942  0212                     	;# 
  5943  0212                     	;# 
  5944  0213                     	;# 
  5945  0213                     	;# 
  5946  0214                     	;# 
  5947  0214                     	;# 
  5948  0215                     	;# 
  5949  0215                     	;# 
  5950  0215                     	;# 
  5951  0215                     	;# 
  5952  0216                     	;# 
  5953  0216                     	;# 
  5954  0217                     	;# 
  5955  0217                     	;# 
  5956  028C                     	;# 
  5957  028D                     	;# 
  5958  028E                     	;# 
  5959  028F                     	;# 
  5960  0290                     	;# 
  5961  0291                     	;# 
  5962  0291                     	;# 
  5963  0292                     	;# 
  5964  0293                     	;# 
  5965  0298                     	;# 
  5966  0298                     	;# 
  5967  0299                     	;# 
  5968  029A                     	;# 
  5969  030C                     	;# 
  5970  030D                     	;# 
  5971  030E                     	;# 
  5972  030F                     	;# 
  5973  0310                     	;# 
  5974  0311                     	;# 
  5975  0311                     	;# 
  5976  0312                     	;# 
  5977  0313                     	;# 
  5978  038C                     	;# 
  5979  038D                     	;# 
  5980  038E                     	;# 
  5981  038F                     	;# 
  5982  0390                     	;# 
  5983  0391                     	;# 
  5984  0392                     	;# 
  5985  0393                     	;# 
  5986  0394                     	;# 
  5987  0395                     	;# 
  5988  0396                     	;# 
  5989  0397                     	;# 
  5990  0398                     	;# 
  5991  0399                     	;# 
  5992  039D                     	;# 
  5993  039E                     	;# 
  5994  039F                     	;# 
  5995  0511                     	;# 
  5996  0513                     	;# 
  5997  0515                     	;# 
  5998  051A                     	;# 
  5999  0591                     	;# 
  6000  0592                     	;# 
  6001  0592                     	;# 
  6002  0593                     	;# 
  6003  0594                     	;# 
  6004  0594                     	;# 
  6005  0595                     	;# 
  6006  0596                     	;# 
  6007  0596                     	;# 
  6008  0E91                     	;# 
  6009  0E92                     	;# 
  6010  0E93                     	;# 
  6011  0E94                     	;# 
  6012  0E95                     	;# 
  6013  0E96                     	;# 
  6014  0E97                     	;# 
  6015  0E98                     	;# 
  6016  0E99                     	;# 
  6017  0E9A                     	;# 
  6018  0E9B                     	;# 
  6019  0E9C                     	;# 
  6020  0E9D                     	;# 
  6021  0E9E                     	;# 
  6022  0E9F                     	;# 
  6023  0EA0                     	;# 
  6024  0EA1                     	;# 
  6025  0EA1                     	;# 
  6026  0EA2                     	;# 
  6027  0EA3                     	;# 
  6028  0EA3                     	;# 
  6029  0EA4                     	;# 
  6030  0EA5                     	;# 
  6031  0EA5                     	;# 
  6032  0EA6                     	;# 
  6033  0EA7                     	;# 
  6034  0EA7                     	;# 
  6035  0EA8                     	;# 
  6036  0EA9                     	;# 
  6037  0EAA                     	;# 
  6038  0EAB                     	;# 
  6039  0EAC                     	;# 
  6040  0EAD                     	;# 
  6041  0EAE                     	;# 
  6042  0EAF                     	;# 
  6043  0EB1                     	;# 
  6044  0EB2                     	;# 
  6045  0EB3                     	;# 
  6046  0EB4                     	;# 
  6047  0EB5                     	;# 
  6048  0EB6                     	;# 
  6049  0EB7                     	;# 
  6050  0EB8                     	;# 
  6051  0EB9                     	;# 
  6052  0EBA                     	;# 
  6053  0EBB                     	;# 
  6054  0EBC                     	;# 
  6055  0EBD                     	;# 
  6056  0EBE                     	;# 
  6057  0EBF                     	;# 
  6058  0EC0                     	;# 
  6059  0EC1                     	;# 
  6060  0EC1                     	;# 
  6061  0EC2                     	;# 
  6062  0EC3                     	;# 
  6063  0EC3                     	;# 
  6064  0EC4                     	;# 
  6065  0EC5                     	;# 
  6066  0EC5                     	;# 
  6067  0EC6                     	;# 
  6068  0EC7                     	;# 
  6069  0EC7                     	;# 
  6070  0EC8                     	;# 
  6071  0EC9                     	;# 
  6072  0ECA                     	;# 
  6073  0ECB                     	;# 
  6074  0ECC                     	;# 
  6075  0ECD                     	;# 
  6076  0ECE                     	;# 
  6077  0ECF                     	;# 
  6078  0ED1                     	;# 
  6079  0ED2                     	;# 
  6080  0ED3                     	;# 
  6081  0ED4                     	;# 
  6082  0ED5                     	;# 
  6083  0ED6                     	;# 
  6084  0ED7                     	;# 
  6085  0ED8                     	;# 
  6086  0ED9                     	;# 
  6087  0EDA                     	;# 
  6088  0EDB                     	;# 
  6089  0EDC                     	;# 
  6090  0EDD                     	;# 
  6091  0EDE                     	;# 
  6092  0EDF                     	;# 
  6093  0EE0                     	;# 
  6094  0EE1                     	;# 
  6095  0EE1                     	;# 
  6096  0EE2                     	;# 
  6097  0EE3                     	;# 
  6098  0EE3                     	;# 
  6099  0EE4                     	;# 
  6100  0EE5                     	;# 
  6101  0EE5                     	;# 
  6102  0EE6                     	;# 
  6103  0EE7                     	;# 
  6104  0EE7                     	;# 
  6105  0EE8                     	;# 
  6106  0EE9                     	;# 
  6107  0EEA                     	;# 
  6108  0EEB                     	;# 
  6109  0EEC                     	;# 
  6110  0EED                     	;# 
  6111  0EEE                     	;# 
  6112  0EEF                     	;# 
  6113  0F11                     	;# 
  6114  0F12                     	;# 
  6115  0F13                     	;# 
  6116  0F14                     	;# 
  6117  0F15                     	;# 
  6118  0F16                     	;# 
  6119  0F17                     	;# 
  6120  0F18                     	;# 
  6121  0F19                     	;# 
  6122  0F1A                     	;# 
  6123  0F1B                     	;# 
  6124  0F1C                     	;# 
  6125  0F1D                     	;# 
  6126  0F1E                     	;# 
  6127  0F1F                     	;# 
  6128  0F20                     	;# 
  6129  0F21                     	;# 
  6130  0F21                     	;# 
  6131  0F22                     	;# 
  6132  0F23                     	;# 
  6133  0F23                     	;# 
  6134  0F24                     	;# 
  6135  0F25                     	;# 
  6136  0F25                     	;# 
  6137  0F26                     	;# 
  6138  0F27                     	;# 
  6139  0F27                     	;# 
  6140  0F28                     	;# 
  6141  0F29                     	;# 
  6142  0F2A                     	;# 
  6143  0F2B                     	;# 
  6144  0F2C                     	;# 
  6145  0F2D                     	;# 
  6146  0F2E                     	;# 
  6147  0F2F                     	;# 
  6148  0FE4                     	;# 
  6149  0FE5                     	;# 
  6150  0FE6                     	;# 
  6151  0FE7                     	;# 
  6152  0FE8                     	;# 
  6153  0FE9                     	;# 
  6154  0FEA                     	;# 
  6155  0FEB                     	;# 
  6156  0FED                     	;# 
  6157  0FEE                     	;# 
  6158  0FEF                     	;_line
  6159                           
  6160                           	psect	idataCOMMON
  6161  07FF                     __pidataCOMMON:	
  6162                           
  6163                           ;initializer for _line_terminator
  6164  07FF  340A               	retlw	10
  6165                           
  6166                           	psect	stringtext
  6167  2000                     __pstringtext:	
  6168  2000                     _dpowers:	
  6169  2000  3401               	retlw	1
  6170  2001  3400               	retlw	0
  6171  2002  3400               	retlw	0
  6172  2003  3400               	retlw	0
  6173  2004  340A               	retlw	10
  6174  2005  3400               	retlw	0
  6175  2006  3400               	retlw	0
  6176  2007  3400               	retlw	0
  6177  2008  3464               	retlw	100
  6178  2009  3400               	retlw	0
  6179  200A  3400               	retlw	0
  6180  200B  3400               	retlw	0
  6181  200C  34E8               	retlw	232
  6182  200D  3403               	retlw	3
  6183  200E  3400               	retlw	0
  6184  200F  3400               	retlw	0
  6185  2010  3410               	retlw	16
  6186  2011  3427               	retlw	39
  6187  2012  3400               	retlw	0
  6188  2013  3400               	retlw	0
  6189  2014  34A0               	retlw	160
  6190  2015  3486               	retlw	134
  6191  2016  3401               	retlw	1
  6192  2017  3400               	retlw	0
  6193  2018  3440               	retlw	64
  6194  2019  3442               	retlw	66
  6195  201A  340F               	retlw	15
  6196  201B  3400               	retlw	0
  6197  201C  3480               	retlw	128
  6198  201D  3496               	retlw	150
  6199  201E  3498               	retlw	152
  6200  201F  3400               	retlw	0
  6201  2020  3400               	retlw	0
  6202  2021  34E1               	retlw	225
  6203  2022  34F5               	retlw	245
  6204  2023  3405               	retlw	5
  6205  2024  3400               	retlw	0
  6206  2025  34CA               	retlw	202
  6207  2026  349A               	retlw	154
  6208  2027  343B               	retlw	59
  6209  2028                     __end_of_dpowers:	
  6210  2028                     __npowers_:	
  6211  2028  3400               	retlw	0
  6212  2029  3480               	retlw	128
  6213  202A  343F               	retlw	63
  6214  202B  34CD               	retlw	205
  6215  202C  34CC               	retlw	204
  6216  202D  343D               	retlw	61
  6217  202E  34D7               	retlw	215
  6218  202F  3423               	retlw	35
  6219  2030  343C               	retlw	60
  6220  2031  3412               	retlw	18
  6221  2032  3483               	retlw	131
  6222  2033  343A               	retlw	58
  6223  2034  34B7               	retlw	183
  6224  2035  34D1               	retlw	209
  6225  2036  3438               	retlw	56
  6226  2037  34C6               	retlw	198
  6227  2038  3427               	retlw	39
  6228  2039  3437               	retlw	55
  6229  203A  3438               	retlw	56
  6230  203B  3486               	retlw	134
  6231  203C  3435               	retlw	53
  6232  203D  34C0               	retlw	192
  6233  203E  34D6               	retlw	214
  6234  203F  3433               	retlw	51
  6235  2040  34CC               	retlw	204
  6236  2041  342B               	retlw	43
  6237  2042  3432               	retlw	50
  6238  2043  3470               	retlw	112
  6239  2044  3489               	retlw	137
  6240  2045  3430               	retlw	48
  6241  2046  34E7               	retlw	231
  6242  2047  34DB               	retlw	219
  6243  2048  342E               	retlw	46
  6244  2049  34E5               	retlw	229
  6245  204A  343C               	retlw	60
  6246  204B  341E               	retlw	30
  6247  204C  3442               	retlw	66
  6248  204D  34A2               	retlw	162
  6249  204E  340D               	retlw	13
  6250  204F                     __end_of__npowers_:	
  6251  204F                     __powers_:	
  6252  204F  3400               	retlw	0
  6253  2050  3480               	retlw	128
  6254  2051  343F               	retlw	63
  6255  2052  3400               	retlw	0
  6256  2053  3420               	retlw	32
  6257  2054  3441               	retlw	65
  6258  2055  3400               	retlw	0
  6259  2056  34C8               	retlw	200
  6260  2057  3442               	retlw	66
  6261  2058  3400               	retlw	0
  6262  2059  347A               	retlw	122
  6263  205A  3444               	retlw	68
  6264  205B  3440               	retlw	64
  6265  205C  341C               	retlw	28
  6266  205D  3446               	retlw	70
  6267  205E  3450               	retlw	80
  6268  205F  34C3               	retlw	195
  6269  2060  3447               	retlw	71
  6270  2061  3424               	retlw	36
  6271  2062  3474               	retlw	116
  6272  2063  3449               	retlw	73
  6273  2064  3497               	retlw	151
  6274  2065  3418               	retlw	24
  6275  2066  344B               	retlw	75
  6276  2067  34BC               	retlw	188
  6277  2068  34BE               	retlw	190
  6278  2069  344C               	retlw	76
  6279  206A  346B               	retlw	107
  6280  206B  346E               	retlw	110
  6281  206C  344E               	retlw	78
  6282  206D  3403               	retlw	3
  6283  206E  3415               	retlw	21
  6284  206F  3450               	retlw	80
  6285  2070  3479               	retlw	121
  6286  2071  34AD               	retlw	173
  6287  2072  3460               	retlw	96
  6288  2073  34F3               	retlw	243
  6289  2074  3449               	retlw	73
  6290  2075  3471               	retlw	113
  6291  2076                     __end_of__powers_:	
  6292  2076                     _hexpowers:	
  6293  2076  3401               	retlw	1
  6294  2077  3400               	retlw	0
  6295  2078  3400               	retlw	0
  6296  2079  3400               	retlw	0
  6297  207A  3410               	retlw	16
  6298  207B  3400               	retlw	0
  6299  207C  3400               	retlw	0
  6300  207D  3400               	retlw	0
  6301  207E  3400               	retlw	0
  6302  207F  3401               	retlw	1
  6303  2080  3400               	retlw	0
  6304  2081  3400               	retlw	0
  6305  2082  3400               	retlw	0
  6306  2083  3410               	retlw	16
  6307  2084  3400               	retlw	0
  6308  2085  3400               	retlw	0
  6309  2086  3400               	retlw	0
  6310  2087  3400               	retlw	0
  6311  2088  3401               	retlw	1
  6312  2089  3400               	retlw	0
  6313  208A  3400               	retlw	0
  6314  208B  3400               	retlw	0
  6315  208C  3410               	retlw	16
  6316  208D  3400               	retlw	0
  6317  208E  3400               	retlw	0
  6318  208F  3400               	retlw	0
  6319  2090  3400               	retlw	0
  6320  2091  3401               	retlw	1
  6321  2092  3400               	retlw	0
  6322  2093  3400               	retlw	0
  6323  2094  3400               	retlw	0
  6324  2095  3410               	retlw	16
  6325  2096                     __end_of_hexpowers:	
  6326  2096                     atan@coeff_a:	
  6327  2096  343C               	retlw	60
  6328  2097  3404               	retlw	4
  6329  2098  3442               	retlw	66
  6330  2099  349F               	retlw	159
  6331  209A  346A               	retlw	106
  6332  209B  3442               	retlw	66
  6333  209C  3490               	retlw	144
  6334  209D  3401               	retlw	1
  6335  209E  3442               	retlw	66
  6336  209F  344D               	retlw	77
  6337  20A0  34BB               	retlw	187
  6338  20A1  3440               	retlw	64
  6339  20A2  34EC               	retlw	236
  6340  20A3  3447               	retlw	71
  6341  20A4  343E               	retlw	62
  6342  20A5  348E               	retlw	142
  6343  20A6  341F               	retlw	31
  6344  20A7  34BB               	retlw	187
  6345  20A8                     __end_ofatan@coeff_a:	
  6346  20A8                     atan@coeff_b:	
  6347  20A8  343C               	retlw	60
  6348  20A9  3404               	retlw	4
  6349  20AA  3442               	retlw	66
  6350  20AB  345A               	retlw	90
  6351  20AC  348B               	retlw	139
  6352  20AD  3442               	retlw	66
  6353  20AE  3404               	retlw	4
  6354  20AF  3444               	retlw	68
  6355  20B0  3442               	retlw	66
  6356  20B1  349C               	retlw	156
  6357  20B2  344F               	retlw	79
  6358  20B3  3441               	retlw	65
  6359  20B4  3400               	retlw	0
  6360  20B5  3480               	retlw	128
  6361  20B6  343F               	retlw	63
  6362  20B7                     __end_ofatan@coeff_b:	
  6363  20B7                     sin@coeff_a:	
  6364  20B7  34F4               	retlw	244
  6365  20B8  344A               	retlw	74
  6366  20B9  3448               	retlw	72
  6367  20BA  3495               	retlw	149
  6368  20BB  3495               	retlw	149
  6369  20BC  34C7               	retlw	199
  6370  20BD  34C1               	retlw	193
  6371  20BE  34DC               	retlw	220
  6372  20BF  3445               	retlw	69
  6373  20C0  34DC               	retlw	220
  6374  20C1  346D               	retlw	109
  6375  20C2  34C3               	retlw	195
  6376  20C3  34B3               	retlw	179
  6377  20C4  3433               	retlw	51
  6378  20C5  3440               	retlw	64
  6379  20C6                     __end_ofsin@coeff_a:	
  6380  20C6                     sin@coeff_b:	
  6381  20C6  3434               	retlw	52
  6382  20C7  3401               	retlw	1
  6383  20C8  3448               	retlw	72
  6384  20C9  349D               	retlw	157
  6385  20CA  34B0               	retlw	176
  6386  20CB  3445               	retlw	69
  6387  20CC  3400               	retlw	0
  6388  20CD  34DA               	retlw	218
  6389  20CE  3442               	retlw	66
  6390  20CF  3400               	retlw	0
  6391  20D0  3480               	retlw	128
  6392  20D1  343F               	retlw	63
  6393  20D2                     __end_ofsin@coeff_b:	
  6394  20D2                     STR_8:	
  6395  20D2  3464               	retlw	100	;'d'
  6396  20D3  3469               	retlw	105	;'i'
  6397  20D4  3473               	retlw	115	;'s'
  6398  20D5  3474               	retlw	116	;'t'
  6399  20D6  3461               	retlw	97	;'a'
  6400  20D7  346E               	retlw	110	;'n'
  6401  20D8  3463               	retlw	99	;'c'
  6402  20D9  3465               	retlw	101	;'e'
  6403  20DA  3420               	retlw	32	;' '
  6404  20DB  343D               	retlw	61	;'='
  6405  20DC  3420               	retlw	32	;' '
  6406  20DD  3425               	retlw	37	;'%'
  6407  20DE  3466               	retlw	102	;'f'
  6408  20DF  3420               	retlw	32	;' '
  6409  20E0  3461               	retlw	97	;'a'
  6410  20E1  346E               	retlw	110	;'n'
  6411  20E2  3467               	retlw	103	;'g'
  6412  20E3  346C               	retlw	108	;'l'
  6413  20E4  3465               	retlw	101	;'e'
  6414  20E5  3420               	retlw	32	;' '
  6415  20E6  343D               	retlw	61	;'='
  6416  20E7  3420               	retlw	32	;' '
  6417  20E8  3425               	retlw	37	;'%'
  6418  20E9  3466               	retlw	102	;'f'
  6419  20EA  3420               	retlw	32	;' '
  6420  20EB  3400               	retlw	0
  6421  20EC                     STR_10:	
  6422  20EC  3430               	retlw	48	;'0'
  6423  20ED  3431               	retlw	49	;'1'
  6424  20EE  3432               	retlw	50	;'2'
  6425  20EF  3433               	retlw	51	;'3'
  6426  20F0  3434               	retlw	52	;'4'
  6427  20F1  3435               	retlw	53	;'5'
  6428  20F2  3436               	retlw	54	;'6'
  6429  20F3  3437               	retlw	55	;'7'
  6430  20F4  3438               	retlw	56	;'8'
  6431  20F5  3439               	retlw	57	;'9'
  6432  20F6  3441               	retlw	65	;'A'
  6433  20F7  3442               	retlw	66	;'B'
  6434  20F8  3443               	retlw	67	;'C'
  6435  20F9  3444               	retlw	68	;'D'
  6436  20FA  3445               	retlw	69	;'E'
  6437  20FB  3446               	retlw	70	;'F'
  6438  20FC  3400               	retlw	0
  6439  20FD                     STR_2:	
  6440  20FD  3448               	retlw	72	;'H'
  6441  20FE  3465               	retlw	101	;'e'
  6442  20FF  346C               	retlw	108	;'l'
  6443  2100  346C               	retlw	108	;'l'
  6444  2101  346F               	retlw	111	;'o'
  6445  2102  3420               	retlw	32	;' '
  6446  2103  3457               	retlw	87	;'W'
  6447  2104  346F               	retlw	111	;'o'
  6448  2105  3472               	retlw	114	;'r'
  6449  2106  346C               	retlw	108	;'l'
  6450  2107  3464               	retlw	100	;'d'
  6451  2108  3421               	retlw	33	;'!'
  6452  2109  3420               	retlw	32	;' '
  6453  210A  3420               	retlw	32	;' '
  6454  210B  3420               	retlw	32	;' '
  6455  210C  3420               	retlw	32	;' '
  6456  210D  3400               	retlw	0
  6457  210E                     STR_1:	
  6458  210E  3448               	retlw	72	;'H'
  6459  210F  3465               	retlw	101	;'e'
  6460  2110  346C               	retlw	108	;'l'
  6461  2111  346C               	retlw	108	;'l'
  6462  2112  346F               	retlw	111	;'o'
  6463  2113  3420               	retlw	32	;' '
  6464  2114  3457               	retlw	87	;'W'
  6465  2115  346F               	retlw	111	;'o'
  6466  2116  3472               	retlw	114	;'r'
  6467  2117  346C               	retlw	108	;'l'
  6468  2118  3464               	retlw	100	;'d'
  6469  2119  3421               	retlw	33	;'!'
  6470  211A  340A               	retlw	10
  6471  211B  3400               	retlw	0
  6472  211C                     STR_3:	
  6473  211C  3463               	retlw	99	;'c'
  6474  211D  346F               	retlw	111	;'o'
  6475  211E  3475               	retlw	117	;'u'
  6476  211F  346E               	retlw	110	;'n'
  6477  2120  3474               	retlw	116	;'t'
  6478  2121  3420               	retlw	32	;' '
  6479  2122  343D               	retlw	61	;'='
  6480  2123  3420               	retlw	32	;' '
  6481  2124  3425               	retlw	37	;'%'
  6482  2125  3458               	retlw	88	;'X'
  6483  2126  3420               	retlw	32	;' '
  6484  2127  3400               	retlw	0
  6485  2128                     STR_5:	
  6486  2128  346C               	retlw	108	;'l'
  6487  2129  346F               	retlw	111	;'o'
  6488  212A  346E               	retlw	110	;'n'
  6489  212B  3431               	retlw	49	;'1'
  6490  212C  3420               	retlw	32	;' '
  6491  212D  343D               	retlw	61	;'='
  6492  212E  3420               	retlw	32	;' '
  6493  212F  3425               	retlw	37	;'%'
  6494  2130  3466               	retlw	102	;'f'
  6495  2131  3400               	retlw	0
  6496  2132                     STR_4:	
  6497  2132  346C               	retlw	108	;'l'
  6498  2133  3461               	retlw	97	;'a'
  6499  2134  3474               	retlw	116	;'t'
  6500  2135  3431               	retlw	49	;'1'
  6501  2136  3420               	retlw	32	;' '
  6502  2137  343D               	retlw	61	;'='
  6503  2138  3420               	retlw	32	;' '
  6504  2139  3425               	retlw	37	;'%'
  6505  213A  3466               	retlw	102	;'f'
  6506  213B  3400               	retlw	0
  6507  213C                     STR_7:	
  6508  213C  346C               	retlw	108	;'l'
  6509  213D  346F               	retlw	111	;'o'
  6510  213E  346E               	retlw	110	;'n'
  6511  213F  3432               	retlw	50	;'2'
  6512  2140  3420               	retlw	32	;' '
  6513  2141  343D               	retlw	61	;'='
  6514  2142  3420               	retlw	32	;' '
  6515  2143  3425               	retlw	37	;'%'
  6516  2144  3466               	retlw	102	;'f'
  6517  2145  3400               	retlw	0
  6518  2146                     STR_6:	
  6519  2146  346C               	retlw	108	;'l'
  6520  2147  3461               	retlw	97	;'a'
  6521  2148  3474               	retlw	116	;'t'
  6522  2149  3432               	retlw	50	;'2'
  6523  214A  3420               	retlw	32	;' '
  6524  214B  343D               	retlw	61	;'='
  6525  214C  3420               	retlw	32	;' '
  6526  214D  3425               	retlw	37	;'%'
  6527  214E  3466               	retlw	102	;'f'
  6528  214F  3400               	retlw	0
  6529  211A                     
  6530                           ; #config settings
  6531  0000                     
  6532                           	psect	nvBANK1
  6533  00E8                     __pnvBANK1:	
  6534  00E8                     _eusartTxBufferRemaining:	
  6535  00E8                     	ds	1
  6536  00E9                     _timer0ReloadVal:	
  6537  00E9                     	ds	1
  6538  000B                     _INTCONbits	set	11
  6539  0011                     _PIR1bits	set	17
  6540  000D                     _PORTBbits	set	13
  6541  000E                     _PORTCbits	set	14
  6542  000F                     _PORTDbits	set	15
  6543  001B                     _PR2	set	27
  6544  001C                     _T2CON	set	28
  6545  001C                     _T2CONbits	set	28
  6546  0015                     _TMR0	set	21
  6547  001A                     _TMR2	set	26
  6548  009D                     _ADCON0	set	157
  6549  009D                     _ADCON0bits	set	157
  6550  009E                     _ADCON1	set	158
  6551  009F                     _ADCON2	set	159
  6552  009C                     _ADRESH	set	156
  6553  009B                     _ADRESL	set	155
  6554  0095                     _OPTION_REG	set	149
  6555  0095                     _OPTION_REGbits	set	149
  6556  0099                     _OSCCON	set	153
  6557  009A                     _OSCSTAT	set	154
  6558  0098                     _OSCTUNE	set	152
  6559  0091                     _PIE1bits	set	145
  6560  008C                     _TRISA	set	140
  6561  008D                     _TRISB	set	141
  6562  008D                     _TRISBbits	set	141
  6563  008E                     _TRISC	set	142
  6564  008E                     _TRISCbits	set	142
  6565  008F                     _TRISD	set	143
  6566  008F                     _TRISDbits	set	143
  6567  0090                     _TRISE	set	144
  6568  011D                     _APFCON1	set	285
  6569  011C                     _APFCON2	set	284
  6570  0117                     _FVRCON	set	279
  6571  0117                     _FVRCONbits	set	279
  6572  010C                     _LATA	set	268
  6573  010D                     _LATB	set	269
  6574  010E                     _LATC	set	270
  6575  010F                     _LATD	set	271
  6576  0110                     _LATE	set	272
  6577  018C                     _ANSELA	set	396
  6578  018D                     _ANSELB	set	397
  6579  018E                     _ANSELC	set	398
  6580  018F                     _ANSELD	set	399
  6581  0190                     _ANSELE	set	400
  6582  019F                     _BAUD1CON	set	415
  6583  0199                     _RC1REG	set	409
  6584  019D                     _RC1STA	set	413
  6585  019D                     _RC1STAbits	set	413
  6586  0199                     _RCREG	set	409
  6587  019C                     _SP1BRGH	set	412
  6588  019B                     _SP1BRGL	set	411
  6589  019A                     _TX1REG	set	410
  6590  019E                     _TX1STA	set	414
  6591  0212                     _SSP1ADD	set	530
  6592  0215                     _SSP1CON1	set	533
  6593  0215                     _SSP1CON1bits	set	533
  6594  0214                     _SSP1STAT	set	532
  6595  0214                     _SSP1STATbits	set	532
  6596  0211                     _SSPBUF	set	529
  6597  020C                     _WPUA	set	524
  6598  020D                     _WPUB	set	525
  6599  020E                     _WPUC	set	526
  6600  020F                     _WPUD	set	527
  6601  0210                     _WPUE	set	528
  6602  0293                     _CCP1CON	set	659
  6603  029A                     _CCP2CON	set	666
  6604  0292                     _CCPR1H	set	658
  6605  0291                     _CCPR1L	set	657
  6606  0299                     _CCPR2H	set	665
  6607  0298                     _CCPR2L	set	664
  6608  0313                     _CCP3CON	set	787
  6609  0312                     _CCPR3H	set	786
  6610  0311                     _CCPR3L	set	785
  6611                           
  6612                           	psect	cinit
  6613  0029                     start_initialization:	
  6614  0029                     __initialization:		;BIGRAM
  6615                           
  6616                           ; Clear objects allocated to BIGRAM
  6617  0029  30A8               	movlw	low (0+9896)
  6618  002A  0084               	movwf	4
  6619  002B  3026               	movlw	high (0+9896)
  6620  002C  0085               	movwf	5
  6621  002D  3048               	movlw	72
  6622  002E  00FE               	movwf	btemp
  6623  002F  3001               	movlw	1
  6624  0030  00FF               	movwf	btemp+1
  6625  0031  3190  2000  3180   	fcall	clear_ram0
  6626                           
  6627                           ; Clear objects allocated to COMMON
  6628  0034  01F6               	clrf	__pbssCOMMON& (0+127)
  6629  0035  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  6630  0036  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  6631  0037  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  6632  0038  01FA               	clrf	(__pbssCOMMON+4)& (0+127)
  6633                           
  6634                           ; Clear objects allocated to BANK1
  6635  0039  30DC               	movlw	low __pbssBANK1
  6636  003A  0084               	movwf	4
  6637  003B  3000               	movlw	high __pbssBANK1
  6638  003C  0085               	movwf	5
  6639  003D  300C               	movlw	12
  6640  003E  00FE               	movwf	btemp
  6641  003F  3000               	movlw	0
  6642  0040  00FF               	movwf	btemp+1
  6643  0041  3190  2000  3180   	fcall	clear_ram0
  6644                           
  6645                           ; Clear objects allocated to BANK2
  6646  0044  0022               	movlb	2	; select bank2
  6647  0045  01E8               	clrf	__pbssBANK2& (0+127)
  6648  0046  01E9               	clrf	(__pbssBANK2+1)& (0+127)
  6649                           
  6650                           ; Clear objects allocated to BANK3
  6651  0047  30A0               	movlw	low __pbssBANK3
  6652  0048  0084               	movwf	4
  6653  0049  3001               	movlw	high __pbssBANK3
  6654  004A  0085               	movwf	5
  6655  004B  302E               	movlw	46
  6656  004C  00FE               	movwf	btemp
  6657  004D  3000               	movlw	0
  6658  004E  00FF               	movwf	btemp+1
  6659  004F  3190  2000  3180   	fcall	clear_ram0
  6660                           
  6661                           ; Initialize objects allocated to COMMON
  6662  0052  3187  27FF         	fcall	__pidataCOMMON	;fetch initializer
  6663  0054  00FB               	movwf	__pdataCOMMON& (0+127)
  6664  0055                     end_of_initialization:	
  6665                           ;End of C runtime variable initialization code
  6666                           
  6667  0055                     __end_of__initialization:	
  6668  0055  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6669  0056  0020               	movlb	0
  6670  0057  3195  2DD3         	ljmp	_main	;jump to C main() function
  6671                           
  6672                           	psect	bssCOMMON
  6673  0076                     __pbssCOMMON:	
  6674  0076                     _circ_buf_head:	
  6675  0076                     	ds	1
  6676  0077                     _circ_buf_tail:	
  6677  0077                     	ds	1
  6678  0078                     _eusartRxCount:	
  6679  0078                     	ds	1
  6680  0079                     _eusartTxHead:	
  6681  0079                     	ds	1
  6682  007A                     _flag:	
  6683  007A                     	ds	1
  6684                           
  6685                           	psect	dataCOMMON
  6686  007B                     __pdataCOMMON:	
  6687  007B                     _line_terminator:	
  6688  007B                     	ds	1
  6689                           
  6690                           	psect	bssBANK1
  6691  00DC                     __pbssBANK1:	
  6692  00DC                     TMR0_ISR@CountCallBack:	
  6693  00DC                     	ds	2
  6694  00DE                     _mailbox:	
  6695  00DE                     	ds	2
  6696  00E0                     _nb_mailbox:	
  6697  00E0                     	ds	2
  6698  00E2                     ms_ISR@LED_PIN_counter:	
  6699  00E2                     	ds	2
  6700  00E4                     _eusartRxHead:	
  6701  00E4                     	ds	1
  6702  00E5                     _eusartRxTail:	
  6703  00E5                     	ds	1
  6704  00E6                     _eusartTxTail:	
  6705  00E6                     	ds	1
  6706  00E7                     _nb_flag:	
  6707  00E7                     	ds	1
  6708                           
  6709                           	psect	bssBANK2
  6710  0168                     __pbssBANK2:	
  6711  0168                     _errno:	
  6712  0168                     	ds	2
  6713                           
  6714                           	psect	bssBANK3
  6715  01A0                     __pbssBANK3:	
  6716  01A0                     _field_offsets:	
  6717  01A0                     	ds	30
  6718  01BE                     _eusartRxBuffer:	
  6719  01BE                     	ds	8
  6720  01C6                     _eusartTxBuffer:	
  6721  01C6                     	ds	8
  6722                           
  6723                           	psect	clrtext
  6724  1000                     clear_ram0:	
  6725                           ;	Called with FSR0 containing the base address, and
  6726                           ;	btemp/btemp+1 has the size to clear
  6727                           
  6728  1000  0064               	clrwdt	;clear the watchdog before getting into this loop
  6729  1001                     clrloop0:	
  6730  1001  0180               	clrf	0	;clear RAM location pointed to by FSR
  6731  1002  3101               	addfsr 0,1
  6732  1003  3001               	movlw	1
  6733  1004  02FE               	subwf	126,f
  6734  1005  3000               	movlw	0
  6735  1006  3BFF               	subwfb	127,f
  6736  1007  087F               	movf	127,w
  6737  1008  047E               	iorwf	126,w
  6738  1009  1903               	btfsc	3,2
  6739  100A  3400               	retlw	0	;all done for this memory range, return
  6740  100B  2801               	goto	clrloop0	;have we reached the end yet?
  6741                           
  6742                           	psect	cstackBANK2
  6743  0120                     __pcstackBANK2:	
  6744  0120                     ?_distance:	
  6745  0120                     distance@lat1:	
  6746                           ; 3 bytes @ 0x0
  6747                           
  6748  0120                     heading@angle:	
  6749                           ; 3 bytes @ 0x0
  6750                           
  6751                           
  6752                           ; 3 bytes @ 0x0
  6753  0120                     	ds	3
  6754  0123                     distance@lon1:	
  6755  0123                     _heading$1900:	
  6756                           ; 3 bytes @ 0x3
  6757                           
  6758                           
  6759                           ; 3 bytes @ 0x3
  6760  0123                     	ds	3
  6761  0126                     distance@lat2:	
  6762  0126                     _heading$1901:	
  6763                           ; 3 bytes @ 0x6
  6764                           
  6765                           
  6766                           ; 3 bytes @ 0x6
  6767  0126                     	ds	3
  6768  0129                     distance@lon2:	
  6769  0129                     _heading$1902:	
  6770                           ; 3 bytes @ 0x9
  6771                           
  6772                           
  6773                           ; 3 bytes @ 0x9
  6774  0129                     	ds	3
  6775  012C                     distance@unit:	
  6776  012C                     _heading$1903:	
  6777                           ; 1 bytes @ 0xC
  6778                           
  6779                           
  6780                           ; 3 bytes @ 0xC
  6781  012C                     	ds	1
  6782  012D                     distance@theta:	
  6783                           
  6784                           ; 3 bytes @ 0xD
  6785  012D                     	ds	2
  6786  012F                     _heading$1904:	
  6787                           
  6788                           ; 3 bytes @ 0xF
  6789  012F                     	ds	1
  6790  0130                     _distance$1891:	
  6791                           
  6792                           ; 3 bytes @ 0x10
  6793  0130                     	ds	2
  6794  0132                     _heading$1905:	
  6795                           
  6796                           ; 3 bytes @ 0x12
  6797  0132                     	ds	1
  6798  0133                     _distance$1892:	
  6799                           
  6800                           ; 3 bytes @ 0x13
  6801  0133                     	ds	2
  6802  0135                     _heading$1906:	
  6803                           
  6804                           ; 3 bytes @ 0x15
  6805  0135                     	ds	1
  6806  0136                     _distance$1893:	
  6807                           
  6808                           ; 3 bytes @ 0x16
  6809  0136                     	ds	2
  6810  0138                     _heading$1907:	
  6811                           
  6812                           ; 3 bytes @ 0x18
  6813  0138                     	ds	1
  6814  0139                     _distance$1894:	
  6815                           
  6816                           ; 3 bytes @ 0x19
  6817  0139                     	ds	2
  6818  013B                     _heading$1908:	
  6819                           
  6820                           ; 3 bytes @ 0x1B
  6821  013B                     	ds	1
  6822  013C                     _distance$1895:	
  6823                           
  6824                           ; 3 bytes @ 0x1C
  6825  013C                     	ds	2
  6826  013E                     _heading$1909:	
  6827                           
  6828                           ; 3 bytes @ 0x1E
  6829  013E                     	ds	1
  6830  013F                     _distance$1896:	
  6831                           
  6832                           ; 3 bytes @ 0x1F
  6833  013F                     	ds	2
  6834  0141                     _heading$1897:	
  6835                           
  6836                           ; 3 bytes @ 0x21
  6837  0141                     	ds	1
  6838  0142                     distance@dist:	
  6839                           
  6840                           ; 3 bytes @ 0x22
  6841  0142                     	ds	2
  6842  0144                     _heading$1898:	
  6843                           
  6844                           ; 3 bytes @ 0x24
  6845  0144                     	ds	3
  6846  0147                     _heading$1899:	
  6847                           
  6848                           ; 3 bytes @ 0x27
  6849  0147                     	ds	3
  6850  014A                     heading@a:	
  6851                           
  6852                           ; 3 bytes @ 0x2A
  6853  014A                     	ds	3
  6854  014D                     heading@b:	
  6855                           
  6856                           ; 3 bytes @ 0x2D
  6857  014D                     	ds	3
  6858  0150                     heading@d:	
  6859                           
  6860                           ; 3 bytes @ 0x30
  6861  0150                     	ds	3
  6862  0153                     heading@c:	
  6863                           
  6864                           ; 3 bytes @ 0x33
  6865  0153                     	ds	3
  6866  0156                     main@dist:	
  6867                           
  6868                           ; 3 bytes @ 0x36
  6869  0156                     	ds	3
  6870  0159                     main@head:	
  6871                           
  6872                           ; 3 bytes @ 0x39
  6873  0159                     	ds	3
  6874  015C                     main@lat1:	
  6875                           
  6876                           ; 3 bytes @ 0x3C
  6877  015C                     	ds	3
  6878  015F                     main@lon1:	
  6879                           
  6880                           ; 3 bytes @ 0x3F
  6881  015F                     	ds	3
  6882  0162                     main@lat2:	
  6883                           
  6884                           ; 3 bytes @ 0x42
  6885  0162                     	ds	3
  6886  0165                     main@lon2:	
  6887                           
  6888                           ; 3 bytes @ 0x45
  6889  0165                     	ds	3
  6890                           
  6891                           	psect	cstackBANK1
  6892  00A0                     __pcstackBANK1:	
  6893  00A0                     ?_fmod:	
  6894  00A0                     ?_atan:	
  6895                           ; 3 bytes @ 0x0
  6896                           
  6897  00A0                     ?___ftsub:	
  6898                           ; 3 bytes @ 0x0
  6899                           
  6900  00A0                     atan@f:	
  6901                           ; 3 bytes @ 0x0
  6902                           
  6903  00A0                     _strtod$1392:	
  6904                           ; 3 bytes @ 0x0
  6905                           
  6906  00A0                     fmod@x:	
  6907                           ; 3 bytes @ 0x0
  6908                           
  6909  00A0                     ___ftsub@f2:	
  6910                           ; 3 bytes @ 0x0
  6911                           
  6912                           
  6913                           ; 3 bytes @ 0x0
  6914  00A0                     	ds	3
  6915  00A3                     ??_atan:	
  6916  00A3                     _strtod$1393:	
  6917                           ; 0 bytes @ 0x3
  6918                           
  6919  00A3                     fmod@y:	
  6920                           ; 3 bytes @ 0x3
  6921                           
  6922  00A3                     ___ftsub@f1:	
  6923                           ; 3 bytes @ 0x3
  6924                           
  6925                           
  6926                           ; 3 bytes @ 0x3
  6927  00A3                     	ds	1
  6928  00A4                     atan@y:	
  6929                           
  6930                           ; 3 bytes @ 0x4
  6931  00A4                     	ds	2
  6932  00A6                     ?_sprintf:	
  6933  00A6                     ?_sin:	
  6934                           ; 2 bytes @ 0x6
  6935                           
  6936  00A6                     ?_sqrt:	
  6937                           ; 3 bytes @ 0x6
  6938                           
  6939  00A6                     sprintf@sp:	
  6940                           ; 3 bytes @ 0x6
  6941                           
  6942  00A6                     _strtod$1394:	
  6943                           ; 2 bytes @ 0x6
  6944                           
  6945  00A6                     fmod@n:	
  6946                           ; 3 bytes @ 0x6
  6947                           
  6948  00A6                     sin@f:	
  6949                           ; 3 bytes @ 0x6
  6950                           
  6951  00A6                     sqrt@a:	
  6952                           ; 3 bytes @ 0x6
  6953                           
  6954                           
  6955                           ; 3 bytes @ 0x6
  6956  00A6                     	ds	1
  6957  00A7                     atan@x:	
  6958                           
  6959                           ; 3 bytes @ 0x7
  6960  00A7                     	ds	1
  6961  00A8                     sprintf@f:	
  6962                           
  6963                           ; 2 bytes @ 0x8
  6964  00A8                     	ds	1
  6965  00A9                     ??_sin:	
  6966  00A9                     ??_sqrt:	
  6967                           ; 0 bytes @ 0x9
  6968                           
  6969  00A9                     _strtod$1395:	
  6970                           ; 0 bytes @ 0x9
  6971                           
  6972                           
  6973                           ; 3 bytes @ 0x9
  6974  00A9                     	ds	1
  6975  00AA                     atan@recip:	
  6976  00AA                     sin@y:	
  6977                           ; 1 bytes @ 0xA
  6978                           
  6979                           
  6980                           ; 3 bytes @ 0xA
  6981  00AA                     	ds	1
  6982  00AB                     atan@val_squared:	
  6983                           
  6984                           ; 3 bytes @ 0xB
  6985  00AB                     	ds	1
  6986  00AC                     _strtod$1391:	
  6987  00AC                     sqrt@og:	
  6988                           ; 2 bytes @ 0xC
  6989                           
  6990                           
  6991                           ; 3 bytes @ 0xC
  6992  00AC                     	ds	1
  6993  00AD                     _sin$1925:	
  6994                           
  6995                           ; 3 bytes @ 0xD
  6996  00AD                     	ds	1
  6997  00AE                     strtod@eexp:	
  6998  00AE                     atan@val:	
  6999                           ; 1 bytes @ 0xE
  7000                           
  7001                           
  7002                           ; 3 bytes @ 0xE
  7003  00AE                     	ds	1
  7004  00AF                     strtod@flags:	
  7005  00AF                     sqrt@z:	
  7006                           ; 1 bytes @ 0xF
  7007                           
  7008                           
  7009                           ; 3 bytes @ 0xF
  7010  00AF                     	ds	1
  7011  00B0                     ??_sprintf:	
  7012  00B0                     strtod@expon:	
  7013                           ; 0 bytes @ 0x10
  7014                           
  7015  00B0                     sin@x2:	
  7016                           ; 1 bytes @ 0x10
  7017                           
  7018                           
  7019                           ; 3 bytes @ 0x10
  7020  00B0                     	ds	1
  7021  00B1                     strtod@_u:	
  7022                           
  7023                           ; 4 bytes @ 0x11
  7024  00B1                     	ds	1
  7025  00B2                     sqrt@i:	
  7026                           
  7027                           ; 1 bytes @ 0x12
  7028  00B2                     	ds	1
  7029  00B3                     sin@sgn:	
  7030  00B3                     sqrt@q:	
  7031                           ; 1 bytes @ 0x13
  7032                           
  7033                           
  7034                           ; 3 bytes @ 0x13
  7035  00B3                     	ds	1
  7036  00B4                     ?_cos:	
  7037  00B4                     cos@f:	
  7038                           ; 3 bytes @ 0x14
  7039                           
  7040                           
  7041                           ; 3 bytes @ 0x14
  7042  00B4                     	ds	2
  7043  00B6                     sqrt@x:	
  7044  00B6                     _sprintf$1913:	
  7045                           ; 3 bytes @ 0x16
  7046                           
  7047                           
  7048                           ; 3 bytes @ 0x16
  7049  00B6                     	ds	1
  7050  00B7                     _cos$1924:	
  7051                           
  7052                           ; 3 bytes @ 0x17
  7053  00B7                     	ds	2
  7054  00B9                     ?_asin:	
  7055  00B9                     sprintf@idx:	
  7056                           ; 3 bytes @ 0x19
  7057                           
  7058  00B9                     asin@x:	
  7059                           ; 1 bytes @ 0x19
  7060                           
  7061                           
  7062                           ; 3 bytes @ 0x19
  7063  00B9                     	ds	1
  7064  00BA                     ?_atan2:	
  7065  00BA                     sprintf@ap:	
  7066                           ; 3 bytes @ 0x1A
  7067                           
  7068  00BA                     atan2@y:	
  7069                           ; 1 bytes @ 0x1A
  7070                           
  7071                           
  7072                           ; 3 bytes @ 0x1A
  7073  00BA                     	ds	1
  7074  00BB                     sprintf@flag:	
  7075                           
  7076                           ; 2 bytes @ 0x1B
  7077  00BB                     	ds	1
  7078  00BC                     asin@sgn:	
  7079                           
  7080                           ; 3 bytes @ 0x1C
  7081  00BC                     	ds	1
  7082  00BD                     sprintf@prec:	
  7083  00BD                     atan2@x:	
  7084                           ; 2 bytes @ 0x1D
  7085                           
  7086                           
  7087                           ; 3 bytes @ 0x1D
  7088  00BD                     	ds	2
  7089  00BF                     _asin$1916:	
  7090  00BF                     sprintf@val:	
  7091                           ; 3 bytes @ 0x1F
  7092                           
  7093                           
  7094                           ; 4 bytes @ 0x1F
  7095  00BF                     	ds	1
  7096  00C0                     _atan2$1920:	
  7097                           
  7098                           ; 3 bytes @ 0x20
  7099  00C0                     	ds	2
  7100  00C2                     _asin$1919:	
  7101                           
  7102                           ; 3 bytes @ 0x22
  7103  00C2                     	ds	1
  7104  00C3                     sprintf@exp:	
  7105  00C3                     _atan2$1921:	
  7106                           ; 2 bytes @ 0x23
  7107                           
  7108                           
  7109                           ; 3 bytes @ 0x23
  7110  00C3                     	ds	2
  7111  00C5                     _asin$1915:	
  7112  00C5                     sprintf@tmpval:	
  7113                           ; 3 bytes @ 0x25
  7114                           
  7115                           
  7116                           ; 4 bytes @ 0x25
  7117  00C5                     	ds	1
  7118  00C6                     _atan2$1923:	
  7119                           
  7120                           ; 3 bytes @ 0x26
  7121  00C6                     	ds	2
  7122  00C8                     _asin$1918:	
  7123                           
  7124                           ; 3 bytes @ 0x28
  7125  00C8                     	ds	1
  7126  00C9                     sprintf@fval:	
  7127  00C9                     _atan2$1922:	
  7128                           ; 3 bytes @ 0x29
  7129                           
  7130                           
  7131                           ; 3 bytes @ 0x29
  7132  00C9                     	ds	2
  7133  00CB                     asin@y:	
  7134                           
  7135                           ; 3 bytes @ 0x2B
  7136  00CB                     	ds	1
  7137  00CC                     sprintf@c:	
  7138  00CC                     atan2@v:	
  7139                           ; 1 bytes @ 0x2C
  7140                           
  7141                           
  7142                           ; 3 bytes @ 0x2C
  7143  00CC                     	ds	2
  7144  00CE                     _asin$1917:	
  7145                           
  7146                           ; 3 bytes @ 0x2E
  7147  00CE                     	ds	1
  7148  00CF                     ?_heading:	
  7149  00CF                     heading@lat1:	
  7150                           ; 3 bytes @ 0x2F
  7151                           
  7152                           
  7153                           ; 3 bytes @ 0x2F
  7154  00CF                     	ds	2
  7155  00D1                     ?_acos:	
  7156  00D1                     acos@x:	
  7157                           ; 3 bytes @ 0x31
  7158                           
  7159                           
  7160                           ; 3 bytes @ 0x31
  7161  00D1                     	ds	1
  7162  00D2                     heading@lon1:	
  7163                           
  7164                           ; 3 bytes @ 0x32
  7165  00D2                     	ds	2
  7166  00D4                     _acos$1914:	
  7167                           
  7168                           ; 3 bytes @ 0x34
  7169  00D4                     	ds	1
  7170  00D5                     heading@lat2:	
  7171                           
  7172                           ; 3 bytes @ 0x35
  7173  00D5                     	ds	3
  7174  00D8                     heading@lon2:	
  7175                           
  7176                           ; 3 bytes @ 0x38
  7177  00D8                     	ds	3
  7178  00DB                     ??_main:	
  7179                           
  7180                           ; 0 bytes @ 0x3B
  7181  00DB                     	ds	1
  7182                           
  7183                           	psect	cstackCOMMON
  7184  0070                     __pcstackCOMMON:	
  7185  0070                     ?_TMR2_StartTimer:	
  7186  0070                     ?_TMR0_CallBack:	
  7187                           ; 0 bytes @ 0x0
  7188                           
  7189  0070                     ??_TMR0_CallBack:	
  7190                           ; 0 bytes @ 0x0
  7191                           
  7192  0070                     ?_ms_ISR:	
  7193                           ; 0 bytes @ 0x0
  7194                           
  7195  0070                     ?_OSCILLATOR_Initialize:	
  7196                           ; 0 bytes @ 0x0
  7197                           
  7198  0070                     ?_LCD_config:	
  7199                           ; 0 bytes @ 0x0
  7200                           
  7201  0070                     ?_service_delay:	
  7202                           ; 0 bytes @ 0x0
  7203                           
  7204  0070                     ??_service_delay:	
  7205                           ; 0 bytes @ 0x0
  7206                           
  7207  0070                     ?_LCD_w_cmd:	
  7208                           ; 0 bytes @ 0x0
  7209                           
  7210  0070                     ?_LCD_w_data:	
  7211                           ; 0 bytes @ 0x0
  7212                           
  7213  0070                     ?_LCD_w_byte:	
  7214                           ; 0 bytes @ 0x0
  7215                           
  7216  0070                     ?_LCD_pulse:	
  7217                           ; 0 bytes @ 0x0
  7218                           
  7219  0070                     ?_isspace:	
  7220                           ; 0 bytes @ 0x0
  7221                           
  7222  0070                     ?_isdigit:	
  7223                           ; 1 bit 
  7224                           
  7225  0070                     ?_PWM3_Initialize:	
  7226                           ; 1 bit 
  7227                           
  7228  0070                     ?_PWM2_Initialize:	
  7229                           ; 0 bytes @ 0x0
  7230                           
  7231  0070                     ?_PWM1_Initialize:	
  7232                           ; 0 bytes @ 0x0
  7233                           
  7234  0070                     ?_TMR2_Initialize:	
  7235                           ; 0 bytes @ 0x0
  7236                           
  7237  0070                     ?_SPI_Initialize:	
  7238                           ; 0 bytes @ 0x0
  7239                           
  7240  0070                     ?_EUSART_Initialize:	
  7241                           ; 0 bytes @ 0x0
  7242                           
  7243  0070                     ??_EUSART_Read:	
  7244                           ; 0 bytes @ 0x0
  7245                           
  7246  0070                     ?_EUSART_Write:	
  7247                           ; 0 bytes @ 0x0
  7248                           
  7249  0070                     ?_EUSART_Transmit_ISR:	
  7250                           ; 0 bytes @ 0x0
  7251                           
  7252  0070                     ??_EUSART_Transmit_ISR:	
  7253                           ; 0 bytes @ 0x0
  7254                           
  7255  0070                     ?_EUSART_Receive_ISR:	
  7256                           ; 0 bytes @ 0x0
  7257                           
  7258  0070                     ??_EUSART_Receive_ISR:	
  7259                           ; 0 bytes @ 0x0
  7260                           
  7261  0070                     ?_FVR_Initialize:	
  7262                           ; 0 bytes @ 0x0
  7263                           
  7264  0070                     ?_ADC_Initialize:	
  7265                           ; 0 bytes @ 0x0
  7266                           
  7267  0070                     ?_TMR0_Initialize:	
  7268                           ; 0 bytes @ 0x0
  7269                           
  7270  0070                     ?_TMR0_ISR:	
  7271                           ; 0 bytes @ 0x0
  7272                           
  7273  0070                     ?_PIN_MANAGER_Initialize:	
  7274                           ; 0 bytes @ 0x0
  7275                           
  7276  0070                     ?_INTERRUPT_InterruptManager:	
  7277                           ; 0 bytes @ 0x0
  7278                           
  7279  0070                     ?_SYSTEM_Initialize:	
  7280                           ; 0 bytes @ 0x0
  7281                           
  7282  0070                     ?_main:	
  7283                           ; 0 bytes @ 0x0
  7284                           
  7285  0070                     ?_service_serial:	
  7286                           ; 0 bytes @ 0x0
  7287                           
  7288  0070                     ?_serial_is_string:	
  7289                           ; 0 bytes @ 0x0
  7290                           
  7291  0070                     ?_EUSART_Read:	
  7292                           ; 1 bytes @ 0x0
  7293                           
  7294                           
  7295                           ; 1 bytes @ 0x0
  7296  0070                     	ds	1
  7297  0071                     EUSART_Read@readValue:	
  7298                           
  7299                           ; 1 bytes @ 0x1
  7300  0071                     	ds	1
  7301  0072                     ??_service_serial:	
  7302                           
  7303                           ; 0 bytes @ 0x2
  7304  0072                     	ds	3
  7305  0075                     ??_ms_ISR:	
  7306  0075                     ??_TMR0_ISR:	
  7307                           ; 0 bytes @ 0x5
  7308                           
  7309  0075                     ??_INTERRUPT_InterruptManager:	
  7310                           ; 0 bytes @ 0x5
  7311                           
  7312                           
  7313                           ; 0 bytes @ 0x5
  7314  0075                     	ds	1
  7315                           
  7316                           	psect	cstackBANK0
  7317  0020                     __pcstackBANK0:	
  7318  0020                     ??_TMR2_StartTimer:	
  7319  0020                     ??_OSCILLATOR_Initialize:	
  7320                           ; 0 bytes @ 0x0
  7321                           
  7322  0020                     ??_serial_is_string:	
  7323                           ; 0 bytes @ 0x0
  7324                           
  7325  0020                     ??_LCD_pulse:	
  7326                           ; 0 bytes @ 0x0
  7327                           
  7328  0020                     ??_isspace:	
  7329                           ; 0 bytes @ 0x0
  7330                           
  7331  0020                     ??_isdigit:	
  7332                           ; 0 bytes @ 0x0
  7333                           
  7334  0020                     ??_PWM3_Initialize:	
  7335                           ; 0 bytes @ 0x0
  7336                           
  7337  0020                     ??_PWM2_Initialize:	
  7338                           ; 0 bytes @ 0x0
  7339                           
  7340  0020                     ??_PWM1_Initialize:	
  7341                           ; 0 bytes @ 0x0
  7342                           
  7343  0020                     ??_TMR2_Initialize:	
  7344                           ; 0 bytes @ 0x0
  7345                           
  7346  0020                     ??_SPI_Initialize:	
  7347                           ; 0 bytes @ 0x0
  7348                           
  7349  0020                     ??_EUSART_Initialize:	
  7350                           ; 0 bytes @ 0x0
  7351                           
  7352  0020                     ??_EUSART_Write:	
  7353                           ; 0 bytes @ 0x0
  7354                           
  7355  0020                     ??_FVR_Initialize:	
  7356                           ; 0 bytes @ 0x0
  7357                           
  7358  0020                     ??_ADC_Initialize:	
  7359                           ; 0 bytes @ 0x0
  7360                           
  7361  0020                     ??_TMR0_Initialize:	
  7362                           ; 0 bytes @ 0x0
  7363                           
  7364  0020                     ??_PIN_MANAGER_Initialize:	
  7365                           ; 0 bytes @ 0x0
  7366                           
  7367  0020                     ?_delay_ISR_ticks:	
  7368                           ; 0 bytes @ 0x0
  7369                           
  7370  0020                     ?___ftge:	
  7371                           ; 0 bytes @ 0x0
  7372                           
  7373  0020                     ?_serial_gets:	
  7374                           ; 1 bit 
  7375                           
  7376  0020                     ?_line_parser:	
  7377                           ; 1 bytes @ 0x0
  7378                           
  7379  0020                     ?_get_field:	
  7380                           ; 1 bytes @ 0x0
  7381                           
  7382  0020                     ?___bmul:	
  7383                           ; 1 bytes @ 0x0
  7384                           
  7385  0020                     ?___awmod:	
  7386                           ; 1 bytes @ 0x0
  7387                           
  7388  0020                     ?___ftpack:	
  7389                           ; 2 bytes @ 0x0
  7390                           
  7391  0020                     ?_frexp:	
  7392                           ; 3 bytes @ 0x0
  7393                           
  7394  0020                     ?___ftneg:	
  7395                           ; 3 bytes @ 0x0
  7396                           
  7397  0020                     ?__tdiv_to_l_:	
  7398                           ; 3 bytes @ 0x0
  7399                           
  7400  0020                     ?__div_to_l_:	
  7401                           ; 4 bytes @ 0x0
  7402                           
  7403  0020                     ?___lmul:	
  7404                           ; 4 bytes @ 0x0
  7405                           
  7406  0020                     ?___lldiv:	
  7407                           ; 4 bytes @ 0x0
  7408                           
  7409  0020                     ?___llmod:	
  7410                           ; 4 bytes @ 0x0
  7411                           
  7412  0020                     ___bmul@multiplicand:	
  7413                           ; 4 bytes @ 0x0
  7414                           
  7415  0020                     _isdigit$1494:	
  7416                           ; 1 bytes @ 0x0
  7417                           
  7418  0020                     _isspace$1497:	
  7419                           ; 1 bytes @ 0x0
  7420                           
  7421  0020                     serial_gets@P:	
  7422                           ; 1 bytes @ 0x0
  7423                           
  7424  0020                     delay_ISR_ticks@X:	
  7425                           ; 2 bytes @ 0x0
  7426                           
  7427  0020                     line_parser@line:	
  7428                           ; 2 bytes @ 0x0
  7429                           
  7430  0020                     get_field@field:	
  7431                           ; 2 bytes @ 0x0
  7432                           
  7433  0020                     ___awmod@divisor:	
  7434                           ; 2 bytes @ 0x0
  7435                           
  7436  0020                     __div_to_l_@f1:	
  7437                           ; 2 bytes @ 0x0
  7438                           
  7439  0020                     ___ftpack@arg:	
  7440                           ; 3 bytes @ 0x0
  7441                           
  7442  0020                     __tdiv_to_l_@f1:	
  7443                           ; 3 bytes @ 0x0
  7444                           
  7445  0020                     ___ftge@ff1:	
  7446                           ; 3 bytes @ 0x0
  7447                           
  7448  0020                     ___ftneg@f1:	
  7449                           ; 3 bytes @ 0x0
  7450                           
  7451  0020                     frexp@value:	
  7452                           ; 3 bytes @ 0x0
  7453                           
  7454  0020                     ___lmul@multiplier:	
  7455                           ; 3 bytes @ 0x0
  7456                           
  7457  0020                     ___lldiv@divisor:	
  7458                           ; 4 bytes @ 0x0
  7459                           
  7460  0020                     ___llmod@divisor:	
  7461                           ; 4 bytes @ 0x0
  7462                           
  7463                           
  7464                           ; 4 bytes @ 0x0
  7465  0020                     	ds	1
  7466  0021                     ??_SYSTEM_Initialize:	
  7467  0021                     ??___bmul:	
  7468                           ; 0 bytes @ 0x1
  7469                           
  7470  0021                     EUSART_Write@txData:	
  7471                           ; 0 bytes @ 0x1
  7472                           
  7473  0021                     LCD_pulse@i:	
  7474                           ; 1 bytes @ 0x1
  7475                           
  7476  0021                     isdigit@c:	
  7477                           ; 1 bytes @ 0x1
  7478                           
  7479  0021                     isspace@c:	
  7480                           ; 1 bytes @ 0x1
  7481                           
  7482                           
  7483                           ; 1 bytes @ 0x1
  7484  0021                     	ds	1
  7485  0022                     ?_serial_puts_ROM:	
  7486  0022                     ??_serial_gets:	
  7487                           ; 0 bytes @ 0x2
  7488                           
  7489  0022                     ?_serial_puts_RAM:	
  7490                           ; 0 bytes @ 0x2
  7491                           
  7492  0022                     ??_LCD_w_byte:	
  7493                           ; 0 bytes @ 0x2
  7494                           
  7495  0022                     ??_delay_ISR_ticks:	
  7496                           ; 0 bytes @ 0x2
  7497                           
  7498  0022                     serial_is_string@result:	
  7499                           ; 0 bytes @ 0x2
  7500                           
  7501  0022                     line_parser@delim:	
  7502                           ; 1 bytes @ 0x2
  7503                           
  7504  0022                     get_field@N:	
  7505                           ; 1 bytes @ 0x2
  7506                           
  7507  0022                     ___bmul@product:	
  7508                           ; 1 bytes @ 0x2
  7509                           
  7510  0022                     serial_puts_RAM@P:	
  7511                           ; 1 bytes @ 0x2
  7512                           
  7513  0022                     serial_puts_ROM@P:	
  7514                           ; 2 bytes @ 0x2
  7515                           
  7516  0022                     ___awmod@dividend:	
  7517                           ; 2 bytes @ 0x2
  7518                           
  7519                           
  7520                           ; 2 bytes @ 0x2
  7521  0022                     	ds	1
  7522  0023                     ?_delay_ms:	
  7523  0023                     ??_line_parser:	
  7524                           ; 0 bytes @ 0x3
  7525                           
  7526  0023                     ??_get_field:	
  7527                           ; 0 bytes @ 0x3
  7528                           
  7529  0023                     ??___ftneg:	
  7530                           ; 0 bytes @ 0x3
  7531                           
  7532  0023                     serial_gets@num_char:	
  7533                           ; 0 bytes @ 0x3
  7534                           
  7535  0023                     serial_is_string@i:	
  7536                           ; 1 bytes @ 0x3
  7537                           
  7538  0023                     ___bmul@multiplier:	
  7539                           ; 1 bytes @ 0x3
  7540                           
  7541  0023                     ___ftpack@exp:	
  7542                           ; 1 bytes @ 0x3
  7543                           
  7544  0023                     frexp@eptr:	
  7545                           ; 1 bytes @ 0x3
  7546                           
  7547  0023                     delay_ms@X:	
  7548                           ; 1 bytes @ 0x3
  7549                           
  7550  0023                     __div_to_l_@f2:	
  7551                           ; 2 bytes @ 0x3
  7552                           
  7553  0023                     __tdiv_to_l_@f2:	
  7554                           ; 3 bytes @ 0x3
  7555                           
  7556  0023                     ___ftge@ff2:	
  7557                           ; 3 bytes @ 0x3
  7558                           
  7559                           
  7560                           ; 3 bytes @ 0x3
  7561  0023                     	ds	1
  7562  0024                     ??_serial_puts_ROM:	
  7563  0024                     ??_serial_puts_RAM:	
  7564                           ; 0 bytes @ 0x4
  7565                           
  7566  0024                     ??_frexp:	
  7567                           ; 0 bytes @ 0x4
  7568                           
  7569  0024                     ??___awmod:	
  7570                           ; 0 bytes @ 0x4
  7571                           
  7572  0024                     get_field@cnt:	
  7573                           ; 0 bytes @ 0x4
  7574                           
  7575  0024                     LCD_w_byte@C:	
  7576                           ; 1 bytes @ 0x4
  7577                           
  7578  0024                     ___ftpack@sign:	
  7579                           ; 1 bytes @ 0x4
  7580                           
  7581  0024                     ___lmul@multiplicand:	
  7582                           ; 1 bytes @ 0x4
  7583                           
  7584  0024                     ___lldiv@dividend:	
  7585                           ; 4 bytes @ 0x4
  7586                           
  7587  0024                     ___llmod@dividend:	
  7588                           ; 4 bytes @ 0x4
  7589                           
  7590                           
  7591                           ; 4 bytes @ 0x4
  7592  0024                     	ds	1
  7593  0025                     ??_delay_ms:	
  7594  0025                     ??_LCD_w_data:	
  7595                           ; 0 bytes @ 0x5
  7596                           
  7597  0025                     ??___ftpack:	
  7598                           ; 0 bytes @ 0x5
  7599                           
  7600  0025                     get_field@i:	
  7601                           ; 0 bytes @ 0x5
  7602                           
  7603  0025                     LCD_w_data@C:	
  7604                           ; 1 bytes @ 0x5
  7605                           
  7606  0025                     ___awmod@counter:	
  7607                           ; 1 bytes @ 0x5
  7608                           
  7609  0025                     delay_ms@i:	
  7610                           ; 1 bytes @ 0x5
  7611                           
  7612                           
  7613                           ; 2 bytes @ 0x5
  7614  0025                     	ds	1
  7615  0026                     ??__tdiv_to_l_:	
  7616  0026                     ??__div_to_l_:	
  7617                           ; 0 bytes @ 0x6
  7618                           
  7619  0026                     ??___ftge:	
  7620                           ; 0 bytes @ 0x6
  7621                           
  7622  0026                     line_parser@field_ctr:	
  7623                           ; 0 bytes @ 0x6
  7624                           
  7625  0026                     ___awmod@sign:	
  7626                           ; 1 bytes @ 0x6
  7627                           
  7628                           
  7629                           ; 1 bytes @ 0x6
  7630  0026                     	ds	1
  7631  0027                     ??_LCD_w_cmd:	
  7632  0027                     ?___awdiv:	
  7633                           ; 0 bytes @ 0x7
  7634                           
  7635  0027                     line_parser@i:	
  7636                           ; 2 bytes @ 0x7
  7637                           
  7638  0027                     LCD_w_cmd@C:	
  7639                           ; 1 bytes @ 0x7
  7640                           
  7641  0027                     ___awdiv@divisor:	
  7642                           ; 1 bytes @ 0x7
  7643                           
  7644                           
  7645                           ; 2 bytes @ 0x7
  7646  0027                     	ds	1
  7647  0028                     ??_LCD_config:	
  7648  0028                     ?_LCD_puts_ROM:	
  7649                           ; 0 bytes @ 0x8
  7650                           
  7651  0028                     ?_LCD_puts_RAM:	
  7652                           ; 0 bytes @ 0x8
  7653                           
  7654  0028                     ??___lmul:	
  7655                           ; 0 bytes @ 0x8
  7656                           
  7657  0028                     ??___lldiv:	
  7658                           ; 0 bytes @ 0x8
  7659                           
  7660  0028                     ??___llmod:	
  7661                           ; 0 bytes @ 0x8
  7662                           
  7663  0028                     ?___lltoft:	
  7664                           ; 0 bytes @ 0x8
  7665                           
  7666  0028                     LCD_puts_RAM@P:	
  7667                           ; 3 bytes @ 0x8
  7668                           
  7669  0028                     LCD_puts_ROM@P:	
  7670                           ; 2 bytes @ 0x8
  7671                           
  7672  0028                     ___lmul@product:	
  7673                           ; 2 bytes @ 0x8
  7674                           
  7675  0028                     ___lltoft@c:	
  7676                           ; 4 bytes @ 0x8
  7677                           
  7678                           
  7679                           ; 4 bytes @ 0x8
  7680  0028                     	ds	1
  7681  0029                     ?_fabs:	
  7682  0029                     ___llmod@counter:	
  7683                           ; 3 bytes @ 0x9
  7684                           
  7685  0029                     ___awdiv@dividend:	
  7686                           ; 1 bytes @ 0x9
  7687                           
  7688  0029                     fabs@d:	
  7689                           ; 2 bytes @ 0x9
  7690                           
  7691  0029                     ___lldiv@quotient:	
  7692                           ; 3 bytes @ 0x9
  7693                           
  7694                           
  7695                           ; 4 bytes @ 0x9
  7696  0029                     	ds	1
  7697  002A                     LCD_puts_RAM@line:	
  7698  002A                     LCD_puts_ROM@line:	
  7699                           ; 1 bytes @ 0xA
  7700                           
  7701  002A                     __tdiv_to_l_@quot:	
  7702                           ; 1 bytes @ 0xA
  7703                           
  7704                           
  7705                           ; 4 bytes @ 0xA
  7706  002A                     	ds	1
  7707  002B                     ??___awdiv:	
  7708  002B                     LCD_puts_RAM@offset:	
  7709                           ; 0 bytes @ 0xB
  7710                           
  7711  002B                     LCD_puts_ROM@offset:	
  7712                           ; 1 bytes @ 0xB
  7713                           
  7714                           
  7715                           ; 1 bytes @ 0xB
  7716  002B                     	ds	1
  7717  002C                     ??_LCD_puts_ROM:	
  7718  002C                     ??_LCD_puts_RAM:	
  7719                           ; 0 bytes @ 0xC
  7720                           
  7721  002C                     ??_fabs:	
  7722                           ; 0 bytes @ 0xC
  7723                           
  7724  002C                     ??___lltoft:	
  7725                           ; 0 bytes @ 0xC
  7726                           
  7727  002C                     ___awdiv@counter:	
  7728                           ; 0 bytes @ 0xC
  7729                           
  7730                           
  7731                           ; 1 bytes @ 0xC
  7732  002C                     	ds	1
  7733  002D                     ___awdiv@sign:	
  7734  002D                     ___lldiv@counter:	
  7735                           ; 1 bytes @ 0xD
  7736                           
  7737  002D                     ___lltoft@exp:	
  7738                           ; 1 bytes @ 0xD
  7739                           
  7740                           
  7741                           ; 1 bytes @ 0xD
  7742  002D                     	ds	1
  7743  002E                     __tdiv_to_l_@cntr:	
  7744  002E                     ___awdiv@quotient:	
  7745                           ; 1 bytes @ 0xE
  7746                           
  7747  002E                     __div_to_l_@quot:	
  7748                           ; 2 bytes @ 0xE
  7749                           
  7750                           
  7751                           ; 4 bytes @ 0xE
  7752  002E                     	ds	1
  7753  002F                     __tdiv_to_l_@exp1:	
  7754                           
  7755                           ; 1 bytes @ 0xF
  7756  002F                     	ds	1
  7757  0030                     ?___wmul:	
  7758  0030                     ___wmul@multiplier:	
  7759                           ; 2 bytes @ 0x10
  7760                           
  7761                           
  7762                           ; 2 bytes @ 0x10
  7763  0030                     	ds	2
  7764  0032                     __div_to_l_@cntr:	
  7765  0032                     ___wmul@multiplicand:	
  7766                           ; 1 bytes @ 0x12
  7767                           
  7768                           
  7769                           ; 2 bytes @ 0x12
  7770  0032                     	ds	1
  7771  0033                     __div_to_l_@exp1:	
  7772                           
  7773                           ; 1 bytes @ 0x13
  7774  0033                     	ds	1
  7775  0034                     ??___wmul:	
  7776  0034                     ___wmul@product:	
  7777                           ; 0 bytes @ 0x14
  7778                           
  7779                           
  7780                           ; 2 bytes @ 0x14
  7781  0034                     	ds	2
  7782  0036                     ?___ftmul:	
  7783  0036                     ___ftmul@f1:	
  7784                           ; 3 bytes @ 0x16
  7785                           
  7786                           
  7787                           ; 3 bytes @ 0x16
  7788  0036                     	ds	3
  7789  0039                     ___ftmul@f2:	
  7790                           
  7791                           ; 3 bytes @ 0x19
  7792  0039                     	ds	3
  7793  003C                     ??___ftmul:	
  7794                           
  7795                           ; 0 bytes @ 0x1C
  7796  003C                     	ds	4
  7797  0040                     ___ftmul@exp:	
  7798                           
  7799                           ; 1 bytes @ 0x20
  7800  0040                     	ds	1
  7801  0041                     ___ftmul@f3_as_product:	
  7802                           
  7803                           ; 3 bytes @ 0x21
  7804  0041                     	ds	3
  7805  0044                     ___ftmul@cntr:	
  7806                           
  7807                           ; 1 bytes @ 0x24
  7808  0044                     	ds	1
  7809  0045                     ___ftmul@sign:	
  7810                           
  7811                           ; 1 bytes @ 0x25
  7812  0045                     	ds	1
  7813  0046                     ?_fround:	
  7814  0046                     ?_scale:	
  7815                           ; 3 bytes @ 0x26
  7816                           
  7817  0046                     ?___ftdiv:	
  7818                           ; 3 bytes @ 0x26
  7819                           
  7820  0046                     ___ftdiv@f2:	
  7821                           ; 3 bytes @ 0x26
  7822                           
  7823                           
  7824                           ; 3 bytes @ 0x26
  7825  0046                     	ds	3
  7826  0049                     ??_fround:	
  7827  0049                     ??_scale:	
  7828                           ; 0 bytes @ 0x29
  7829                           
  7830  0049                     ___ftdiv@f1:	
  7831                           ; 0 bytes @ 0x29
  7832                           
  7833                           
  7834                           ; 3 bytes @ 0x29
  7835  0049                     	ds	2
  7836  004B                     _scale$1912:	
  7837                           
  7838                           ; 3 bytes @ 0x2B
  7839  004B                     	ds	1
  7840  004C                     ??___ftdiv:	
  7841                           
  7842                           ; 0 bytes @ 0x2C
  7843  004C                     	ds	1
  7844  004D                     _fround$1911:	
  7845                           
  7846                           ; 3 bytes @ 0x2D
  7847  004D                     	ds	1
  7848  004E                     scale@scl:	
  7849                           
  7850                           ; 1 bytes @ 0x2E
  7851  004E                     	ds	1
  7852  004F                     ?___fttol:	
  7853  004F                     ___fttol@f1:	
  7854                           ; 4 bytes @ 0x2F
  7855                           
  7856                           
  7857                           ; 3 bytes @ 0x2F
  7858  004F                     	ds	1
  7859  0050                     ___ftdiv@cntr:	
  7860  0050                     _fround$1910:	
  7861                           ; 1 bytes @ 0x30
  7862                           
  7863                           
  7864                           ; 3 bytes @ 0x30
  7865  0050                     	ds	1
  7866  0051                     ___ftdiv@f3:	
  7867                           
  7868                           ; 3 bytes @ 0x31
  7869  0051                     	ds	2
  7870  0053                     ??___fttol:	
  7871  0053                     fround@prec:	
  7872                           ; 0 bytes @ 0x33
  7873                           
  7874                           
  7875                           ; 1 bytes @ 0x33
  7876  0053                     	ds	1
  7877  0054                     ___ftdiv@exp:	
  7878                           
  7879                           ; 1 bytes @ 0x34
  7880  0054                     	ds	1
  7881  0055                     ___ftdiv@sign:	
  7882                           
  7883                           ; 1 bytes @ 0x35
  7884  0055                     	ds	1
  7885  0056                     ?_deg2rad:	
  7886  0056                     ?_rad2deg:	
  7887                           ; 3 bytes @ 0x36
  7888                           
  7889  0056                     deg2rad@deg:	
  7890                           ; 3 bytes @ 0x36
  7891                           
  7892  0056                     rad2deg@rad:	
  7893                           ; 3 bytes @ 0x36
  7894                           
  7895                           
  7896                           ; 3 bytes @ 0x36
  7897  0056                     	ds	1
  7898  0057                     ___fttol@sign1:	
  7899                           
  7900                           ; 1 bytes @ 0x37
  7901  0057                     	ds	1
  7902  0058                     ___fttol@lval:	
  7903                           
  7904                           ; 4 bytes @ 0x38
  7905  0058                     	ds	1
  7906  0059                     ??_deg2rad:	
  7907  0059                     ??_rad2deg:	
  7908                           ; 0 bytes @ 0x39
  7909                           
  7910  0059                     ?___ftadd:	
  7911                           ; 0 bytes @ 0x39
  7912                           
  7913  0059                     ___ftadd@f1:	
  7914                           ; 3 bytes @ 0x39
  7915                           
  7916                           
  7917                           ; 3 bytes @ 0x39
  7918  0059                     	ds	3
  7919  005C                     ___fttol@exp1:	
  7920  005C                     ___ftadd@f2:	
  7921                           ; 1 bytes @ 0x3C
  7922                           
  7923                           
  7924                           ; 3 bytes @ 0x3C
  7925  005C                     	ds	1
  7926  005D                     ?___altoft:	
  7927  005D                     ___altoft@c:	
  7928                           ; 3 bytes @ 0x3D
  7929                           
  7930                           
  7931                           ; 4 bytes @ 0x3D
  7932  005D                     	ds	2
  7933  005F                     ??___ftadd:	
  7934                           
  7935                           ; 0 bytes @ 0x3F
  7936  005F                     	ds	2
  7937  0061                     ??___altoft:	
  7938                           
  7939                           ; 0 bytes @ 0x41
  7940  0061                     	ds	2
  7941  0063                     ___altoft@exp:	
  7942  0063                     ___ftadd@sign:	
  7943                           ; 1 bytes @ 0x43
  7944                           
  7945                           
  7946                           ; 1 bytes @ 0x43
  7947  0063                     	ds	1
  7948  0064                     ___altoft@sign:	
  7949  0064                     ___ftadd@exp2:	
  7950                           ; 1 bytes @ 0x44
  7951                           
  7952                           
  7953                           ; 1 bytes @ 0x44
  7954  0064                     	ds	1
  7955  0065                     ?_trunc:	
  7956  0065                     ?_strtod:	
  7957                           ; 3 bytes @ 0x45
  7958                           
  7959  0065                     ___ftadd@exp1:	
  7960                           ; 3 bytes @ 0x45
  7961                           
  7962  0065                     strtod@s:	
  7963                           ; 1 bytes @ 0x45
  7964                           
  7965  0065                     trunc@x:	
  7966                           ; 2 bytes @ 0x45
  7967                           
  7968                           
  7969                           ; 3 bytes @ 0x45
  7970  0065                     	ds	1
  7971  0066                     ?_eval_poly:	
  7972  0066                     ?_floor:	
  7973                           ; 3 bytes @ 0x46
  7974                           
  7975  0066                     eval_poly@x:	
  7976                           ; 3 bytes @ 0x46
  7977                           
  7978  0066                     floor@x:	
  7979                           ; 3 bytes @ 0x46
  7980                           
  7981                           
  7982                           ; 3 bytes @ 0x46
  7983  0066                     	ds	1
  7984  0067                     strtod@res:	
  7985                           
  7986                           ; 1 bytes @ 0x47
  7987  0067                     	ds	1
  7988  0068                     ??_trunc:	
  7989  0068                     ??_strtod:	
  7990                           ; 0 bytes @ 0x48
  7991                           
  7992                           
  7993                           ; 0 bytes @ 0x48
  7994  0068                     	ds	1
  7995  0069                     ??_floor:	
  7996  0069                     eval_poly@d:	
  7997                           ; 0 bytes @ 0x49
  7998                           
  7999  0069                     trunc@i:	
  8000                           ; 2 bytes @ 0x49
  8001                           
  8002                           
  8003                           ; 3 bytes @ 0x49
  8004  0069                     	ds	1
  8005  006A                     floor@i:	
  8006                           
  8007                           ; 3 bytes @ 0x4A
  8008  006A                     	ds	1
  8009  006B                     eval_poly@n:	
  8010                           
  8011                           ; 2 bytes @ 0x4B
  8012  006B                     	ds	1
  8013  006C                     ?_atof:	
  8014  006C                     atof@s:	
  8015                           ; 3 bytes @ 0x4C
  8016                           
  8017  006C                     trunc@expon:	
  8018                           ; 2 bytes @ 0x4C
  8019                           
  8020                           
  8021                           ; 2 bytes @ 0x4C
  8022  006C                     	ds	1
  8023  006D                     ??_eval_poly:	
  8024  006D                     floor@expon:	
  8025                           ; 0 bytes @ 0x4D
  8026                           
  8027  006D                     eval_poly@res:	
  8028                           ; 2 bytes @ 0x4D
  8029                           
  8030                           
  8031                           ; 3 bytes @ 0x4D
  8032  006D                     	ds	1
  8033  006E                     ??_fmod:	
  8034                           
  8035                           ; 0 bytes @ 0x4E
  8036  006E                     	ds	1
  8037  006F                     ??_atof:	
  8038  006F                     ??___ftsub:	
  8039                           ; 0 bytes @ 0x4F
  8040                           
  8041                           
  8042                           ; 0 bytes @ 0x4F
  8043  006F                     	ds	1
  8044  0070                     ??_distance:	
  8045  0070                     ??_heading:	
  8046                           ; 0 bytes @ 0x50
  8047                           
  8048  0070                     ??_cos:	
  8049                           ; 0 bytes @ 0x50
  8050                           
  8051  0070                     ??_acos:	
  8052                           ; 0 bytes @ 0x50
  8053                           
  8054  0070                     ??_atan2:	
  8055                           ; 0 bytes @ 0x50
  8056                           
  8057  0070                     ??_asin:	
  8058                           ; 0 bytes @ 0x50
  8059                           
  8060                           
  8061                           	psect	maintext
  8062  15D3                     __pmaintext:	
  8063                           ; 0 bytes @ 0x50
  8064 ;;
  8065 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  8066 ;;
  8067 ;; *************** function _main *****************
  8068 ;; Defined at:
  8069 ;;		line 68 in file "main.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;		None
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;  lon2            3   69[BANK2 ] PTR unsigned char 
  8074 ;;  lat2            3   66[BANK2 ] PTR unsigned char 
  8075 ;;  lon1            3   63[BANK2 ] PTR unsigned char 
  8076 ;;  lat1            3   60[BANK2 ] PTR unsigned char 
  8077 ;;  head            3   57[BANK2 ] PTR unsigned char 
  8078 ;;  dist            3   54[BANK2 ] PTR unsigned char 
  8079 ;; Return value:  Size  Location     Type
  8080 ;;		None               void
  8081 ;; Registers used:
  8082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : B1F/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8089 ;;      Locals:         0       0       0      18       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8090 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8091 ;;      Totals:         0       0       1      18       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8092 ;;Total ram usage:       19 bytes
  8093 ;; Hardware stack levels required when called:   12
  8094 ;; This function calls:
  8095 ;;		_LCD_config
  8096 ;;		_LCD_puts_RAM
  8097 ;;		_LCD_puts_ROM
  8098 ;;		_SYSTEM_Initialize
  8099 ;;		_atof
  8100 ;;		_delay_ms
  8101 ;;		_distance
  8102 ;;		_get_field
  8103 ;;		_heading
  8104 ;;		_line_parser
  8105 ;;		_serial_gets
  8106 ;;		_serial_is_string
  8107 ;;		_serial_puts_RAM
  8108 ;;		_serial_puts_ROM
  8109 ;;		_sprintf
  8110 ;; This function is called by:
  8111 ;;		Startup code after reset
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115                           
  8116                           ;psect for function _main
  8117  15D3                     _main:	
  8118                           
  8119                           ;main.c: 70: double lat1, lon1, lat2, lon2, dist, head;
  8120                           ;main.c: 73: SYSTEM_Initialize();
  8121                           
  8122                           ;incstack = 0
  8123                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8124  15D3  31AD  2551  3195   	fcall	_SYSTEM_Initialize
  8125                           
  8126                           ;main.c: 79: (INTCONbits.GIE = 1);
  8127  15D6  178B               	bsf	11,7	;volatile
  8128                           
  8129                           ;main.c: 82: (INTCONbits.PEIE = 1);
  8130  15D7  170B               	bsf	11,6	;volatile
  8131                           
  8132                           ;main.c: 84: LCD_config();
  8133  15D8  31AE  26B1  3195   	fcall	_LCD_config
  8134                           
  8135                           ;main.c: 92: serial_puts_ROM("Hello World!\n");
  8136  15DB  300E               	movlw	low (STR_1| (0+32768))
  8137  15DC  0020               	movlb	0	; select bank0
  8138  15DD  00A2               	movwf	serial_puts_ROM@P
  8139  15DE  30A1               	movlw	high (STR_1| (0+32768))
  8140  15DF  00A3               	movwf	serial_puts_ROM@P+1
  8141  15E0  31AB  23CA  3195   	fcall	_serial_puts_ROM
  8142                           
  8143                           ;main.c: 93: LCD_puts_ROM("Hello World!    ", 0xC0, 0);
  8144  15E3  30FD               	movlw	low (STR_2| (0+32768))
  8145  15E4  0020               	movlb	0	; select bank0
  8146  15E5  00A8               	movwf	LCD_puts_ROM@P
  8147  15E6  30A0               	movlw	high (STR_2| (0+32768))
  8148  15E7  00A9               	movwf	LCD_puts_ROM@P+1
  8149  15E8  30C0               	movlw	192
  8150  15E9  0021               	movlb	1	; select bank1
  8151  15EA  00DB               	movwf	??_main^(0+128)
  8152  15EB  085B               	movf	??_main^(0+128),w
  8153  15EC  0020               	movlb	0	; select bank0
  8154  15ED  00AA               	movwf	LCD_puts_ROM@line
  8155  15EE  01AB               	clrf	LCD_puts_ROM@offset
  8156  15EF  31AC  249D  3195   	fcall	_LCD_puts_ROM
  8157                           
  8158                           ;main.c: 94: delay_ms(1000);
  8159  15F2  30E8               	movlw	232
  8160  15F3  0020               	movlb	0	; select bank0
  8161  15F4  00A3               	movwf	delay_ms@X
  8162  15F5  3003               	movlw	3
  8163  15F6  00A4               	movwf	delay_ms@X+1
  8164  15F7  31AD  2595  3195   	fcall	_delay_ms
  8165  15FA                     l7134:	
  8166                           ;main.c: 97: while (1) {
  8167                           
  8168                           
  8169                           ;main.c: 99: if(serial_is_string( )){
  8170  15FA  31AE  2657  3195   	fcall	_serial_is_string
  8171  15FD  3A00               	xorlw	0
  8172  15FE  1903               	skipnz
  8173  15FF  2DFA               	goto	l7134
  8174                           
  8175                           ;main.c: 100: serial_gets(line);
  8176  1600  30A8               	movlw	168
  8177  1601  0020               	movlb	0	; select bank0
  8178  1602  00A0               	movwf	serial_gets@P
  8179  1603  3026               	movlw	38
  8180  1604  00A1               	movwf	serial_gets@P+1
  8181  1605  31AF  278A  3195   	fcall	_serial_gets
  8182                           
  8183                           ;main.c: 101: serial_puts_RAM(line);
  8184  1608  30A8               	movlw	168
  8185  1609  0020               	movlb	0	; select bank0
  8186  160A  00A2               	movwf	serial_puts_RAM@P
  8187  160B  3026               	movlw	38
  8188  160C  00A3               	movwf	serial_puts_RAM@P+1
  8189  160D  31AB  23B4  3195   	fcall	_serial_puts_RAM
  8190                           
  8191                           ;main.c: 109: sprintf(line, "count = %X ", 0x10);
  8192  1610  30A8               	movlw	168
  8193  1611  0021               	movlb	1	; select bank1
  8194  1612  00A6               	movwf	sprintf@sp^(0+128)
  8195  1613  3026               	movlw	38
  8196  1614  00A7               	movwf	(sprintf@sp^(0+128)+1)
  8197  1615  301C               	movlw	low (STR_3| (0+32768))
  8198  1616  00A8               	movwf	sprintf@f^(0+128)
  8199  1617  30A1               	movlw	high (STR_3| (0+32768))
  8200  1618  00A9               	movwf	(sprintf@f^(0+128)+1)
  8201  1619  3010               	movlw	16
  8202  161A  00AA               	movwf	(?_sprintf^(0+128)+4)
  8203  161B  3000               	movlw	0
  8204  161C  00AB               	movwf	(?_sprintf^(0+128)+5)
  8205  161D  3180  2059  3195   	fcall	_sprintf
  8206                           
  8207                           ;main.c: 110: LCD_puts_RAM(line, 0x80, 0);
  8208  1620  30A8               	movlw	168
  8209  1621  0020               	movlb	0	; select bank0
  8210  1622  00A8               	movwf	LCD_puts_RAM@P
  8211  1623  3026               	movlw	38
  8212  1624  00A9               	movwf	LCD_puts_RAM@P+1
  8213  1625  3080               	movlw	128
  8214  1626  0021               	movlb	1	; select bank1
  8215  1627  00DB               	movwf	??_main^(0+128)
  8216  1628  085B               	movf	??_main^(0+128),w
  8217  1629  0020               	movlb	0	; select bank0
  8218  162A  00AA               	movwf	LCD_puts_RAM@line
  8219  162B  01AB               	clrf	LCD_puts_RAM@offset
  8220  162C  31AC  2481  3195   	fcall	_LCD_puts_RAM
  8221                           
  8222                           ;main.c: 115: line_parser(line, ',');
  8223  162F  30A8               	movlw	168
  8224  1630  0020               	movlb	0	; select bank0
  8225  1631  00A0               	movwf	line_parser@line
  8226  1632  3026               	movlw	38
  8227  1633  00A1               	movwf	line_parser@line+1
  8228  1634  302C               	movlw	44
  8229  1635  0021               	movlb	1	; select bank1
  8230  1636  00DB               	movwf	??_main^(0+128)
  8231  1637  085B               	movf	??_main^(0+128),w
  8232  1638  0020               	movlb	0	; select bank0
  8233  1639  00A2               	movwf	line_parser@delim
  8234  163A  31A3  2359  3195   	fcall	_line_parser
  8235                           
  8236                           ;main.c: 117: get_field(line, 1);
  8237  163D  30A8               	movlw	168
  8238  163E  0020               	movlb	0	; select bank0
  8239  163F  00A0               	movwf	get_field@field
  8240  1640  3026               	movlw	38
  8241  1641  00A1               	movwf	get_field@field+1
  8242  1642  01A2               	clrf	get_field@N
  8243  1643  0AA2               	incf	get_field@N,f
  8244  1644  31AF  2750  3195   	fcall	_get_field
  8245                           
  8246                           ;main.c: 118: lat1 = atof(line);
  8247  1647  30A8               	movlw	168
  8248  1648  0020               	movlb	0	; select bank0
  8249  1649  00EC               	movwf	atof@s
  8250  164A  3026               	movlw	38
  8251  164B  00ED               	movwf	atof@s+1
  8252  164C  31AB  237D  3195   	fcall	_atof
  8253  164F  0020               	movlb	0	; select bank0
  8254  1650  086C               	movf	?_atof,w
  8255  1651  0022               	movlb	2	; select bank2
  8256  1652  00DC               	movwf	main@lat1^(0+256)
  8257  1653  0020               	movlb	0	; select bank0
  8258  1654  086D               	movf	?_atof+1,w
  8259  1655  0022               	movlb	2	; select bank2
  8260  1656  00DD               	movwf	(main@lat1+1)^(0+256)
  8261  1657  0020               	movlb	0	; select bank0
  8262  1658  086E               	movf	?_atof+2,w
  8263  1659  0022               	movlb	2	; select bank2
  8264  165A  00DE               	movwf	(main@lat1+2)^(0+256)
  8265                           
  8266                           ;main.c: 119: sprintf(line, "lat1 = %f", lat1);
  8267  165B  30A8               	movlw	168
  8268  165C  0021               	movlb	1	; select bank1
  8269  165D  00A6               	movwf	sprintf@sp^(0+128)
  8270  165E  3026               	movlw	38
  8271  165F  00A7               	movwf	(sprintf@sp^(0+128)+1)
  8272  1660  3032               	movlw	low (STR_4| (0+32768))
  8273  1661  00A8               	movwf	sprintf@f^(0+128)
  8274  1662  30A1               	movlw	high (STR_4| (0+32768))
  8275  1663  00A9               	movwf	(sprintf@f^(0+128)+1)
  8276  1664  0022               	movlb	2	; select bank2
  8277  1665  085C               	movf	main@lat1^(0+256),w
  8278  1666  0021               	movlb	1	; select bank1
  8279  1667  00AA               	movwf	(?_sprintf^(0+128)+4)
  8280  1668  0022               	movlb	2	; select bank2
  8281  1669  085D               	movf	(main@lat1+1)^(0+256),w
  8282  166A  0021               	movlb	1	; select bank1
  8283  166B  00AB               	movwf	((?_sprintf+1)^(0+128)+4)
  8284  166C  0022               	movlb	2	; select bank2
  8285  166D  085E               	movf	(main@lat1+2)^(0+256),w
  8286  166E  0021               	movlb	1	; select bank1
  8287  166F  00AC               	movwf	((?_sprintf+2)^(0+128)+4)
  8288  1670  3180  2059  3195   	fcall	_sprintf
  8289                           
  8290                           ;main.c: 120: LCD_puts_RAM(line, 0x80, 0);
  8291  1673  30A8               	movlw	168
  8292  1674  0020               	movlb	0	; select bank0
  8293  1675  00A8               	movwf	LCD_puts_RAM@P
  8294  1676  3026               	movlw	38
  8295  1677  00A9               	movwf	LCD_puts_RAM@P+1
  8296  1678  3080               	movlw	128
  8297  1679  0021               	movlb	1	; select bank1
  8298  167A  00DB               	movwf	??_main^(0+128)
  8299  167B  085B               	movf	??_main^(0+128),w
  8300  167C  0020               	movlb	0	; select bank0
  8301  167D  00AA               	movwf	LCD_puts_RAM@line
  8302  167E  01AB               	clrf	LCD_puts_RAM@offset
  8303  167F  31AC  2481  3195   	fcall	_LCD_puts_RAM
  8304                           
  8305                           ;main.c: 122: get_field(line, 2);
  8306  1682  30A8               	movlw	168
  8307  1683  0020               	movlb	0	; select bank0
  8308  1684  00A0               	movwf	get_field@field
  8309  1685  3026               	movlw	38
  8310  1686  00A1               	movwf	get_field@field+1
  8311  1687  3002               	movlw	2
  8312  1688  0021               	movlb	1	; select bank1
  8313  1689  00DB               	movwf	??_main^(0+128)
  8314  168A  085B               	movf	??_main^(0+128),w
  8315  168B  0020               	movlb	0	; select bank0
  8316  168C  00A2               	movwf	get_field@N
  8317  168D  31AF  2750  3195   	fcall	_get_field
  8318                           
  8319                           ;main.c: 123: lon1 = atof(line);
  8320  1690  30A8               	movlw	168
  8321  1691  0020               	movlb	0	; select bank0
  8322  1692  00EC               	movwf	atof@s
  8323  1693  3026               	movlw	38
  8324  1694  00ED               	movwf	atof@s+1
  8325  1695  31AB  237D  3195   	fcall	_atof
  8326  1698  0020               	movlb	0	; select bank0
  8327  1699  086C               	movf	?_atof,w
  8328  169A  0022               	movlb	2	; select bank2
  8329  169B  00DF               	movwf	main@lon1^(0+256)
  8330  169C  0020               	movlb	0	; select bank0
  8331  169D  086D               	movf	?_atof+1,w
  8332  169E  0022               	movlb	2	; select bank2
  8333  169F  00E0               	movwf	(main@lon1+1)^(0+256)
  8334  16A0  0020               	movlb	0	; select bank0
  8335  16A1  086E               	movf	?_atof+2,w
  8336  16A2  0022               	movlb	2	; select bank2
  8337  16A3  00E1               	movwf	(main@lon1+2)^(0+256)
  8338                           
  8339                           ;main.c: 124: sprintf(line, "lon1 = %f", lon1);
  8340  16A4  30A8               	movlw	168
  8341  16A5  0021               	movlb	1	; select bank1
  8342  16A6  00A6               	movwf	sprintf@sp^(0+128)
  8343  16A7  3026               	movlw	38
  8344  16A8  00A7               	movwf	(sprintf@sp^(0+128)+1)
  8345  16A9  3028               	movlw	low (STR_5| (0+32768))
  8346  16AA  00A8               	movwf	sprintf@f^(0+128)
  8347  16AB  30A1               	movlw	high (STR_5| (0+32768))
  8348  16AC  00A9               	movwf	(sprintf@f^(0+128)+1)
  8349  16AD  0022               	movlb	2	; select bank2
  8350  16AE  085F               	movf	main@lon1^(0+256),w
  8351  16AF  0021               	movlb	1	; select bank1
  8352  16B0  00AA               	movwf	(?_sprintf^(0+128)+4)
  8353  16B1  0022               	movlb	2	; select bank2
  8354  16B2  0860               	movf	(main@lon1+1)^(0+256),w
  8355  16B3  0021               	movlb	1	; select bank1
  8356  16B4  00AB               	movwf	((?_sprintf+1)^(0+128)+4)
  8357  16B5  0022               	movlb	2	; select bank2
  8358  16B6  0861               	movf	(main@lon1+2)^(0+256),w
  8359  16B7  0021               	movlb	1	; select bank1
  8360  16B8  00AC               	movwf	((?_sprintf+2)^(0+128)+4)
  8361  16B9  3180  2059  3195   	fcall	_sprintf
  8362                           
  8363                           ;main.c: 125: LCD_puts_RAM(line, 0xC0, 0);
  8364  16BC  30A8               	movlw	168
  8365  16BD  0020               	movlb	0	; select bank0
  8366  16BE  00A8               	movwf	LCD_puts_RAM@P
  8367  16BF  3026               	movlw	38
  8368  16C0  00A9               	movwf	LCD_puts_RAM@P+1
  8369  16C1  30C0               	movlw	192
  8370  16C2  0021               	movlb	1	; select bank1
  8371  16C3  00DB               	movwf	??_main^(0+128)
  8372  16C4  085B               	movf	??_main^(0+128),w
  8373  16C5  0020               	movlb	0	; select bank0
  8374  16C6  00AA               	movwf	LCD_puts_RAM@line
  8375  16C7  01AB               	clrf	LCD_puts_RAM@offset
  8376  16C8  31AC  2481  3195   	fcall	_LCD_puts_RAM
  8377                           
  8378                           ;main.c: 127: get_field(line, 3);
  8379  16CB  30A8               	movlw	168
  8380  16CC  0020               	movlb	0	; select bank0
  8381  16CD  00A0               	movwf	get_field@field
  8382  16CE  3026               	movlw	38
  8383  16CF  00A1               	movwf	get_field@field+1
  8384  16D0  3003               	movlw	3
  8385  16D1  0021               	movlb	1	; select bank1
  8386  16D2  00DB               	movwf	??_main^(0+128)
  8387  16D3  085B               	movf	??_main^(0+128),w
  8388  16D4  0020               	movlb	0	; select bank0
  8389  16D5  00A2               	movwf	get_field@N
  8390  16D6  31AF  2750  3195   	fcall	_get_field
  8391                           
  8392                           ;main.c: 128: lat2 = atof(line);
  8393  16D9  30A8               	movlw	168
  8394  16DA  0020               	movlb	0	; select bank0
  8395  16DB  00EC               	movwf	atof@s
  8396  16DC  3026               	movlw	38
  8397  16DD  00ED               	movwf	atof@s+1
  8398  16DE  31AB  237D  3195   	fcall	_atof
  8399  16E1  0020               	movlb	0	; select bank0
  8400  16E2  086C               	movf	?_atof,w
  8401  16E3  0022               	movlb	2	; select bank2
  8402  16E4  00E2               	movwf	main@lat2^(0+256)
  8403  16E5  0020               	movlb	0	; select bank0
  8404  16E6  086D               	movf	?_atof+1,w
  8405  16E7  0022               	movlb	2	; select bank2
  8406  16E8  00E3               	movwf	(main@lat2+1)^(0+256)
  8407  16E9  0020               	movlb	0	; select bank0
  8408  16EA  086E               	movf	?_atof+2,w
  8409  16EB  0022               	movlb	2	; select bank2
  8410  16EC  00E4               	movwf	(main@lat2+2)^(0+256)
  8411                           
  8412                           ;main.c: 129: sprintf(line, "lat2 = %f", lat2);
  8413  16ED  30A8               	movlw	168
  8414  16EE  0021               	movlb	1	; select bank1
  8415  16EF  00A6               	movwf	sprintf@sp^(0+128)
  8416  16F0  3026               	movlw	38
  8417  16F1  00A7               	movwf	(sprintf@sp^(0+128)+1)
  8418  16F2  3046               	movlw	low (STR_6| (0+32768))
  8419  16F3  00A8               	movwf	sprintf@f^(0+128)
  8420  16F4  30A1               	movlw	high (STR_6| (0+32768))
  8421  16F5  00A9               	movwf	(sprintf@f^(0+128)+1)
  8422  16F6  0022               	movlb	2	; select bank2
  8423  16F7  0862               	movf	main@lat2^(0+256),w
  8424  16F8  0021               	movlb	1	; select bank1
  8425  16F9  00AA               	movwf	(?_sprintf^(0+128)+4)
  8426  16FA  0022               	movlb	2	; select bank2
  8427  16FB  0863               	movf	(main@lat2+1)^(0+256),w
  8428  16FC  0021               	movlb	1	; select bank1
  8429  16FD  00AB               	movwf	((?_sprintf+1)^(0+128)+4)
  8430  16FE  0022               	movlb	2	; select bank2
  8431  16FF  0864               	movf	(main@lat2+2)^(0+256),w
  8432  1700  0021               	movlb	1	; select bank1
  8433  1701  00AC               	movwf	((?_sprintf+2)^(0+128)+4)
  8434  1702  3180  2059  3195   	fcall	_sprintf
  8435                           
  8436                           ;main.c: 130: LCD_puts_RAM(line, 0x94, 0);
  8437  1705  30A8               	movlw	168
  8438  1706  0020               	movlb	0	; select bank0
  8439  1707  00A8               	movwf	LCD_puts_RAM@P
  8440  1708  3026               	movlw	38
  8441  1709  00A9               	movwf	LCD_puts_RAM@P+1
  8442  170A  3094               	movlw	148
  8443  170B  0021               	movlb	1	; select bank1
  8444  170C  00DB               	movwf	??_main^(0+128)
  8445  170D  085B               	movf	??_main^(0+128),w
  8446  170E  0020               	movlb	0	; select bank0
  8447  170F  00AA               	movwf	LCD_puts_RAM@line
  8448  1710  01AB               	clrf	LCD_puts_RAM@offset
  8449  1711  31AC  2481  3195   	fcall	_LCD_puts_RAM
  8450                           
  8451                           ;main.c: 132: get_field(line, 4);
  8452  1714  30A8               	movlw	168
  8453  1715  0020               	movlb	0	; select bank0
  8454  1716  00A0               	movwf	get_field@field
  8455  1717  3026               	movlw	38
  8456  1718  00A1               	movwf	get_field@field+1
  8457  1719  3004               	movlw	4
  8458  171A  0021               	movlb	1	; select bank1
  8459  171B  00DB               	movwf	??_main^(0+128)
  8460  171C  085B               	movf	??_main^(0+128),w
  8461  171D  0020               	movlb	0	; select bank0
  8462  171E  00A2               	movwf	get_field@N
  8463  171F  31AF  2750  3195   	fcall	_get_field
  8464                           
  8465                           ;main.c: 133: lon2 = atof(line);
  8466  1722  30A8               	movlw	168
  8467  1723  0020               	movlb	0	; select bank0
  8468  1724  00EC               	movwf	atof@s
  8469  1725  3026               	movlw	38
  8470  1726  00ED               	movwf	atof@s+1
  8471  1727  31AB  237D  3195   	fcall	_atof
  8472  172A  0020               	movlb	0	; select bank0
  8473  172B  086C               	movf	?_atof,w
  8474  172C  0022               	movlb	2	; select bank2
  8475  172D  00E5               	movwf	main@lon2^(0+256)
  8476  172E  0020               	movlb	0	; select bank0
  8477  172F  086D               	movf	?_atof+1,w
  8478  1730  0022               	movlb	2	; select bank2
  8479  1731  00E6               	movwf	(main@lon2+1)^(0+256)
  8480  1732  0020               	movlb	0	; select bank0
  8481  1733  086E               	movf	?_atof+2,w
  8482  1734  0022               	movlb	2	; select bank2
  8483  1735  00E7               	movwf	(main@lon2+2)^(0+256)
  8484                           
  8485                           ;main.c: 134: sprintf(line, "lon2 = %f", lon2);
  8486  1736  30A8               	movlw	168
  8487  1737  0021               	movlb	1	; select bank1
  8488  1738  00A6               	movwf	sprintf@sp^(0+128)
  8489  1739  3026               	movlw	38
  8490  173A  00A7               	movwf	(sprintf@sp^(0+128)+1)
  8491  173B  303C               	movlw	low (STR_7| (0+32768))
  8492  173C  00A8               	movwf	sprintf@f^(0+128)
  8493  173D  30A1               	movlw	high (STR_7| (0+32768))
  8494  173E  00A9               	movwf	(sprintf@f^(0+128)+1)
  8495  173F  0022               	movlb	2	; select bank2
  8496  1740  0865               	movf	main@lon2^(0+256),w
  8497  1741  0021               	movlb	1	; select bank1
  8498  1742  00AA               	movwf	(?_sprintf^(0+128)+4)
  8499  1743  0022               	movlb	2	; select bank2
  8500  1744  0866               	movf	(main@lon2+1)^(0+256),w
  8501  1745  0021               	movlb	1	; select bank1
  8502  1746  00AB               	movwf	((?_sprintf+1)^(0+128)+4)
  8503  1747  0022               	movlb	2	; select bank2
  8504  1748  0867               	movf	(main@lon2+2)^(0+256),w
  8505  1749  0021               	movlb	1	; select bank1
  8506  174A  00AC               	movwf	((?_sprintf+2)^(0+128)+4)
  8507  174B  3180  2059  3195   	fcall	_sprintf
  8508                           
  8509                           ;main.c: 135: LCD_puts_RAM(line, 0xD4, 0);
  8510  174E  30A8               	movlw	168
  8511  174F  0020               	movlb	0	; select bank0
  8512  1750  00A8               	movwf	LCD_puts_RAM@P
  8513  1751  3026               	movlw	38
  8514  1752  00A9               	movwf	LCD_puts_RAM@P+1
  8515  1753  30D4               	movlw	212
  8516  1754  0021               	movlb	1	; select bank1
  8517  1755  00DB               	movwf	??_main^(0+128)
  8518  1756  085B               	movf	??_main^(0+128),w
  8519  1757  0020               	movlb	0	; select bank0
  8520  1758  00AA               	movwf	LCD_puts_RAM@line
  8521  1759  01AB               	clrf	LCD_puts_RAM@offset
  8522  175A  31AC  2481  3195   	fcall	_LCD_puts_RAM
  8523                           
  8524                           ;main.c: 137: dist = distance(lat1, lon1, lat2, lon2, 'k');
  8525  175D  0022               	movlb	2	; select bank2
  8526  175E  085C               	movf	main@lat1^(0+256),w
  8527  175F  00A0               	movwf	distance@lat1^(0+256)
  8528  1760  085D               	movf	(main@lat1+1)^(0+256),w
  8529  1761  00A1               	movwf	(distance@lat1+1)^(0+256)
  8530  1762  085E               	movf	(main@lat1+2)^(0+256),w
  8531  1763  00A2               	movwf	(distance@lat1+2)^(0+256)
  8532  1764  085F               	movf	main@lon1^(0+256),w
  8533  1765  00A3               	movwf	distance@lon1^(0+256)
  8534  1766  0860               	movf	(main@lon1+1)^(0+256),w
  8535  1767  00A4               	movwf	(distance@lon1+1)^(0+256)
  8536  1768  0861               	movf	(main@lon1+2)^(0+256),w
  8537  1769  00A5               	movwf	(distance@lon1+2)^(0+256)
  8538  176A  0862               	movf	main@lat2^(0+256),w
  8539  176B  00A6               	movwf	distance@lat2^(0+256)
  8540  176C  0863               	movf	(main@lat2+1)^(0+256),w
  8541  176D  00A7               	movwf	(distance@lat2+1)^(0+256)
  8542  176E  0864               	movf	(main@lat2+2)^(0+256),w
  8543  176F  00A8               	movwf	(distance@lat2+2)^(0+256)
  8544  1770  0865               	movf	main@lon2^(0+256),w
  8545  1771  00A9               	movwf	distance@lon2^(0+256)
  8546  1772  0866               	movf	(main@lon2+1)^(0+256),w
  8547  1773  00AA               	movwf	(distance@lon2+1)^(0+256)
  8548  1774  0867               	movf	(main@lon2+2)^(0+256),w
  8549  1775  00AB               	movwf	(distance@lon2+2)^(0+256)
  8550  1776  306B               	movlw	107
  8551  1777  0021               	movlb	1	; select bank1
  8552  1778  00DB               	movwf	??_main^(0+128)
  8553  1779  085B               	movf	??_main^(0+128),w
  8554  177A  0022               	movlb	2	; select bank2
  8555  177B  00AC               	movwf	distance@unit^(0+256)
  8556  177C  3191  21C5  3195   	fcall	_distance
  8557  177F  0022               	movlb	2	; select bank2
  8558  1780  0820               	movf	?_distance^(0+256),w
  8559  1781  00D6               	movwf	main@dist^(0+256)
  8560  1782  0821               	movf	(?_distance+1)^(0+256),w
  8561  1783  00D7               	movwf	(main@dist+1)^(0+256)
  8562  1784  0822               	movf	(?_distance+2)^(0+256),w
  8563  1785  00D8               	movwf	(main@dist+2)^(0+256)
  8564                           
  8565                           ;main.c: 139: head = heading(lat1, lon1, lat2, lon2);
  8566  1786  085C               	movf	main@lat1^(0+256),w
  8567  1787  0021               	movlb	1	; select bank1
  8568  1788  00CF               	movwf	heading@lat1^(0+128)
  8569  1789  0022               	movlb	2	; select bank2
  8570  178A  085D               	movf	(main@lat1+1)^(0+256),w
  8571  178B  0021               	movlb	1	; select bank1
  8572  178C  00D0               	movwf	(heading@lat1+1)^(0+128)
  8573  178D  0022               	movlb	2	; select bank2
  8574  178E  085E               	movf	(main@lat1+2)^(0+256),w
  8575  178F  0021               	movlb	1	; select bank1
  8576  1790  00D1               	movwf	(heading@lat1+2)^(0+128)
  8577  1791  0022               	movlb	2	; select bank2
  8578  1792  085F               	movf	main@lon1^(0+256),w
  8579  1793  0021               	movlb	1	; select bank1
  8580  1794  00D2               	movwf	heading@lon1^(0+128)
  8581  1795  0022               	movlb	2	; select bank2
  8582  1796  0860               	movf	(main@lon1+1)^(0+256),w
  8583  1797  0021               	movlb	1	; select bank1
  8584  1798  00D3               	movwf	(heading@lon1+1)^(0+128)
  8585  1799  0022               	movlb	2	; select bank2
  8586  179A  0861               	movf	(main@lon1+2)^(0+256),w
  8587  179B  0021               	movlb	1	; select bank1
  8588  179C  00D4               	movwf	(heading@lon1+2)^(0+128)
  8589  179D  0022               	movlb	2	; select bank2
  8590  179E  0862               	movf	main@lat2^(0+256),w
  8591  179F  0021               	movlb	1	; select bank1
  8592  17A0  00D5               	movwf	heading@lat2^(0+128)
  8593  17A1  0022               	movlb	2	; select bank2
  8594  17A2  0863               	movf	(main@lat2+1)^(0+256),w
  8595  17A3  0021               	movlb	1	; select bank1
  8596  17A4  00D6               	movwf	(heading@lat2+1)^(0+128)
  8597  17A5  0022               	movlb	2	; select bank2
  8598  17A6  0864               	movf	(main@lat2+2)^(0+256),w
  8599  17A7  0021               	movlb	1	; select bank1
  8600  17A8  00D7               	movwf	(heading@lat2+2)^(0+128)
  8601  17A9  0022               	movlb	2	; select bank2
  8602  17AA  0865               	movf	main@lon2^(0+256),w
  8603  17AB  0021               	movlb	1	; select bank1
  8604  17AC  00D8               	movwf	heading@lon2^(0+128)
  8605  17AD  0022               	movlb	2	; select bank2
  8606  17AE  0866               	movf	(main@lon2+1)^(0+256),w
  8607  17AF  0021               	movlb	1	; select bank1
  8608  17B0  00D9               	movwf	(heading@lon2+1)^(0+128)
  8609  17B1  0022               	movlb	2	; select bank2
  8610  17B2  0867               	movf	(main@lon2+2)^(0+256),w
  8611  17B3  0021               	movlb	1	; select bank1
  8612  17B4  00DA               	movwf	(heading@lon2+2)^(0+128)
  8613  17B5  318C  24A1  3195   	fcall	_heading
  8614  17B8  0021               	movlb	1	; select bank1
  8615  17B9  084F               	movf	?_heading^(0+128),w
  8616  17BA  0022               	movlb	2	; select bank2
  8617  17BB  00D9               	movwf	main@head^(0+256)
  8618  17BC  0021               	movlb	1	; select bank1
  8619  17BD  0850               	movf	(?_heading+1)^(0+128),w
  8620  17BE  0022               	movlb	2	; select bank2
  8621  17BF  00DA               	movwf	(main@head+1)^(0+256)
  8622  17C0  0021               	movlb	1	; select bank1
  8623  17C1  0851               	movf	(?_heading+2)^(0+128),w
  8624  17C2  0022               	movlb	2	; select bank2
  8625  17C3  00DB               	movwf	(main@head+2)^(0+256)
  8626                           
  8627                           ;main.c: 141: sprintf(line, "distance = %f angle = %f ", dist, head);
  8628  17C4  30A8               	movlw	168
  8629  17C5  0021               	movlb	1	; select bank1
  8630  17C6  00A6               	movwf	sprintf@sp^(0+128)
  8631  17C7  3026               	movlw	38
  8632  17C8  00A7               	movwf	(sprintf@sp^(0+128)+1)
  8633  17C9  30D2               	movlw	low (STR_8| (0+32768))
  8634  17CA  00A8               	movwf	sprintf@f^(0+128)
  8635  17CB  30A0               	movlw	high (STR_8| (0+32768))
  8636  17CC  00A9               	movwf	(sprintf@f^(0+128)+1)
  8637  17CD  0022               	movlb	2	; select bank2
  8638  17CE  0856               	movf	main@dist^(0+256),w
  8639  17CF  0021               	movlb	1	; select bank1
  8640  17D0  00AA               	movwf	(?_sprintf^(0+128)+4)
  8641  17D1  0022               	movlb	2	; select bank2
  8642  17D2  0857               	movf	(main@dist+1)^(0+256),w
  8643  17D3  0021               	movlb	1	; select bank1
  8644  17D4  00AB               	movwf	((?_sprintf+1)^(0+128)+4)
  8645  17D5  0022               	movlb	2	; select bank2
  8646  17D6  0858               	movf	(main@dist+2)^(0+256),w
  8647  17D7  0021               	movlb	1	; select bank1
  8648  17D8  00AC               	movwf	((?_sprintf+2)^(0+128)+4)
  8649  17D9  0022               	movlb	2	; select bank2
  8650  17DA  0859               	movf	main@head^(0+256),w
  8651  17DB  0021               	movlb	1	; select bank1
  8652  17DC  00AD               	movwf	(?_sprintf^(0+128)+7)
  8653  17DD  0022               	movlb	2	; select bank2
  8654  17DE  085A               	movf	(main@head+1)^(0+256),w
  8655  17DF  0021               	movlb	1	; select bank1
  8656  17E0  00AE               	movwf	((?_sprintf+1)^(0+128)+7)
  8657  17E1  0022               	movlb	2	; select bank2
  8658  17E2  085B               	movf	(main@head+2)^(0+256),w
  8659  17E3  0021               	movlb	1	; select bank1
  8660  17E4  00AF               	movwf	((?_sprintf+2)^(0+128)+7)
  8661  17E5  3180  2059  3195   	fcall	_sprintf
  8662                           
  8663                           ;main.c: 142: LCD_puts_RAM(line, 0x80, 0);
  8664  17E8  30A8               	movlw	168
  8665  17E9  0020               	movlb	0	; select bank0
  8666  17EA  00A8               	movwf	LCD_puts_RAM@P
  8667  17EB  3026               	movlw	38
  8668  17EC  00A9               	movwf	LCD_puts_RAM@P+1
  8669  17ED  3080               	movlw	128
  8670  17EE  0021               	movlb	1	; select bank1
  8671  17EF  00DB               	movwf	??_main^(0+128)
  8672  17F0  085B               	movf	??_main^(0+128),w
  8673  17F1  0020               	movlb	0	; select bank0
  8674  17F2  00AA               	movwf	LCD_puts_RAM@line
  8675  17F3  01AB               	clrf	LCD_puts_RAM@offset
  8676  17F4  31AC  2481  3195   	fcall	_LCD_puts_RAM
  8677                           
  8678                           ;main.c: 143: serial_puts_RAM(line);
  8679  17F7  30A8               	movlw	168
  8680  17F8  0020               	movlb	0	; select bank0
  8681  17F9  00A2               	movwf	serial_puts_RAM@P
  8682  17FA  3026               	movlw	38
  8683  17FB  00A3               	movwf	serial_puts_RAM@P+1
  8684  17FC  31AB  23B4  3195   	fcall	_serial_puts_RAM
  8685  17FF  2DFA               	goto	l7134
  8686  1800                     __end_of_main:	
  8687                           ;main.c: 145: }
  8688                           ;main.c: 146: }
  8689                           ;main.c: 148: serial_puts_ROM("\n");
  8690                           
  8691                           
  8692                           	psect	text1
  8693  0059                     __ptext1:	
  8694 ;; *************** function _sprintf *****************
  8695 ;; Defined at:
  8696 ;;		line 492 in file "/opt/microchip/xc8/v1.35/sources/common/doprnt.c"
  8697 ;; Parameters:    Size  Location     Type
  8698 ;;  sp              2    6[BANK1 ] PTR unsigned char 
  8699 ;;		 -> line(100), 
  8700 ;;  f               2    8[BANK1 ] PTR const unsigned char 
  8701 ;;		 -> STR_8(26), STR_7(10), STR_6(10), STR_5(10), 
  8702 ;;		 -> STR_4(10), STR_3(12), 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  idx             1   25[BANK1 ] unsigned char 
  8705 ;;  tmpval          4   37[BANK1 ] struct .
  8706 ;;  val             4   31[BANK1 ] unsigned long 
  8707 ;;  fval            3   41[BANK1 ] unsigned long 
  8708 ;;  exp             2   35[BANK1 ] int 
  8709 ;;  prec            2   29[BANK1 ] int 
  8710 ;;  flag            2   27[BANK1 ] unsigned short 
  8711 ;;  cp              2    0        PTR const unsigned char 
  8712 ;;  len             2    0        unsigned int 
  8713 ;;  width           2    0        int 
  8714 ;;  c               1   44[BANK1 ] char 
  8715 ;;  ap              1   26[BANK1 ] PTR void [1]
  8716 ;;		 -> ?_sprintf(2), 
  8717 ;;  d               1    0        unsigned char 
  8718 ;; Return value:  Size  Location     Type
  8719 ;;                  2    6[BANK1 ] int 
  8720 ;; Registers used:
  8721 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8722 ;; Tracked objects:
  8723 ;;		On entry : 0/0
  8724 ;;		On exit  : 0/0
  8725 ;;		Unchanged: 0/0
  8726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8727 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8728 ;;      Locals:         0       0      23       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8729 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8730 ;;      Totals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8731 ;;Total ram usage:       39 bytes
  8732 ;; Hardware stack levels used:    1
  8733 ;; Hardware stack levels required when called:    8
  8734 ;; This function calls:
  8735 ;;		___awdiv
  8736 ;;		___ftadd
  8737 ;;		___ftge
  8738 ;;		___ftmul
  8739 ;;		___ftneg
  8740 ;;		___ftsub
  8741 ;;		___fttol
  8742 ;;		___lldiv
  8743 ;;		___llmod
  8744 ;;		___lltoft
  8745 ;;		___wmul
  8746 ;;		__div_to_l_
  8747 ;;		__tdiv_to_l_
  8748 ;;		_fround
  8749 ;;		_scale
  8750 ;; This function is called by:
  8751 ;;		_main
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755                           
  8756                           ;psect for function _sprintf
  8757  0059                     _sprintf:	
  8758                           
  8759                           ;doprnt.c: 494: va_list ap;
  8760                           ;doprnt.c: 499: signed char c;
  8761                           ;doprnt.c: 501: int width;
  8762                           ;doprnt.c: 504: int prec;
  8763                           ;doprnt.c: 508: unsigned short flag;
  8764                           ;doprnt.c: 515: char d;
  8765                           ;doprnt.c: 516: double fval;
  8766                           ;doprnt.c: 517: int exp;
  8767                           ;doprnt.c: 523: union {
  8768                           ;doprnt.c: 524: unsigned long vd;
  8769                           ;doprnt.c: 525: double integ;
  8770                           ;doprnt.c: 526: } tmpval;
  8771                           ;doprnt.c: 528: unsigned long val;
  8772                           ;doprnt.c: 529: unsigned len;
  8773                           ;doprnt.c: 530: const char * cp;
  8774                           ;doprnt.c: 533: *ap = __va_start();
  8775                           
  8776                           ;incstack = 0
  8777                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8778  0059  30AA               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  8779  005A  0021               	movlb	1	; select bank1
  8780  005B  00B0               	movwf	??_sprintf^(0+128)
  8781  005C  0830               	movf	??_sprintf^(0+128),w
  8782  005D  00BA               	movwf	sprintf@ap^(0+128)
  8783  005E                     l6978:	
  8784                           ;doprnt.c: 536: while(c = *f++) {
  8785                           
  8786  005E  0829               	movf	(sprintf@f+1)^(0+128),w
  8787  005F  00B1               	movwf	(??_sprintf^(0+128)+1)
  8788  0060  0828               	movf	sprintf@f^(0+128),w
  8789  0061  00B0               	movwf	??_sprintf^(0+128)
  8790  0062  0AA8               	incf	sprintf@f^(0+128),f
  8791  0063  1903               	skipnz
  8792  0064  0AA9               	incf	(sprintf@f+1)^(0+128),f
  8793  0065  0830               	movf	??_sprintf^(0+128),w
  8794  0066  0084               	movwf	4
  8795  0067  0831               	movf	(??_sprintf+1)^(0+128),w
  8796  0068  0085               	movwf	5
  8797  0069  0800               	movf	0,w	;code access
  8798  006A  00B2               	movwf	(??_sprintf+2)^(0+128)
  8799  006B  0832               	movf	(??_sprintf+2)^(0+128),w
  8800  006C  00CC               	movwf	sprintf@c^(0+128)
  8801  006D  084C               	movf	sprintf@c^(0+128),w
  8802  006E  1903               	btfsc	3,2
  8803  006F  2D83               	goto	l6980
  8804                           
  8805                           ;doprnt.c: 538: if(c != '%')
  8806  0070  3025               	movlw	37
  8807  0071  064C               	xorwf	sprintf@c^(0+128),w
  8808  0072  1903               	btfsc	3,2
  8809  0073  287F               	goto	l6796
  8810                           
  8811                           ;doprnt.c: 540: {
  8812                           ;doprnt.c: 541: ((*sp++ = (c)));
  8813  0074  0826               	movf	sprintf@sp^(0+128),w
  8814  0075  0086               	movwf	6
  8815  0076  0827               	movf	(sprintf@sp+1)^(0+128),w
  8816  0077  0087               	movwf	7
  8817  0078  084C               	movf	sprintf@c^(0+128),w
  8818  0079  0081               	movwf	1
  8819  007A  3001               	movlw	1
  8820  007B  07A6               	addwf	sprintf@sp^(0+128),f
  8821  007C  3000               	movlw	0
  8822  007D  3DA7               	addwfc	(sprintf@sp+1)^(0+128),f
  8823                           
  8824                           ;doprnt.c: 542: continue;
  8825  007E  285E               	goto	l6978
  8826  007F                     l6796:	
  8827                           
  8828                           ;doprnt.c: 543: }
  8829                           ;doprnt.c: 548: flag = 0;
  8830  007F  01BB               	clrf	sprintf@flag^(0+128)
  8831  0080  01BC               	clrf	(sprintf@flag+1)^(0+128)
  8832                           
  8833                           ;doprnt.c: 635: switch(c = *f++) {
  8834  0081  2884               	goto	l6800
  8835  0082                     l683:	
  8836                           ;doprnt.c: 662: case 'f':
  8837                           
  8838                           ;doprnt.c: 638: goto alldone;
  8839                           
  8840                           ;doprnt.c: 637: case 0:
  8841                           
  8842                           
  8843                           ;doprnt.c: 663: flag |= 0x400;
  8844  0082  153C               	bsf	(sprintf@flag^(0+128)+1),2
  8845                           
  8846                           ;doprnt.c: 718: case 'x':
  8847                           ;doprnt.c: 723: break;
  8848                           
  8849                           ;doprnt.c: 712: case 'X':
  8850                           
  8851                           ;doprnt.c: 664: break;
  8852  0083  289E               	goto	l6802
  8853  0084                     l6800:	
  8854                           ;doprnt.c: 822: }
  8855                           
  8856                           ;doprnt.c: 813: continue;
  8857                           
  8858                           ;doprnt.c: 802: default:
  8859                           
  8860  0084  0829               	movf	(sprintf@f+1)^(0+128),w
  8861  0085  00B1               	movwf	(??_sprintf^(0+128)+1)
  8862  0086  0828               	movf	sprintf@f^(0+128),w
  8863  0087  00B0               	movwf	??_sprintf^(0+128)
  8864  0088  0AA8               	incf	sprintf@f^(0+128),f
  8865  0089  1903               	skipnz
  8866  008A  0AA9               	incf	(sprintf@f+1)^(0+128),f
  8867  008B  0830               	movf	??_sprintf^(0+128),w
  8868  008C  0084               	movwf	4
  8869  008D  0831               	movf	(??_sprintf+1)^(0+128),w
  8870  008E  0085               	movwf	5
  8871  008F  0800               	movf	0,w	;code access
  8872  0090  00CC               	movwf	sprintf@c^(0+128)
  8873                           
  8874                           ; Switch size 1, requested type "space"
  8875                           ; Number of cases is 4, Range of values is 0 to 120
  8876                           ; switch strategies available:
  8877                           ; Name         Instructions Cycles
  8878                           ; simple_byte           13     7 (average)
  8879                           ; direct_byte          248     6 (fixed)
  8880                           ; jumptable            260     6 (fixed)
  8881                           ;	Chosen strategy is simple_byte
  8882  0091  3A00               	xorlw	0	; case 0
  8883  0092  1903               	skipnz
  8884  0093  2D83               	goto	l6980
  8885  0094  3A58               	xorlw	88	; case 88
  8886  0095  1903               	skipnz
  8887  0096  289E               	goto	l6802
  8888  0097  3A3E               	xorlw	62	; case 102
  8889  0098  1903               	skipnz
  8890  0099  2882               	goto	l683
  8891  009A  3A1E               	xorlw	30	; case 120
  8892  009B  1903               	skipnz
  8893  009C  289E               	goto	l6802
  8894  009D  285E               	goto	l6978
  8895  009E                     l6802:	
  8896                           
  8897                           ;doprnt.c: 825: if(flag & (0x700)) {
  8898  009E  3000               	movlw	0
  8899  009F  053B               	andwf	sprintf@flag^(0+128),w
  8900  00A0  00B0               	movwf	??_sprintf^(0+128)
  8901  00A1  3007               	movlw	7
  8902  00A2  053C               	andwf	(sprintf@flag+1)^(0+128),w
  8903  00A3  00B1               	movwf	(??_sprintf+1)^(0+128)
  8904  00A4  0830               	movf	??_sprintf^(0+128),w
  8905  00A5  0431               	iorwf	(??_sprintf^(0+128)+1),w
  8906  00A6  1903               	btfsc	3,2
  8907  00A7  2CD8               	goto	l6944
  8908                           
  8909                           ;doprnt.c: 829: prec = 6;
  8910  00A8  3006               	movlw	6
  8911  00A9  00BD               	movwf	sprintf@prec^(0+128)
  8912  00AA  3000               	movlw	0
  8913  00AB  00BE               	movwf	(sprintf@prec^(0+128)+1)
  8914                           
  8915                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  8916  00AC  083A               	movf	sprintf@ap^(0+128),w
  8917  00AD  0086               	movwf	6
  8918  00AE  0187               	clrf	7
  8919  00AF  3F40               	moviw [0]fsr1
  8920  00B0  00C9               	movwf	sprintf@fval^(0+128)
  8921  00B1  3F41               	moviw [1]fsr1
  8922  00B2  00CA               	movwf	(sprintf@fval+1)^(0+128)
  8923  00B3  3F42               	moviw [2]fsr1
  8924  00B4  00CB               	movwf	(sprintf@fval+2)^(0+128)
  8925  00B5  3003               	movlw	3
  8926  00B6  00B0               	movwf	??_sprintf^(0+128)
  8927  00B7  0830               	movf	??_sprintf^(0+128),w
  8928  00B8  07BA               	addwf	sprintf@ap^(0+128),f
  8929                           
  8930                           ;doprnt.c: 831: if(fval < 0.0) {
  8931  00B9  0849               	movf	sprintf@fval^(0+128),w
  8932  00BA  0020               	movlb	0	; select bank0
  8933  00BB  00A0               	movwf	___ftge@ff1
  8934  00BC  0021               	movlb	1	; select bank1
  8935  00BD  084A               	movf	(sprintf@fval+1)^(0+128),w
  8936  00BE  0020               	movlb	0	; select bank0
  8937  00BF  00A1               	movwf	___ftge@ff1+1
  8938  00C0  0021               	movlb	1	; select bank1
  8939  00C1  084B               	movf	(sprintf@fval+2)^(0+128),w
  8940  00C2  0020               	movlb	0	; select bank0
  8941  00C3  00A2               	movwf	___ftge@ff1+2
  8942  00C4  3000               	movlw	0
  8943  00C5  00A3               	movwf	___ftge@ff2
  8944  00C6  3000               	movlw	0
  8945  00C7  00A4               	movwf	___ftge@ff2+1
  8946  00C8  3000               	movlw	0
  8947  00C9  00A5               	movwf	___ftge@ff2+2
  8948  00CA  31AF  27C4  3180   	fcall	___ftge
  8949  00CD  1803               	btfsc	3,0
  8950  00CE  28EE               	goto	l6816
  8951                           
  8952                           ;doprnt.c: 832: fval = -fval;
  8953  00CF  0021               	movlb	1	; select bank1
  8954  00D0  0849               	movf	sprintf@fval^(0+128),w
  8955  00D1  0020               	movlb	0	; select bank0
  8956  00D2  00A0               	movwf	___ftneg@f1
  8957  00D3  0021               	movlb	1	; select bank1
  8958  00D4  084A               	movf	(sprintf@fval+1)^(0+128),w
  8959  00D5  0020               	movlb	0	; select bank0
  8960  00D6  00A1               	movwf	___ftneg@f1+1
  8961  00D7  0021               	movlb	1	; select bank1
  8962  00D8  084B               	movf	(sprintf@fval+2)^(0+128),w
  8963  00D9  0020               	movlb	0	; select bank0
  8964  00DA  00A2               	movwf	___ftneg@f1+2
  8965  00DB  3198  2003  3180   	fcall	___ftneg
  8966  00DE  0020               	movlb	0	; select bank0
  8967  00DF  0820               	movf	?___ftneg,w
  8968  00E0  0021               	movlb	1	; select bank1
  8969  00E1  00C9               	movwf	sprintf@fval^(0+128)
  8970  00E2  0020               	movlb	0	; select bank0
  8971  00E3  0821               	movf	?___ftneg+1,w
  8972  00E4  0021               	movlb	1	; select bank1
  8973  00E5  00CA               	movwf	(sprintf@fval+1)^(0+128)
  8974  00E6  0020               	movlb	0	; select bank0
  8975  00E7  0822               	movf	?___ftneg+2,w
  8976  00E8  0021               	movlb	1	; select bank1
  8977  00E9  00CB               	movwf	(sprintf@fval+2)^(0+128)
  8978                           
  8979                           ;doprnt.c: 833: flag |= 0x03;
  8980  00EA  3003               	movlw	3
  8981  00EB  04BB               	iorwf	sprintf@flag^(0+128),f
  8982  00EC  3000               	movlw	0
  8983  00ED  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  8984  00EE                     l6816:	
  8985                           
  8986                           ;doprnt.c: 834: }
  8987                           ;doprnt.c: 835: exp = 0;
  8988  00EE  0021               	movlb	1	; select bank1
  8989  00EF  01C3               	clrf	sprintf@exp^(0+128)
  8990  00F0  01C4               	clrf	(sprintf@exp+1)^(0+128)
  8991                           
  8992                           ;doprnt.c: 836: if( fval!=0) {
  8993  00F1  084B               	movf	(sprintf@fval+2)^(0+128),w
  8994  00F2  044A               	iorwf	(sprintf@fval+1)^(0+128),w
  8995  00F3  0449               	iorwf	sprintf@fval^(0+128),w
  8996  00F4  1903               	skipnz
  8997  00F5  29BC               	goto	l690
  8998                           
  8999                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  9000  00F6  30C9               	movlw	low (sprintf@fval| 0)
  9001  00F7  0086               	movwf	6
  9002  00F8  0187               	clrf	7
  9003  00F9  3F40               	moviw [0]fsr1
  9004  00FA  00B0               	movwf	??_sprintf^(0+128)
  9005  00FB  3F41               	moviw [1]fsr1
  9006  00FC  00B1               	movwf	(??_sprintf^(0+128)+1)
  9007  00FD  3F42               	moviw [2]fsr1
  9008  00FE  00B2               	movwf	(??_sprintf^(0+128)+2)
  9009  00FF  3F43               	moviw [3]fsr1
  9010  0100  00B3               	movwf	(??_sprintf^(0+128)+3)
  9011  0101  300F               	movlw	15
  9012  0102                     u8705:	
  9013  0102  36B3               	lsrf	(??_sprintf^(0+128)+3),f
  9014  0103  0CB2               	rrf	(??_sprintf^(0+128)+2),f
  9015  0104  0CB1               	rrf	(??_sprintf^(0+128)+1),f
  9016  0105  0CB0               	rrf	??_sprintf^(0+128),f
  9017  0106  0B89               	decfsz	9,f
  9018  0107  2902               	goto	u8705
  9019  0108  30FF               	movlw	255
  9020  0109  0530               	andwf	??_sprintf^(0+128),w
  9021  010A  00B4               	movwf	(??_sprintf+4)^(0+128)
  9022  010B  3000               	movlw	0
  9023  010C  0531               	andwf	(??_sprintf+1)^(0+128),w
  9024  010D  00B5               	movwf	(??_sprintf+5)^(0+128)
  9025  010E  0834               	movf	(??_sprintf+4)^(0+128),w
  9026  010F  3E82               	addlw	130
  9027  0110  00C3               	movwf	sprintf@exp^(0+128)
  9028  0111  30FF               	movlw	255
  9029  0112  3D35               	addwfc	(??_sprintf+5)^(0+128),w
  9030  0113  00C4               	movwf	(sprintf@exp+1)^(0+128)
  9031                           
  9032                           ;doprnt.c: 838: exp--;
  9033  0114  30FF               	movlw	255
  9034  0115  07C3               	addwf	sprintf@exp^(0+128),f
  9035  0116  30FF               	movlw	255
  9036  0117  3DC4               	addwfc	(sprintf@exp+1)^(0+128),f
  9037                           
  9038                           ;doprnt.c: 839: exp *= 3;
  9039  0118  3003               	movlw	3
  9040  0119  0020               	movlb	0	; select bank0
  9041  011A  00B0               	movwf	___wmul@multiplier
  9042  011B  3000               	movlw	0
  9043  011C  00B1               	movwf	___wmul@multiplier+1
  9044  011D  0021               	movlb	1	; select bank1
  9045  011E  0844               	movf	(sprintf@exp+1)^(0+128),w
  9046  011F  0020               	movlb	0	; select bank0
  9047  0120  00B3               	movwf	___wmul@multiplicand+1
  9048  0121  0021               	movlb	1	; select bank1
  9049  0122  0843               	movf	sprintf@exp^(0+128),w
  9050  0123  0020               	movlb	0	; select bank0
  9051  0124  00B2               	movwf	___wmul@multiplicand
  9052  0125  31AC  24B9  3180   	fcall	___wmul
  9053  0128  0020               	movlb	0	; select bank0
  9054  0129  0831               	movf	?___wmul+1,w
  9055  012A  0021               	movlb	1	; select bank1
  9056  012B  00C4               	movwf	(sprintf@exp+1)^(0+128)
  9057  012C  0020               	movlb	0	; select bank0
  9058  012D  0830               	movf	?___wmul,w
  9059  012E  0021               	movlb	1	; select bank1
  9060  012F  00C3               	movwf	sprintf@exp^(0+128)
  9061                           
  9062                           ;doprnt.c: 840: exp /= 10;
  9063  0130  300A               	movlw	10
  9064  0131  0020               	movlb	0	; select bank0
  9065  0132  00A7               	movwf	___awdiv@divisor
  9066  0133  3000               	movlw	0
  9067  0134  00A8               	movwf	___awdiv@divisor+1
  9068  0135  0021               	movlb	1	; select bank1
  9069  0136  0844               	movf	(sprintf@exp+1)^(0+128),w
  9070  0137  0020               	movlb	0	; select bank0
  9071  0138  00AA               	movwf	___awdiv@dividend+1
  9072  0139  0021               	movlb	1	; select bank1
  9073  013A  0843               	movf	sprintf@exp^(0+128),w
  9074  013B  0020               	movlb	0	; select bank0
  9075  013C  00A9               	movwf	___awdiv@dividend
  9076  013D  31A2  22A7  3180   	fcall	___awdiv
  9077  0140  0020               	movlb	0	; select bank0
  9078  0141  0828               	movf	?___awdiv+1,w
  9079  0142  0021               	movlb	1	; select bank1
  9080  0143  00C4               	movwf	(sprintf@exp+1)^(0+128)
  9081  0144  0020               	movlb	0	; select bank0
  9082  0145  0827               	movf	?___awdiv,w
  9083  0146  0021               	movlb	1	; select bank1
  9084  0147  00C3               	movwf	sprintf@exp^(0+128)
  9085                           
  9086                           ;doprnt.c: 841: if(exp < 0)
  9087  0148  1FC4               	btfss	(sprintf@exp+1)^(0+128),7
  9088  0149  294E               	goto	l6832
  9089                           
  9090                           ;doprnt.c: 842: exp--;
  9091  014A  30FF               	movlw	255
  9092  014B  07C3               	addwf	sprintf@exp^(0+128),f
  9093  014C  30FF               	movlw	255
  9094  014D  3DC4               	addwfc	(sprintf@exp+1)^(0+128),f
  9095  014E                     l6832:	
  9096                           
  9097                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  9098  014E  0343               	decf	sprintf@exp^(0+128),w
  9099  014F  3AFF               	xorlw	255
  9100  0150  3185  2589  3180   	fcall	_scale
  9101  0153  0020               	movlb	0	; select bank0
  9102  0154  0846               	movf	?_scale,w
  9103  0155  0021               	movlb	1	; select bank1
  9104  0156  00C5               	movwf	sprintf@tmpval^(0+128)
  9105  0157  0020               	movlb	0	; select bank0
  9106  0158  0847               	movf	?_scale+1,w
  9107  0159  0021               	movlb	1	; select bank1
  9108  015A  00C6               	movwf	(sprintf@tmpval+1)^(0+128)
  9109  015B  0020               	movlb	0	; select bank0
  9110  015C  0848               	movf	?_scale+2,w
  9111  015D  0021               	movlb	1	; select bank1
  9112  015E  00C7               	movwf	(sprintf@tmpval+2)^(0+128)
  9113                           
  9114                           ;doprnt.c: 847: tmpval.integ *= fval;
  9115  015F  0849               	movf	sprintf@fval^(0+128),w
  9116  0160  0020               	movlb	0	; select bank0
  9117  0161  00B6               	movwf	___ftmul@f1
  9118  0162  0021               	movlb	1	; select bank1
  9119  0163  084A               	movf	(sprintf@fval+1)^(0+128),w
  9120  0164  0020               	movlb	0	; select bank0
  9121  0165  00B7               	movwf	___ftmul@f1+1
  9122  0166  0021               	movlb	1	; select bank1
  9123  0167  084B               	movf	(sprintf@fval+2)^(0+128),w
  9124  0168  0020               	movlb	0	; select bank0
  9125  0169  00B8               	movwf	___ftmul@f1+2
  9126  016A  0021               	movlb	1	; select bank1
  9127  016B  0845               	movf	sprintf@tmpval^(0+128),w
  9128  016C  0020               	movlb	0	; select bank0
  9129  016D  00B9               	movwf	___ftmul@f2
  9130  016E  0021               	movlb	1	; select bank1
  9131  016F  0846               	movf	(sprintf@tmpval+1)^(0+128),w
  9132  0170  0020               	movlb	0	; select bank0
  9133  0171  00BA               	movwf	___ftmul@f2+1
  9134  0172  0021               	movlb	1	; select bank1
  9135  0173  0847               	movf	(sprintf@tmpval+2)^(0+128),w
  9136  0174  0020               	movlb	0	; select bank0
  9137  0175  00BB               	movwf	___ftmul@f2+2
  9138  0176  31A7  274C  3180   	fcall	___ftmul
  9139  0179  0020               	movlb	0	; select bank0
  9140  017A  0836               	movf	?___ftmul,w
  9141  017B  0021               	movlb	1	; select bank1
  9142  017C  00C5               	movwf	sprintf@tmpval^(0+128)
  9143  017D  0020               	movlb	0	; select bank0
  9144  017E  0837               	movf	?___ftmul+1,w
  9145  017F  0021               	movlb	1	; select bank1
  9146  0180  00C6               	movwf	(sprintf@tmpval+1)^(0+128)
  9147  0181  0020               	movlb	0	; select bank0
  9148  0182  0838               	movf	?___ftmul+2,w
  9149  0183  0021               	movlb	1	; select bank1
  9150  0184  00C7               	movwf	(sprintf@tmpval+2)^(0+128)
  9151                           
  9152                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  9153  0185  0845               	movf	sprintf@tmpval^(0+128),w
  9154  0186  0020               	movlb	0	; select bank0
  9155  0187  00A0               	movwf	___ftge@ff1
  9156  0188  0021               	movlb	1	; select bank1
  9157  0189  0846               	movf	(sprintf@tmpval+1)^(0+128),w
  9158  018A  0020               	movlb	0	; select bank0
  9159  018B  00A1               	movwf	___ftge@ff1+1
  9160  018C  0021               	movlb	1	; select bank1
  9161  018D  0847               	movf	(sprintf@tmpval+2)^(0+128),w
  9162  018E  0020               	movlb	0	; select bank0
  9163  018F  00A2               	movwf	___ftge@ff1+2
  9164  0190  3000               	movlw	0
  9165  0191  00A3               	movwf	___ftge@ff2
  9166  0192  3080               	movlw	128
  9167  0193  00A4               	movwf	___ftge@ff2+1
  9168  0194  303F               	movlw	63
  9169  0195  00A5               	movwf	___ftge@ff2+2
  9170  0196  31AF  27C4  3180   	fcall	___ftge
  9171  0199  1803               	btfsc	3,0
  9172  019A  29A0               	goto	l6840
  9173                           
  9174                           ;doprnt.c: 849: exp--;
  9175  019B  30FF               	movlw	255
  9176  019C  0021               	movlb	1	; select bank1
  9177  019D  07C3               	addwf	sprintf@exp^(0+128),f
  9178  019E  30FF               	movlw	255
  9179  019F  29BB               	goto	L1
  9180  01A0                     l6840:	
  9181                           
  9182                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  9183  01A0  0021               	movlb	1	; select bank1
  9184  01A1  0845               	movf	sprintf@tmpval^(0+128),w
  9185  01A2  0020               	movlb	0	; select bank0
  9186  01A3  00A0               	movwf	___ftge@ff1
  9187  01A4  0021               	movlb	1	; select bank1
  9188  01A5  0846               	movf	(sprintf@tmpval+1)^(0+128),w
  9189  01A6  0020               	movlb	0	; select bank0
  9190  01A7  00A1               	movwf	___ftge@ff1+1
  9191  01A8  0021               	movlb	1	; select bank1
  9192  01A9  0847               	movf	(sprintf@tmpval+2)^(0+128),w
  9193  01AA  0020               	movlb	0	; select bank0
  9194  01AB  00A2               	movwf	___ftge@ff1+2
  9195  01AC  3000               	movlw	0
  9196  01AD  00A3               	movwf	___ftge@ff2
  9197  01AE  3020               	movlw	32
  9198  01AF  00A4               	movwf	___ftge@ff2+1
  9199  01B0  3041               	movlw	65
  9200  01B1  00A5               	movwf	___ftge@ff2+2
  9201  01B2  31AF  27C4  3180   	fcall	___ftge
  9202  01B5  1C03               	btfss	3,0
  9203  01B6  29BC               	goto	l690
  9204                           
  9205                           ;doprnt.c: 851: exp++;
  9206  01B7  3001               	movlw	1
  9207  01B8  0021               	movlb	1	; select bank1
  9208  01B9  07C3               	addwf	sprintf@exp^(0+128),f
  9209  01BA  3000               	movlw	0
  9210  01BB                     L1:	
  9211  01BB  3DC4               	addwfc	(sprintf@exp+1)^(0+128),f
  9212  01BC                     l690:	
  9213                           
  9214                           ;doprnt.c: 852: }
  9215                           ;doprnt.c: 1112: if(prec <= 12)
  9216  01BC  0021               	movlb	1	; select bank1
  9217  01BD  083E               	movf	(sprintf@prec+1)^(0+128),w
  9218  01BE  3A80               	xorlw	128
  9219  01BF  00B0               	movwf	??_sprintf^(0+128)
  9220  01C0  3080               	movlw	128
  9221  01C1  0230               	subwf	??_sprintf^(0+128),w
  9222  01C2  1D03               	skipz
  9223  01C3  29C6               	goto	u8745
  9224  01C4  300D               	movlw	13
  9225  01C5  023D               	subwf	sprintf@prec^(0+128),w
  9226  01C6                     u8745:	
  9227  01C6  1803               	skipnc
  9228  01C7  29EF               	goto	l6846
  9229                           
  9230                           ;doprnt.c: 1113: fval += fround(prec);
  9231  01C8  0021               	movlb	1	; select bank1
  9232  01C9  083D               	movf	sprintf@prec^(0+128),w
  9233  01CA  3190  205F  3180   	fcall	_fround
  9234  01CD  0020               	movlb	0	; select bank0
  9235  01CE  0846               	movf	?_fround,w
  9236  01CF  00D9               	movwf	___ftadd@f1
  9237  01D0  0847               	movf	?_fround+1,w
  9238  01D1  00DA               	movwf	___ftadd@f1+1
  9239  01D2  0848               	movf	?_fround+2,w
  9240  01D3  00DB               	movwf	___ftadd@f1+2
  9241  01D4  0021               	movlb	1	; select bank1
  9242  01D5  0849               	movf	sprintf@fval^(0+128),w
  9243  01D6  0020               	movlb	0	; select bank0
  9244  01D7  00DC               	movwf	___ftadd@f2
  9245  01D8  0021               	movlb	1	; select bank1
  9246  01D9  084A               	movf	(sprintf@fval+1)^(0+128),w
  9247  01DA  0020               	movlb	0	; select bank0
  9248  01DB  00DD               	movwf	___ftadd@f2+1
  9249  01DC  0021               	movlb	1	; select bank1
  9250  01DD  084B               	movf	(sprintf@fval+2)^(0+128),w
  9251  01DE  0020               	movlb	0	; select bank0
  9252  01DF  00DE               	movwf	___ftadd@f2+2
  9253  01E0  3198  20C2  3180   	fcall	___ftadd
  9254  01E3  0020               	movlb	0	; select bank0
  9255  01E4  0859               	movf	?___ftadd,w
  9256  01E5  0021               	movlb	1	; select bank1
  9257  01E6  00C9               	movwf	sprintf@fval^(0+128)
  9258  01E7  0020               	movlb	0	; select bank0
  9259  01E8  085A               	movf	?___ftadd+1,w
  9260  01E9  0021               	movlb	1	; select bank1
  9261  01EA  00CA               	movwf	(sprintf@fval+1)^(0+128)
  9262  01EB  0020               	movlb	0	; select bank0
  9263  01EC  085B               	movf	?___ftadd+2,w
  9264  01ED  0021               	movlb	1	; select bank1
  9265  01EE  00CB               	movwf	(sprintf@fval+2)^(0+128)
  9266  01EF                     l6846:	
  9267                           
  9268                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  9269  01EF  0021               	movlb	1	; select bank1
  9270  01F0  0844               	movf	(sprintf@exp+1)^(0+128),w
  9271  01F1  3A80               	xorlw	128
  9272  01F2  00B0               	movwf	??_sprintf^(0+128)
  9273  01F3  3080               	movlw	128
  9274  01F4  0230               	subwf	??_sprintf^(0+128),w
  9275  01F5  1D03               	skipz
  9276  01F6  29F9               	goto	u8755
  9277  01F7  300A               	movlw	10
  9278  01F8  0243               	subwf	sprintf@exp^(0+128),w
  9279  01F9                     u8755:	
  9280  01F9  1803               	skipnc
  9281  01FA  2A22               	goto	l6854
  9282  01FB  0021               	movlb	1	; select bank1
  9283  01FC  084B               	movf	(sprintf@fval+2)^(0+128),w
  9284  01FD  044A               	iorwf	(sprintf@fval+1)^(0+128),w
  9285  01FE  0449               	iorwf	sprintf@fval^(0+128),w
  9286  01FF  1903               	skipnz
  9287  0200  2A81               	goto	l6868
  9288  0201  0849               	movf	sprintf@fval^(0+128),w
  9289  0202  0020               	movlb	0	; select bank0
  9290  0203  00CF               	movwf	___fttol@f1
  9291  0204  0021               	movlb	1	; select bank1
  9292  0205  084A               	movf	(sprintf@fval+1)^(0+128),w
  9293  0206  0020               	movlb	0	; select bank0
  9294  0207  00D0               	movwf	___fttol@f1+1
  9295  0208  0021               	movlb	1	; select bank1
  9296  0209  084B               	movf	(sprintf@fval+2)^(0+128),w
  9297  020A  0020               	movlb	0	; select bank0
  9298  020B  00D1               	movwf	___fttol@f1+2
  9299  020C  31A5  2595  3180   	fcall	___fttol
  9300  020F  0020               	movlb	0	; select bank0
  9301  0210  0852               	movf	?___fttol+3,w
  9302  0211  0451               	iorwf	?___fttol+2,w
  9303  0212  0450               	iorwf	?___fttol+1,w
  9304  0213  044F               	iorwf	?___fttol,w
  9305  0214  1D03               	skipz
  9306  0215  2A81               	goto	l6868
  9307  0216  0021               	movlb	1	; select bank1
  9308  0217  0844               	movf	(sprintf@exp+1)^(0+128),w
  9309  0218  3A80               	xorlw	128
  9310  0219  00B0               	movwf	??_sprintf^(0+128)
  9311  021A  3080               	movlw	128
  9312  021B  0230               	subwf	??_sprintf^(0+128),w
  9313  021C  1D03               	skipz
  9314  021D  2A20               	goto	u8785
  9315  021E  3002               	movlw	2
  9316  021F  0243               	subwf	sprintf@exp^(0+128),w
  9317  0220                     u8785:	
  9318  0220  1C03               	skipc
  9319  0221  2A81               	goto	l6868
  9320  0222                     l6854:	
  9321                           
  9322                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  9323  0222  0021               	movlb	1	; select bank1
  9324  0223  0845               	movf	sprintf@tmpval^(0+128),w
  9325  0224  0020               	movlb	0	; select bank0
  9326  0225  00A0               	movwf	___ftge@ff1
  9327  0226  0021               	movlb	1	; select bank1
  9328  0227  0846               	movf	(sprintf@tmpval+1)^(0+128),w
  9329  0228  0020               	movlb	0	; select bank0
  9330  0229  00A1               	movwf	___ftge@ff1+1
  9331  022A  0021               	movlb	1	; select bank1
  9332  022B  0847               	movf	(sprintf@tmpval+2)^(0+128),w
  9333  022C  0020               	movlb	0	; select bank0
  9334  022D  00A2               	movwf	___ftge@ff1+2
  9335  022E  3070               	movlw	112
  9336  022F  00A3               	movwf	___ftge@ff2
  9337  0230  3089               	movlw	137
  9338  0231  00A4               	movwf	___ftge@ff2+1
  9339  0232  3040               	movlw	64
  9340  0233  00A5               	movwf	___ftge@ff2+2
  9341  0234  31AF  27C4  3180   	fcall	___ftge
  9342  0237  1803               	btfsc	3,0
  9343  0238  2A3B               	goto	l6858
  9344                           
  9345                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  9346  0239  30F7               	movlw	247
  9347  023A  2A3C               	goto	L2
  9348  023B                     l6858:	
  9349                           ;doprnt.c: 1122: }else{
  9350                           
  9351                           
  9352                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  9353  023B  30F8               	movlw	248
  9354  023C                     L2:	
  9355  023C  0021               	movlb	1	; select bank1
  9356  023D  07C3               	addwf	sprintf@exp^(0+128),f
  9357  023E  30FF               	movlw	255
  9358  023F  3DC4               	addwfc	(sprintf@exp+1)^(0+128),f
  9359                           
  9360                           ;doprnt.c: 1124: }
  9361                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  9362  0240  0843               	movf	sprintf@exp^(0+128),w
  9363  0241  3185  2589  3180   	fcall	_scale
  9364  0244  0020               	movlb	0	; select bank0
  9365  0245  0846               	movf	?_scale,w
  9366  0246  0021               	movlb	1	; select bank1
  9367  0247  00C5               	movwf	sprintf@tmpval^(0+128)
  9368  0248  0020               	movlb	0	; select bank0
  9369  0249  0847               	movf	?_scale+1,w
  9370  024A  0021               	movlb	1	; select bank1
  9371  024B  00C6               	movwf	(sprintf@tmpval+1)^(0+128)
  9372  024C  0020               	movlb	0	; select bank0
  9373  024D  0848               	movf	?_scale+2,w
  9374  024E  0021               	movlb	1	; select bank1
  9375  024F  00C7               	movwf	(sprintf@tmpval+2)^(0+128)
  9376                           
  9377                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  9378  0250  0849               	movf	sprintf@fval^(0+128),w
  9379  0251  0020               	movlb	0	; select bank0
  9380  0252  00A0               	movwf	__tdiv_to_l_@f1
  9381  0253  0021               	movlb	1	; select bank1
  9382  0254  084A               	movf	(sprintf@fval+1)^(0+128),w
  9383  0255  0020               	movlb	0	; select bank0
  9384  0256  00A1               	movwf	__tdiv_to_l_@f1+1
  9385  0257  0021               	movlb	1	; select bank1
  9386  0258  084B               	movf	(sprintf@fval+2)^(0+128),w
  9387  0259  0020               	movlb	0	; select bank0
  9388  025A  00A2               	movwf	__tdiv_to_l_@f1+2
  9389  025B  0021               	movlb	1	; select bank1
  9390  025C  0845               	movf	sprintf@tmpval^(0+128),w
  9391  025D  0020               	movlb	0	; select bank0
  9392  025E  00A3               	movwf	__tdiv_to_l_@f2
  9393  025F  0021               	movlb	1	; select bank1
  9394  0260  0846               	movf	(sprintf@tmpval+1)^(0+128),w
  9395  0261  0020               	movlb	0	; select bank0
  9396  0262  00A4               	movwf	__tdiv_to_l_@f2+1
  9397  0263  0021               	movlb	1	; select bank1
  9398  0264  0847               	movf	(sprintf@tmpval+2)^(0+128),w
  9399  0265  0020               	movlb	0	; select bank0
  9400  0266  00A5               	movwf	__tdiv_to_l_@f2+2
  9401  0267  3198  200C  3180   	fcall	__tdiv_to_l_
  9402  026A  0020               	movlb	0	; select bank0
  9403  026B  0823               	movf	?__tdiv_to_l_+3,w
  9404  026C  0021               	movlb	1	; select bank1
  9405  026D  00C2               	movwf	(sprintf@val+3)^(0+128)
  9406  026E  0020               	movlb	0	; select bank0
  9407  026F  0822               	movf	?__tdiv_to_l_+2,w
  9408  0270  0021               	movlb	1	; select bank1
  9409  0271  00C1               	movwf	(sprintf@val+2)^(0+128)
  9410  0272  0020               	movlb	0	; select bank0
  9411  0273  0821               	movf	?__tdiv_to_l_+1,w
  9412  0274  0021               	movlb	1	; select bank1
  9413  0275  00C0               	movwf	(sprintf@val+1)^(0+128)
  9414  0276  0020               	movlb	0	; select bank0
  9415  0277  0820               	movf	?__tdiv_to_l_,w
  9416  0278  0021               	movlb	1	; select bank1
  9417  0279  00BF               	movwf	sprintf@val^(0+128)
  9418                           
  9419                           ;doprnt.c: 1129: fval = 0.0;
  9420  027A  3000               	movlw	0
  9421  027B  00C9               	movwf	sprintf@fval^(0+128)
  9422  027C  3000               	movlw	0
  9423  027D  00CA               	movwf	(sprintf@fval+1)^(0+128)
  9424  027E  3000               	movlw	0
  9425  027F  00CB               	movwf	(sprintf@fval+2)^(0+128)
  9426                           
  9427                           ;doprnt.c: 1130: } else {
  9428  0280  2AD0               	goto	l6872
  9429  0281                     l6868:	
  9430                           
  9431                           ;doprnt.c: 1131: val = (unsigned long)fval;
  9432  0281  0021               	movlb	1	; select bank1
  9433  0282  0849               	movf	sprintf@fval^(0+128),w
  9434  0283  0020               	movlb	0	; select bank0
  9435  0284  00CF               	movwf	___fttol@f1
  9436  0285  0021               	movlb	1	; select bank1
  9437  0286  084A               	movf	(sprintf@fval+1)^(0+128),w
  9438  0287  0020               	movlb	0	; select bank0
  9439  0288  00D0               	movwf	___fttol@f1+1
  9440  0289  0021               	movlb	1	; select bank1
  9441  028A  084B               	movf	(sprintf@fval+2)^(0+128),w
  9442  028B  0020               	movlb	0	; select bank0
  9443  028C  00D1               	movwf	___fttol@f1+2
  9444  028D  31A5  2595  3180   	fcall	___fttol
  9445  0290  0020               	movlb	0	; select bank0
  9446  0291  0852               	movf	?___fttol+3,w
  9447  0292  0021               	movlb	1	; select bank1
  9448  0293  00C2               	movwf	(sprintf@val+3)^(0+128)
  9449  0294  0020               	movlb	0	; select bank0
  9450  0295  0851               	movf	?___fttol+2,w
  9451  0296  0021               	movlb	1	; select bank1
  9452  0297  00C1               	movwf	(sprintf@val+2)^(0+128)
  9453  0298  0020               	movlb	0	; select bank0
  9454  0299  0850               	movf	?___fttol+1,w
  9455  029A  0021               	movlb	1	; select bank1
  9456  029B  00C0               	movwf	(sprintf@val+1)^(0+128)
  9457  029C  0020               	movlb	0	; select bank0
  9458  029D  084F               	movf	?___fttol,w
  9459  029E  0021               	movlb	1	; select bank1
  9460  029F  00BF               	movwf	sprintf@val^(0+128)
  9461                           
  9462                           ;doprnt.c: 1132: fval -= (double)val;
  9463  02A0  0842               	movf	(sprintf@val+3)^(0+128),w
  9464  02A1  0020               	movlb	0	; select bank0
  9465  02A2  00AB               	movwf	___lltoft@c+3
  9466  02A3  0021               	movlb	1	; select bank1
  9467  02A4  0841               	movf	(sprintf@val+2)^(0+128),w
  9468  02A5  0020               	movlb	0	; select bank0
  9469  02A6  00AA               	movwf	___lltoft@c+2
  9470  02A7  0021               	movlb	1	; select bank1
  9471  02A8  0840               	movf	(sprintf@val+1)^(0+128),w
  9472  02A9  0020               	movlb	0	; select bank0
  9473  02AA  00A9               	movwf	___lltoft@c+1
  9474  02AB  0021               	movlb	1	; select bank1
  9475  02AC  083F               	movf	sprintf@val^(0+128),w
  9476  02AD  0020               	movlb	0	; select bank0
  9477  02AE  00A8               	movwf	___lltoft@c
  9478  02AF  31AE  262D  3180   	fcall	___lltoft
  9479  02B2  0020               	movlb	0	; select bank0
  9480  02B3  0828               	movf	?___lltoft,w
  9481  02B4  0021               	movlb	1	; select bank1
  9482  02B5  00A0               	movwf	___ftsub@f2^(0+128)
  9483  02B6  0020               	movlb	0	; select bank0
  9484  02B7  0829               	movf	?___lltoft+1,w
  9485  02B8  0021               	movlb	1	; select bank1
  9486  02B9  00A1               	movwf	(___ftsub@f2+1)^(0+128)
  9487  02BA  0020               	movlb	0	; select bank0
  9488  02BB  082A               	movf	?___lltoft+2,w
  9489  02BC  0021               	movlb	1	; select bank1
  9490  02BD  00A2               	movwf	(___ftsub@f2+2)^(0+128)
  9491  02BE  0849               	movf	sprintf@fval^(0+128),w
  9492  02BF  00A3               	movwf	___ftsub@f1^(0+128)
  9493  02C0  084A               	movf	(sprintf@fval+1)^(0+128),w
  9494  02C1  00A4               	movwf	(___ftsub@f1+1)^(0+128)
  9495  02C2  084B               	movf	(sprintf@fval+2)^(0+128),w
  9496  02C3  00A5               	movwf	(___ftsub@f1+2)^(0+128)
  9497  02C4  31AE  2683  3180   	fcall	___ftsub
  9498  02C7  0021               	movlb	1	; select bank1
  9499  02C8  0820               	movf	?___ftsub^(0+128),w
  9500  02C9  00C9               	movwf	sprintf@fval^(0+128)
  9501  02CA  0821               	movf	(?___ftsub+1)^(0+128),w
  9502  02CB  00CA               	movwf	(sprintf@fval+1)^(0+128)
  9503  02CC  0822               	movf	(?___ftsub+2)^(0+128),w
  9504  02CD  00CB               	movwf	(sprintf@fval+2)^(0+128)
  9505                           
  9506                           ;doprnt.c: 1133: exp = 0;
  9507  02CE  01C3               	clrf	sprintf@exp^(0+128)
  9508  02CF  01C4               	clrf	(sprintf@exp+1)^(0+128)
  9509  02D0                     l6872:	
  9510                           
  9511                           ;doprnt.c: 1134: }
  9512                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9513  02D0  01CC               	clrf	sprintf@c^(0+128)
  9514  02D1  0ACC               	incf	sprintf@c^(0+128),f
  9515  02D2  300A               	movlw	10
  9516  02D3  064C               	xorwf	sprintf@c^(0+128),w
  9517  02D4  1903               	btfsc	3,2
  9518  02D5  2B03               	goto	l6884
  9519  02D6                     l6878:	
  9520                           
  9521                           ;doprnt.c: 1137: if(val < dpowers[c])
  9522  02D6  084C               	movf	sprintf@c^(0+128),w
  9523  02D7  00B0               	movwf	??_sprintf^(0+128)
  9524  02D8  01B1               	clrf	(??_sprintf^(0+128)+1)
  9525  02D9  35B0               	lslf	??_sprintf^(0+128),f
  9526  02DA  0DB1               	rlf	(??_sprintf^(0+128)+1),f
  9527  02DB  35B0               	lslf	??_sprintf^(0+128),f
  9528  02DC  0DB1               	rlf	(??_sprintf^(0+128)+1),f
  9529  02DD  3000               	movlw	low (_dpowers| (0+32768))
  9530  02DE  0730               	addwf	??_sprintf^(0+128),w
  9531  02DF  0084               	movwf	4
  9532  02E0  30A0               	movlw	high (_dpowers| (0+32768))
  9533  02E1  3D31               	addwfc	(??_sprintf+1)^(0+128),w
  9534  02E2  0085               	movwf	5
  9535  02E3  3F00               	moviw [0]fsr0
  9536  02E4  00B2               	movwf	(??_sprintf+2)^(0+128)
  9537  02E5  3F01               	moviw [1]fsr0
  9538  02E6  00B3               	movwf	((??_sprintf+2)^(0+128)+1)
  9539  02E7  3F02               	moviw [2]fsr0
  9540  02E8  00B4               	movwf	((??_sprintf+2)^(0+128)+2)
  9541  02E9  3F03               	moviw [3]fsr0
  9542  02EA  00B5               	movwf	((??_sprintf+2)^(0+128)+3)
  9543  02EB  0835               	movf	(??_sprintf+5)^(0+128),w
  9544  02EC  0242               	subwf	(sprintf@val+3)^(0+128),w
  9545  02ED  1D03               	skipz
  9546  02EE  2AF9               	goto	u8815
  9547  02EF  0834               	movf	(??_sprintf+4)^(0+128),w
  9548  02F0  0241               	subwf	(sprintf@val+2)^(0+128),w
  9549  02F1  1D03               	skipz
  9550  02F2  2AF9               	goto	u8815
  9551  02F3  0833               	movf	(??_sprintf+3)^(0+128),w
  9552  02F4  0240               	subwf	(sprintf@val+1)^(0+128),w
  9553  02F5  1D03               	skipz
  9554  02F6  2AF9               	goto	u8815
  9555  02F7  0832               	movf	(??_sprintf+2)^(0+128),w
  9556  02F8  023F               	subwf	sprintf@val^(0+128),w
  9557  02F9                     u8815:	
  9558  02F9  1C03               	btfss	3,0
  9559  02FA  2B03               	goto	l6884
  9560                           
  9561                           ;doprnt.c: 1138: break;
  9562  02FB  3001               	movlw	1
  9563  02FC  00B0               	movwf	??_sprintf^(0+128)
  9564  02FD  0830               	movf	??_sprintf^(0+128),w
  9565  02FE  07CC               	addwf	sprintf@c^(0+128),f
  9566  02FF  300A               	movlw	10
  9567  0300  064C               	xorwf	sprintf@c^(0+128),w
  9568  0301  1D03               	btfss	3,2
  9569  0302  2AD6               	goto	l6878
  9570  0303                     l6884:	
  9571                           
  9572                           ;doprnt.c: 1175: {
  9573                           ;doprnt.c: 1188: if(flag & 0x03)
  9574  0303  3003               	movlw	3
  9575  0304  053B               	andwf	sprintf@flag^(0+128),w
  9576  0305  00B0               	movwf	??_sprintf^(0+128)
  9577  0306  3000               	movlw	0
  9578  0307  053C               	andwf	(sprintf@flag+1)^(0+128),w
  9579  0308  00B1               	movwf	(??_sprintf+1)^(0+128)
  9580  0309  0830               	movf	??_sprintf^(0+128),w
  9581  030A  0431               	iorwf	(??_sprintf^(0+128)+1),w
  9582  030B  1903               	btfsc	3,2
  9583  030C  2B17               	goto	l6898
  9584                           
  9585                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  9586  030D  0826               	movf	sprintf@sp^(0+128),w
  9587  030E  0086               	movwf	6
  9588  030F  0827               	movf	(sprintf@sp+1)^(0+128),w
  9589  0310  0087               	movwf	7
  9590  0311  302D               	movlw	45
  9591  0312                     L5:	
  9592  0312  0081               	movwf	1
  9593  0313  3001               	movlw	1
  9594  0314  07A6               	addwf	sprintf@sp^(0+128),f
  9595  0315  3000               	movlw	0
  9596  0316  3DA7               	addwfc	(sprintf@sp+1)^(0+128),f
  9597  0317                     l6898:	
  9598  0317  30FF               	movlw	255
  9599  0318  00B0               	movwf	??_sprintf^(0+128)
  9600  0319  0830               	movf	??_sprintf^(0+128),w
  9601  031A  07CC               	addwf	sprintf@c^(0+128),f
  9602  031B  0A4C               	incf	sprintf@c^(0+128),w
  9603  031C  1903               	btfsc	3,2
  9604  031D  2B9B               	goto	l6906
  9605                           
  9606                           ;doprnt.c: 1200: {
  9607                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  9608                           
  9609                           ;doprnt.c: 1195: }
  9610                           ;doprnt.c: 1196: while(c--) {
  9611  031E  084C               	movf	sprintf@c^(0+128),w
  9612  031F  00B0               	movwf	??_sprintf^(0+128)
  9613  0320  01B1               	clrf	(??_sprintf^(0+128)+1)
  9614  0321  35B0               	lslf	??_sprintf^(0+128),f
  9615  0322  0DB1               	rlf	(??_sprintf^(0+128)+1),f
  9616  0323  35B0               	lslf	??_sprintf^(0+128),f
  9617  0324  0DB1               	rlf	(??_sprintf^(0+128)+1),f
  9618  0325  3000               	movlw	low (_dpowers| (0+32768))
  9619  0326  0730               	addwf	??_sprintf^(0+128),w
  9620  0327  0084               	movwf	4
  9621  0328  30A0               	movlw	high (_dpowers| (0+32768))
  9622  0329  3D31               	addwfc	(??_sprintf+1)^(0+128),w
  9623  032A  0085               	movwf	5
  9624  032B  3F00               	moviw [0]fsr0
  9625  032C  0020               	movlb	0	; select bank0
  9626  032D  00A0               	movwf	___lldiv@divisor
  9627  032E  3F01               	moviw [1]fsr0
  9628  032F  00A1               	movwf	___lldiv@divisor+1
  9629  0330  3F02               	moviw [2]fsr0
  9630  0331  00A2               	movwf	___lldiv@divisor+2
  9631  0332  3F03               	moviw [3]fsr0
  9632  0333  00A3               	movwf	___lldiv@divisor+3
  9633  0334  0021               	movlb	1	; select bank1
  9634  0335  0842               	movf	(sprintf@val+3)^(0+128),w
  9635  0336  0020               	movlb	0	; select bank0
  9636  0337  00A7               	movwf	___lldiv@dividend+3
  9637  0338  0021               	movlb	1	; select bank1
  9638  0339  0841               	movf	(sprintf@val+2)^(0+128),w
  9639  033A  0020               	movlb	0	; select bank0
  9640  033B  00A6               	movwf	___lldiv@dividend+2
  9641  033C  0021               	movlb	1	; select bank1
  9642  033D  0840               	movf	(sprintf@val+1)^(0+128),w
  9643  033E  0020               	movlb	0	; select bank0
  9644  033F  00A5               	movwf	___lldiv@dividend+1
  9645  0340  0021               	movlb	1	; select bank1
  9646  0341  083F               	movf	sprintf@val^(0+128),w
  9647  0342  0020               	movlb	0	; select bank0
  9648  0343  00A4               	movwf	___lldiv@dividend
  9649  0344  3190  200C  3180   	fcall	___lldiv
  9650  0347  0020               	movlb	0	; select bank0
  9651  0348  0823               	movf	?___lldiv+3,w
  9652  0349  0021               	movlb	1	; select bank1
  9653  034A  00C8               	movwf	(sprintf@tmpval+3)^(0+128)
  9654  034B  0020               	movlb	0	; select bank0
  9655  034C  0822               	movf	?___lldiv+2,w
  9656  034D  0021               	movlb	1	; select bank1
  9657  034E  00C7               	movwf	(sprintf@tmpval+2)^(0+128)
  9658  034F  0020               	movlb	0	; select bank0
  9659  0350  0821               	movf	?___lldiv+1,w
  9660  0351  0021               	movlb	1	; select bank1
  9661  0352  00C6               	movwf	(sprintf@tmpval+1)^(0+128)
  9662  0353  0020               	movlb	0	; select bank0
  9663  0354  0820               	movf	?___lldiv,w
  9664  0355  0021               	movlb	1	; select bank1
  9665  0356  00C5               	movwf	sprintf@tmpval^(0+128)
  9666                           
  9667                           ;doprnt.c: 1202: tmpval.vd %= 10;
  9668  0357  3000               	movlw	0
  9669  0358  0020               	movlb	0	; select bank0
  9670  0359  00A3               	movwf	___llmod@divisor+3
  9671  035A  3000               	movlw	0
  9672  035B  00A2               	movwf	___llmod@divisor+2
  9673  035C  3000               	movlw	0
  9674  035D  00A1               	movwf	___llmod@divisor+1
  9675  035E  300A               	movlw	10
  9676  035F  00A0               	movwf	___llmod@divisor
  9677  0360  0021               	movlb	1	; select bank1
  9678  0361  0848               	movf	(sprintf@tmpval+3)^(0+128),w
  9679  0362  0020               	movlb	0	; select bank0
  9680  0363  00A7               	movwf	___llmod@dividend+3
  9681  0364  0021               	movlb	1	; select bank1
  9682  0365  0847               	movf	(sprintf@tmpval+2)^(0+128),w
  9683  0366  0020               	movlb	0	; select bank0
  9684  0367  00A6               	movwf	___llmod@dividend+2
  9685  0368  0021               	movlb	1	; select bank1
  9686  0369  0846               	movf	(sprintf@tmpval+1)^(0+128),w
  9687  036A  0020               	movlb	0	; select bank0
  9688  036B  00A5               	movwf	___llmod@dividend+1
  9689  036C  0021               	movlb	1	; select bank1
  9690  036D  0845               	movf	sprintf@tmpval^(0+128),w
  9691  036E  0020               	movlb	0	; select bank0
  9692  036F  00A4               	movwf	___llmod@dividend
  9693  0370  31A2  221E  3180   	fcall	___llmod
  9694  0373  0020               	movlb	0	; select bank0
  9695  0374  0823               	movf	?___llmod+3,w
  9696  0375  0021               	movlb	1	; select bank1
  9697  0376  00C8               	movwf	(sprintf@tmpval+3)^(0+128)
  9698  0377  0020               	movlb	0	; select bank0
  9699  0378  0822               	movf	?___llmod+2,w
  9700  0379  0021               	movlb	1	; select bank1
  9701  037A  00C7               	movwf	(sprintf@tmpval+2)^(0+128)
  9702  037B  0020               	movlb	0	; select bank0
  9703  037C  0821               	movf	?___llmod+1,w
  9704  037D  0021               	movlb	1	; select bank1
  9705  037E  00C6               	movwf	(sprintf@tmpval+1)^(0+128)
  9706  037F  0020               	movlb	0	; select bank0
  9707  0380  0820               	movf	?___llmod,w
  9708  0381  0021               	movlb	1	; select bank1
  9709  0382  00C5               	movwf	sprintf@tmpval^(0+128)
  9710                           
  9711                           ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  9712  0383  0845               	movf	sprintf@tmpval^(0+128),w
  9713  0384  3E30               	addlw	48
  9714  0385  00B0               	movwf	??_sprintf^(0+128)
  9715  0386  0826               	movf	sprintf@sp^(0+128),w
  9716  0387  0086               	movwf	6
  9717  0388  0827               	movf	(sprintf@sp+1)^(0+128),w
  9718  0389  0087               	movwf	7
  9719  038A  0830               	movf	??_sprintf^(0+128),w
  9720  038B  2B12               	goto	L5
  9721  038C                     l6900:	
  9722                           ;doprnt.c: 1204: }
  9723                           ;doprnt.c: 1206: }
  9724                           ;doprnt.c: 1207: while(exp > 0) {
  9725                           
  9726                           
  9727                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  9728  038C  0021               	movlb	1	; select bank1
  9729  038D  0826               	movf	sprintf@sp^(0+128),w
  9730  038E  0086               	movwf	6
  9731  038F  0827               	movf	(sprintf@sp+1)^(0+128),w
  9732  0390  0087               	movwf	7
  9733  0391  3030               	movlw	48
  9734  0392  0081               	movwf	1
  9735  0393  3001               	movlw	1
  9736  0394  07A6               	addwf	sprintf@sp^(0+128),f
  9737  0395  3000               	movlw	0
  9738  0396  3DA7               	addwfc	(sprintf@sp+1)^(0+128),f
  9739                           
  9740                           ;doprnt.c: 1209: exp--;
  9741  0397  30FF               	movlw	255
  9742  0398  07C3               	addwf	sprintf@exp^(0+128),f
  9743  0399  30FF               	movlw	255
  9744  039A  3DC4               	addwfc	(sprintf@exp+1)^(0+128),f
  9745  039B                     l6906:	
  9746  039B  0844               	movf	(sprintf@exp+1)^(0+128),w
  9747  039C  3A80               	xorlw	128
  9748  039D  00B0               	movwf	??_sprintf^(0+128)
  9749  039E  3080               	movlw	128
  9750  039F  0230               	subwf	??_sprintf^(0+128),w
  9751  03A0  1D03               	skipz
  9752  03A1  2BA4               	goto	u8855
  9753  03A2  3001               	movlw	1
  9754  03A3  0243               	subwf	sprintf@exp^(0+128),w
  9755  03A4                     u8855:	
  9756  03A4  1803               	skipnc
  9757  03A5  2B8C               	goto	l6900
  9758                           
  9759                           ;doprnt.c: 1210: }
  9760                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9761  03A6  0021               	movlb	1	; select bank1
  9762  03A7  083E               	movf	(sprintf@prec+1)^(0+128),w
  9763  03A8  3A80               	xorlw	128
  9764  03A9  00B0               	movwf	??_sprintf^(0+128)
  9765  03AA  3080               	movlw	128
  9766  03AB  0230               	subwf	??_sprintf^(0+128),w
  9767  03AC  1D03               	skipz
  9768  03AD  2BB0               	goto	u8865
  9769  03AE  3009               	movlw	9
  9770  03AF  023D               	subwf	sprintf@prec^(0+128),w
  9771  03B0                     u8865:	
  9772  03B0  1C03               	skipc
  9773  03B1  2BB5               	goto	l6912
  9774                           
  9775                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  9776  03B2  3008               	movlw	8
  9777  03B3  0021               	movlb	1	; select bank1
  9778  03B4  2BB7               	goto	L3
  9779  03B5                     l6912:	
  9780                           
  9781                           ;doprnt.c: 1213: else
  9782                           ;doprnt.c: 1214: c = prec;
  9783  03B5  0021               	movlb	1	; select bank1
  9784  03B6  083D               	movf	sprintf@prec^(0+128),w
  9785  03B7                     L3:	
  9786  03B7  00B0               	movwf	??_sprintf^(0+128)
  9787  03B8  0830               	movf	??_sprintf^(0+128),w
  9788  03B9  00CC               	movwf	sprintf@c^(0+128)
  9789                           
  9790                           ;doprnt.c: 1215: prec -= c;
  9791  03BA  084C               	movf	sprintf@c^(0+128),w
  9792  03BB  00B0               	movwf	??_sprintf^(0+128)
  9793  03BC  01B1               	clrf	(??_sprintf^(0+128)+1)
  9794  03BD  1BB0               	btfsc	??_sprintf^(0+128),7
  9795  03BE  03B1               	decf	(??_sprintf^(0+128)+1),f
  9796  03BF  0830               	movf	??_sprintf^(0+128),w
  9797  03C0  02BD               	subwf	sprintf@prec^(0+128),f
  9798  03C1  0831               	movf	(??_sprintf+1)^(0+128),w
  9799  03C2  3BBE               	subwfb	(sprintf@prec+1)^(0+128),f
  9800                           
  9801                           ;doprnt.c: 1219: if(c)
  9802  03C3  084C               	movf	sprintf@c^(0+128),w
  9803  03C4  1903               	btfsc	3,2
  9804  03C5  2BD0               	goto	l6920
  9805                           
  9806                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  9807  03C6  0826               	movf	sprintf@sp^(0+128),w
  9808  03C7  0086               	movwf	6
  9809  03C8  0827               	movf	(sprintf@sp+1)^(0+128),w
  9810  03C9  0087               	movwf	7
  9811  03CA  302E               	movlw	46
  9812  03CB  0081               	movwf	1
  9813  03CC  3001               	movlw	1
  9814  03CD  07A6               	addwf	sprintf@sp^(0+128),f
  9815  03CE  3000               	movlw	0
  9816  03CF  3DA7               	addwfc	(sprintf@sp+1)^(0+128),f
  9817  03D0                     l6920:	
  9818                           
  9819                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9820  03D0  084C               	movf	sprintf@c^(0+128),w
  9821  03D1  3185  2589  3180   	fcall	_scale
  9822  03D4  0020               	movlb	0	; select bank0
  9823  03D5  0846               	movf	?_scale,w
  9824  03D6  0021               	movlb	1	; select bank1
  9825  03D7  00B6               	movwf	_sprintf$1913^(0+128)
  9826  03D8  0020               	movlb	0	; select bank0
  9827  03D9  0847               	movf	?_scale+1,w
  9828  03DA  0021               	movlb	1	; select bank1
  9829  03DB  00B7               	movwf	(_sprintf$1913+1)^(0+128)
  9830  03DC  0020               	movlb	0	; select bank0
  9831  03DD  0848               	movf	?_scale+2,w
  9832  03DE  0021               	movlb	1	; select bank1
  9833  03DF  00B8               	movwf	(_sprintf$1913+2)^(0+128)
  9834                           
  9835                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9836  03E0  0836               	movf	_sprintf$1913^(0+128),w
  9837  03E1  0020               	movlb	0	; select bank0
  9838  03E2  00B9               	movwf	___ftmul@f2
  9839  03E3  0021               	movlb	1	; select bank1
  9840  03E4  0837               	movf	(_sprintf$1913+1)^(0+128),w
  9841  03E5  0020               	movlb	0	; select bank0
  9842  03E6  00BA               	movwf	___ftmul@f2+1
  9843  03E7  0021               	movlb	1	; select bank1
  9844  03E8  0838               	movf	(_sprintf$1913+2)^(0+128),w
  9845  03E9  0020               	movlb	0	; select bank0
  9846  03EA  00BB               	movwf	___ftmul@f2+2
  9847  03EB  0021               	movlb	1	; select bank1
  9848  03EC  0849               	movf	sprintf@fval^(0+128),w
  9849  03ED  0020               	movlb	0	; select bank0
  9850  03EE  00B6               	movwf	___ftmul@f1
  9851  03EF  0021               	movlb	1	; select bank1
  9852  03F0  084A               	movf	(sprintf@fval+1)^(0+128),w
  9853  03F1  0020               	movlb	0	; select bank0
  9854  03F2  00B7               	movwf	___ftmul@f1+1
  9855  03F3  0021               	movlb	1	; select bank1
  9856  03F4  084B               	movf	(sprintf@fval+2)^(0+128),w
  9857  03F5  0020               	movlb	0	; select bank0
  9858  03F6  00B8               	movwf	___ftmul@f1+2
  9859  03F7  31A7  274C  3180   	fcall	___ftmul
  9860  03FA  0020               	movlb	0	; select bank0
  9861  03FB  0836               	movf	?___ftmul,w
  9862  03FC  00CF               	movwf	___fttol@f1
  9863  03FD  0837               	movf	?___ftmul+1,w
  9864  03FE  00D0               	movwf	___fttol@f1+1
  9865  03FF  0838               	movf	?___ftmul+2,w
  9866  0400  00D1               	movwf	___fttol@f1+2
  9867  0401  31A5  2595  3180   	fcall	___fttol
  9868  0404  0020               	movlb	0	; select bank0
  9869  0405  0852               	movf	?___fttol+3,w
  9870  0406  0021               	movlb	1	; select bank1
  9871  0407  00C2               	movwf	(sprintf@val+3)^(0+128)
  9872  0408  0020               	movlb	0	; select bank0
  9873  0409  0851               	movf	?___fttol+2,w
  9874  040A  0021               	movlb	1	; select bank1
  9875  040B  00C1               	movwf	(sprintf@val+2)^(0+128)
  9876  040C  0020               	movlb	0	; select bank0
  9877  040D  0850               	movf	?___fttol+1,w
  9878  040E  0021               	movlb	1	; select bank1
  9879  040F  00C0               	movwf	(sprintf@val+1)^(0+128)
  9880  0410  0020               	movlb	0	; select bank0
  9881  0411  084F               	movf	?___fttol,w
  9882  0412                     L4:	
  9883  0412  0021               	movlb	1	; select bank1
  9884  0413  00BF               	movwf	sprintf@val^(0+128)
  9885  0414  30FF               	movlw	255
  9886  0415  00B0               	movwf	??_sprintf^(0+128)
  9887  0416  0830               	movf	??_sprintf^(0+128),w
  9888  0417  07CC               	addwf	sprintf@c^(0+128),f
  9889  0418  0A4C               	incf	sprintf@c^(0+128),w
  9890  0419  1903               	btfsc	3,2
  9891  041A  2CD3               	goto	l6942
  9892                           
  9893                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  9894                           
  9895                           ;doprnt.c: 1228: while(c--) {
  9896  041B  084C               	movf	sprintf@c^(0+128),w
  9897  041C  00B0               	movwf	??_sprintf^(0+128)
  9898  041D  01B1               	clrf	(??_sprintf^(0+128)+1)
  9899  041E  35B0               	lslf	??_sprintf^(0+128),f
  9900  041F  0DB1               	rlf	(??_sprintf^(0+128)+1),f
  9901  0420  35B0               	lslf	??_sprintf^(0+128),f
  9902  0421  0DB1               	rlf	(??_sprintf^(0+128)+1),f
  9903  0422  3000               	movlw	low (_dpowers| (0+32768))
  9904  0423  0730               	addwf	??_sprintf^(0+128),w
  9905  0424  0084               	movwf	4
  9906  0425  30A0               	movlw	high (_dpowers| (0+32768))
  9907  0426  3D31               	addwfc	(??_sprintf+1)^(0+128),w
  9908  0427  0085               	movwf	5
  9909  0428  3F00               	moviw [0]fsr0
  9910  0429  0020               	movlb	0	; select bank0
  9911  042A  00A0               	movwf	___lldiv@divisor
  9912  042B  3F01               	moviw [1]fsr0
  9913  042C  00A1               	movwf	___lldiv@divisor+1
  9914  042D  3F02               	moviw [2]fsr0
  9915  042E  00A2               	movwf	___lldiv@divisor+2
  9916  042F  3F03               	moviw [3]fsr0
  9917  0430  00A3               	movwf	___lldiv@divisor+3
  9918  0431  0021               	movlb	1	; select bank1
  9919  0432  0842               	movf	(sprintf@val+3)^(0+128),w
  9920  0433  0020               	movlb	0	; select bank0
  9921  0434  00A7               	movwf	___lldiv@dividend+3
  9922  0435  0021               	movlb	1	; select bank1
  9923  0436  0841               	movf	(sprintf@val+2)^(0+128),w
  9924  0437  0020               	movlb	0	; select bank0
  9925  0438  00A6               	movwf	___lldiv@dividend+2
  9926  0439  0021               	movlb	1	; select bank1
  9927  043A  0840               	movf	(sprintf@val+1)^(0+128),w
  9928  043B  0020               	movlb	0	; select bank0
  9929  043C  00A5               	movwf	___lldiv@dividend+1
  9930  043D  0021               	movlb	1	; select bank1
  9931  043E  083F               	movf	sprintf@val^(0+128),w
  9932  043F  0020               	movlb	0	; select bank0
  9933  0440  00A4               	movwf	___lldiv@dividend
  9934  0441  3190  200C  3180   	fcall	___lldiv
  9935  0444  0020               	movlb	0	; select bank0
  9936  0445  0823               	movf	?___lldiv+3,w
  9937  0446  0021               	movlb	1	; select bank1
  9938  0447  00C8               	movwf	(sprintf@tmpval+3)^(0+128)
  9939  0448  0020               	movlb	0	; select bank0
  9940  0449  0822               	movf	?___lldiv+2,w
  9941  044A  0021               	movlb	1	; select bank1
  9942  044B  00C7               	movwf	(sprintf@tmpval+2)^(0+128)
  9943  044C  0020               	movlb	0	; select bank0
  9944  044D  0821               	movf	?___lldiv+1,w
  9945  044E  0021               	movlb	1	; select bank1
  9946  044F  00C6               	movwf	(sprintf@tmpval+1)^(0+128)
  9947  0450  0020               	movlb	0	; select bank0
  9948  0451  0820               	movf	?___lldiv,w
  9949  0452  0021               	movlb	1	; select bank1
  9950  0453  00C5               	movwf	sprintf@tmpval^(0+128)
  9951                           
  9952                           ;doprnt.c: 1230: tmpval.vd %= 10;
  9953  0454  3000               	movlw	0
  9954  0455  0020               	movlb	0	; select bank0
  9955  0456  00A3               	movwf	___llmod@divisor+3
  9956  0457  3000               	movlw	0
  9957  0458  00A2               	movwf	___llmod@divisor+2
  9958  0459  3000               	movlw	0
  9959  045A  00A1               	movwf	___llmod@divisor+1
  9960  045B  300A               	movlw	10
  9961  045C  00A0               	movwf	___llmod@divisor
  9962  045D  0021               	movlb	1	; select bank1
  9963  045E  0848               	movf	(sprintf@tmpval+3)^(0+128),w
  9964  045F  0020               	movlb	0	; select bank0
  9965  0460  00A7               	movwf	___llmod@dividend+3
  9966  0461  0021               	movlb	1	; select bank1
  9967  0462  0847               	movf	(sprintf@tmpval+2)^(0+128),w
  9968  0463  0020               	movlb	0	; select bank0
  9969  0464  00A6               	movwf	___llmod@dividend+2
  9970  0465  0021               	movlb	1	; select bank1
  9971  0466  0846               	movf	(sprintf@tmpval+1)^(0+128),w
  9972  0467  0020               	movlb	0	; select bank0
  9973  0468  00A5               	movwf	___llmod@dividend+1
  9974  0469  0021               	movlb	1	; select bank1
  9975  046A  0845               	movf	sprintf@tmpval^(0+128),w
  9976  046B  0020               	movlb	0	; select bank0
  9977  046C  00A4               	movwf	___llmod@dividend
  9978  046D  31A2  221E  3180   	fcall	___llmod
  9979  0470  0020               	movlb	0	; select bank0
  9980  0471  0823               	movf	?___llmod+3,w
  9981  0472  0021               	movlb	1	; select bank1
  9982  0473  00C8               	movwf	(sprintf@tmpval+3)^(0+128)
  9983  0474  0020               	movlb	0	; select bank0
  9984  0475  0822               	movf	?___llmod+2,w
  9985  0476  0021               	movlb	1	; select bank1
  9986  0477  00C7               	movwf	(sprintf@tmpval+2)^(0+128)
  9987  0478  0020               	movlb	0	; select bank0
  9988  0479  0821               	movf	?___llmod+1,w
  9989  047A  0021               	movlb	1	; select bank1
  9990  047B  00C6               	movwf	(sprintf@tmpval+1)^(0+128)
  9991  047C  0020               	movlb	0	; select bank0
  9992  047D  0820               	movf	?___llmod,w
  9993  047E  0021               	movlb	1	; select bank1
  9994  047F  00C5               	movwf	sprintf@tmpval^(0+128)
  9995                           
  9996                           ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  9997  0480  0845               	movf	sprintf@tmpval^(0+128),w
  9998  0481  3E30               	addlw	48
  9999  0482  00B0               	movwf	??_sprintf^(0+128)
 10000  0483  0826               	movf	sprintf@sp^(0+128),w
 10001  0484  0086               	movwf	6
 10002  0485  0827               	movf	(sprintf@sp+1)^(0+128),w
 10003  0486  0087               	movwf	7
 10004  0487  0830               	movf	??_sprintf^(0+128),w
 10005  0488  0081               	movwf	1
 10006  0489  3001               	movlw	1
 10007  048A  07A6               	addwf	sprintf@sp^(0+128),f
 10008  048B  3000               	movlw	0
 10009  048C  3DA7               	addwfc	(sprintf@sp+1)^(0+128),f
 10010                           
 10011                           ;doprnt.c: 1232: val %= dpowers[c];
 10012  048D  084C               	movf	sprintf@c^(0+128),w
 10013  048E  00B0               	movwf	??_sprintf^(0+128)
 10014  048F  01B1               	clrf	(??_sprintf^(0+128)+1)
 10015  0490  35B0               	lslf	??_sprintf^(0+128),f
 10016  0491  0DB1               	rlf	(??_sprintf^(0+128)+1),f
 10017  0492  35B0               	lslf	??_sprintf^(0+128),f
 10018  0493  0DB1               	rlf	(??_sprintf^(0+128)+1),f
 10019  0494  3000               	movlw	low (_dpowers| (0+32768))
 10020  0495  0730               	addwf	??_sprintf^(0+128),w
 10021  0496  0084               	movwf	4
 10022  0497  30A0               	movlw	high (_dpowers| (0+32768))
 10023  0498  3D31               	addwfc	(??_sprintf+1)^(0+128),w
 10024  0499  0085               	movwf	5
 10025  049A  3F00               	moviw [0]fsr0
 10026  049B  0020               	movlb	0	; select bank0
 10027  049C  00A0               	movwf	___llmod@divisor
 10028  049D  3F01               	moviw [1]fsr0
 10029  049E  00A1               	movwf	___llmod@divisor+1
 10030  049F  3F02               	moviw [2]fsr0
 10031  04A0  00A2               	movwf	___llmod@divisor+2
 10032  04A1  3F03               	moviw [3]fsr0
 10033  04A2  00A3               	movwf	___llmod@divisor+3
 10034  04A3  0021               	movlb	1	; select bank1
 10035  04A4  0842               	movf	(sprintf@val+3)^(0+128),w
 10036  04A5  0020               	movlb	0	; select bank0
 10037  04A6  00A7               	movwf	___llmod@dividend+3
 10038  04A7  0021               	movlb	1	; select bank1
 10039  04A8  0841               	movf	(sprintf@val+2)^(0+128),w
 10040  04A9  0020               	movlb	0	; select bank0
 10041  04AA  00A6               	movwf	___llmod@dividend+2
 10042  04AB  0021               	movlb	1	; select bank1
 10043  04AC  0840               	movf	(sprintf@val+1)^(0+128),w
 10044  04AD  0020               	movlb	0	; select bank0
 10045  04AE  00A5               	movwf	___llmod@dividend+1
 10046  04AF  0021               	movlb	1	; select bank1
 10047  04B0  083F               	movf	sprintf@val^(0+128),w
 10048  04B1  0020               	movlb	0	; select bank0
 10049  04B2  00A4               	movwf	___llmod@dividend
 10050  04B3  31A2  221E  3180   	fcall	___llmod
 10051  04B6  0020               	movlb	0	; select bank0
 10052  04B7  0823               	movf	?___llmod+3,w
 10053  04B8  0021               	movlb	1	; select bank1
 10054  04B9  00C2               	movwf	(sprintf@val+3)^(0+128)
 10055  04BA  0020               	movlb	0	; select bank0
 10056  04BB  0822               	movf	?___llmod+2,w
 10057  04BC  0021               	movlb	1	; select bank1
 10058  04BD  00C1               	movwf	(sprintf@val+2)^(0+128)
 10059  04BE  0020               	movlb	0	; select bank0
 10060  04BF  0821               	movf	?___llmod+1,w
 10061  04C0  0021               	movlb	1	; select bank1
 10062  04C1  00C0               	movwf	(sprintf@val+1)^(0+128)
 10063  04C2  0020               	movlb	0	; select bank0
 10064  04C3  0820               	movf	?___llmod,w
 10065  04C4  2C12               	goto	L4
 10066  04C5                     l6936:	
 10067                           ;doprnt.c: 1233: }
 10068                           ;doprnt.c: 1235: while(prec) {
 10069                           
 10070                           
 10071                           ;doprnt.c: 1236: ((*sp++ = ('0')));
 10072  04C5  0826               	movf	sprintf@sp^(0+128),w
 10073  04C6  0086               	movwf	6
 10074  04C7  0827               	movf	(sprintf@sp+1)^(0+128),w
 10075  04C8  0087               	movwf	7
 10076  04C9  3030               	movlw	48
 10077  04CA  0081               	movwf	1
 10078  04CB  3001               	movlw	1
 10079  04CC  07A6               	addwf	sprintf@sp^(0+128),f
 10080  04CD  3000               	movlw	0
 10081  04CE  3DA7               	addwfc	(sprintf@sp+1)^(0+128),f
 10082                           
 10083                           ;doprnt.c: 1237: prec--;
 10084  04CF  30FF               	movlw	255
 10085  04D0  07BD               	addwf	sprintf@prec^(0+128),f
 10086  04D1  30FF               	movlw	255
 10087  04D2  3DBE               	addwfc	(sprintf@prec+1)^(0+128),f
 10088  04D3                     l6942:	
 10089  04D3  083D               	movf	sprintf@prec^(0+128),w
 10090  04D4  043E               	iorwf	(sprintf@prec+1)^(0+128),w
 10091  04D5  1903               	btfsc	3,2
 10092  04D6  285E               	goto	l6978
 10093  04D7  2CC5               	goto	l6936
 10094  04D8                     l6944:	
 10095                           ;doprnt.c: 1238: }
 10096                           ;doprnt.c: 1245: continue;
 10097                           
 10098                           
 10099                           ;doprnt.c: 1246: }
 10100                           ;doprnt.c: 1273: {
 10101                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 10102  04D8  083A               	movf	sprintf@ap^(0+128),w
 10103  04D9  0086               	movwf	6
 10104  04DA  0187               	clrf	7
 10105  04DB  3F40               	moviw [0]fsr1
 10106  04DC  00B0               	movwf	??_sprintf^(0+128)
 10107  04DD  3F41               	moviw [1]fsr1
 10108  04DE  00B1               	movwf	(??_sprintf^(0+128)+1)
 10109  04DF  0830               	movf	??_sprintf^(0+128),w
 10110  04E0  00BF               	movwf	sprintf@val^(0+128)
 10111  04E1  0831               	movf	(??_sprintf+1)^(0+128),w
 10112  04E2  00C0               	movwf	(sprintf@val^(0+128)+1)
 10113  04E3  01C1               	clrf	(sprintf@val^(0+128)+2)
 10114  04E4  01C2               	clrf	(sprintf@val^(0+128)+3)
 10115  04E5  3002               	movlw	2
 10116  04E6  00B0               	movwf	??_sprintf^(0+128)
 10117  04E7  0830               	movf	??_sprintf^(0+128),w
 10118  04E8  07BA               	addwf	sprintf@ap^(0+128),f
 10119                           
 10120                           ;doprnt.c: 1287: }
 10121                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 10122  04E9  01CC               	clrf	sprintf@c^(0+128)
 10123  04EA  0ACC               	incf	sprintf@c^(0+128),f
 10124  04EB  3008               	movlw	8
 10125  04EC  064C               	xorwf	sprintf@c^(0+128),w
 10126  04ED  1903               	btfsc	3,2
 10127  04EE  2D1C               	goto	l6960
 10128  04EF                     l6954:	
 10129                           
 10130                           ;doprnt.c: 1317: if(val < hexpowers[c])
 10131  04EF  084C               	movf	sprintf@c^(0+128),w
 10132  04F0  00B0               	movwf	??_sprintf^(0+128)
 10133  04F1  01B1               	clrf	(??_sprintf^(0+128)+1)
 10134  04F2  35B0               	lslf	??_sprintf^(0+128),f
 10135  04F3  0DB1               	rlf	(??_sprintf^(0+128)+1),f
 10136  04F4  35B0               	lslf	??_sprintf^(0+128),f
 10137  04F5  0DB1               	rlf	(??_sprintf^(0+128)+1),f
 10138  04F6  3076               	movlw	low (_hexpowers| (0+32768))
 10139  04F7  0730               	addwf	??_sprintf^(0+128),w
 10140  04F8  0084               	movwf	4
 10141  04F9  30A0               	movlw	high (_hexpowers| (0+32768))
 10142  04FA  3D31               	addwfc	(??_sprintf+1)^(0+128),w
 10143  04FB  0085               	movwf	5
 10144  04FC  3F00               	moviw [0]fsr0
 10145  04FD  00B2               	movwf	(??_sprintf+2)^(0+128)
 10146  04FE  3F01               	moviw [1]fsr0
 10147  04FF  00B3               	movwf	((??_sprintf+2)^(0+128)+1)
 10148  0500  3F02               	moviw [2]fsr0
 10149  0501  00B4               	movwf	((??_sprintf+2)^(0+128)+2)
 10150  0502  3F03               	moviw [3]fsr0
 10151  0503  00B5               	movwf	((??_sprintf+2)^(0+128)+3)
 10152  0504  0835               	movf	(??_sprintf+5)^(0+128),w
 10153  0505  0242               	subwf	(sprintf@val+3)^(0+128),w
 10154  0506  1D03               	skipz
 10155  0507  2D12               	goto	u8915
 10156  0508  0834               	movf	(??_sprintf+4)^(0+128),w
 10157  0509  0241               	subwf	(sprintf@val+2)^(0+128),w
 10158  050A  1D03               	skipz
 10159  050B  2D12               	goto	u8915
 10160  050C  0833               	movf	(??_sprintf+3)^(0+128),w
 10161  050D  0240               	subwf	(sprintf@val+1)^(0+128),w
 10162  050E  1D03               	skipz
 10163  050F  2D12               	goto	u8915
 10164  0510  0832               	movf	(??_sprintf+2)^(0+128),w
 10165  0511  023F               	subwf	sprintf@val^(0+128),w
 10166  0512                     u8915:	
 10167  0512  1C03               	btfss	3,0
 10168  0513  2D1C               	goto	l6960
 10169                           
 10170                           ;doprnt.c: 1318: break;
 10171  0514  3001               	movlw	1
 10172  0515  00B0               	movwf	??_sprintf^(0+128)
 10173  0516  0830               	movf	??_sprintf^(0+128),w
 10174  0517  07CC               	addwf	sprintf@c^(0+128),f
 10175  0518  3008               	movlw	8
 10176  0519  064C               	xorwf	sprintf@c^(0+128),w
 10177  051A  1D03               	btfss	3,2
 10178  051B  2CEF               	goto	l6954
 10179  051C                     l6960:	
 10180                           
 10181                           ;doprnt.c: 1422: {
 10182                           ;doprnt.c: 1438: if(flag & 0x03)
 10183  051C  3003               	movlw	3
 10184  051D  053B               	andwf	sprintf@flag^(0+128),w
 10185  051E  00B0               	movwf	??_sprintf^(0+128)
 10186  051F  3000               	movlw	0
 10187  0520  053C               	andwf	(sprintf@flag+1)^(0+128),w
 10188  0521  00B1               	movwf	(??_sprintf+1)^(0+128)
 10189  0522  0830               	movf	??_sprintf^(0+128),w
 10190  0523  0431               	iorwf	(??_sprintf^(0+128)+1),w
 10191  0524  1903               	btfsc	3,2
 10192  0525  2D30               	goto	l6966
 10193                           
 10194                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 10195  0526  0826               	movf	sprintf@sp^(0+128),w
 10196  0527  0086               	movwf	6
 10197  0528  0827               	movf	(sprintf@sp+1)^(0+128),w
 10198  0529  0087               	movwf	7
 10199  052A  302D               	movlw	45
 10200  052B  0081               	movwf	1
 10201  052C  3001               	movlw	1
 10202  052D  07A6               	addwf	sprintf@sp^(0+128),f
 10203  052E  3000               	movlw	0
 10204  052F  3DA7               	addwfc	(sprintf@sp+1)^(0+128),f
 10205  0530                     l6966:	
 10206                           
 10207                           ;doprnt.c: 1469: }
 10208                           ;doprnt.c: 1472: prec = c;
 10209  0530  084C               	movf	sprintf@c^(0+128),w
 10210  0531  00BD               	movwf	sprintf@prec^(0+128)
 10211  0532  01BE               	clrf	(sprintf@prec+1)^(0+128)
 10212  0533  1BBD               	btfsc	sprintf@prec^(0+128),7
 10213  0534  03BE               	decf	(sprintf@prec+1)^(0+128),f
 10214  0535                     l6976:	
 10215                           ;doprnt.c: 1474: while(prec--) {
 10216                           
 10217  0535  30FF               	movlw	255
 10218  0536  07BD               	addwf	sprintf@prec^(0+128),f
 10219  0537  30FF               	movlw	255
 10220  0538  3DBE               	addwfc	(sprintf@prec+1)^(0+128),f
 10221  0539  0A3D               	incf	sprintf@prec^(0+128),w
 10222  053A  1903               	btfsc	3,2
 10223  053B  0A3E               	incf	(sprintf@prec+1)^(0+128),w
 10224  053C  1903               	btfsc	3,2
 10225  053D  285E               	goto	l6978
 10226                           
 10227                           ;doprnt.c: 1478: {
 10228                           ;doprnt.c: 1499: {
 10229                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 10230  053E  083E               	movf	(sprintf@prec+1)^(0+128),w
 10231  053F  0085               	movwf	5
 10232  0540  083D               	movf	sprintf@prec^(0+128),w
 10233  0541  0084               	movwf	4
 10234  0542  3584               	lslf	4,f
 10235  0543  0D85               	rlf	5,f
 10236  0544  3584               	lslf	4,f
 10237  0545  0D85               	rlf	5,f
 10238  0546  3076               	movlw	low (_hexpowers| (0+32768))
 10239  0547  0784               	addwf	4,f
 10240  0548  30A0               	movlw	high (_hexpowers| (0+32768))
 10241  0549  3D85               	addwfc	5,f
 10242  054A  3F00               	moviw [0]fsr0
 10243  054B  0020               	movlb	0	; select bank0
 10244  054C  00A0               	movwf	___lldiv@divisor
 10245  054D  3F01               	moviw [1]fsr0
 10246  054E  00A1               	movwf	___lldiv@divisor+1
 10247  054F  3F02               	moviw [2]fsr0
 10248  0550  00A2               	movwf	___lldiv@divisor+2
 10249  0551  3F03               	moviw [3]fsr0
 10250  0552  00A3               	movwf	___lldiv@divisor+3
 10251  0553  0021               	movlb	1	; select bank1
 10252  0554  0842               	movf	(sprintf@val+3)^(0+128),w
 10253  0555  0020               	movlb	0	; select bank0
 10254  0556  00A7               	movwf	___lldiv@dividend+3
 10255  0557  0021               	movlb	1	; select bank1
 10256  0558  0841               	movf	(sprintf@val+2)^(0+128),w
 10257  0559  0020               	movlb	0	; select bank0
 10258  055A  00A6               	movwf	___lldiv@dividend+2
 10259  055B  0021               	movlb	1	; select bank1
 10260  055C  0840               	movf	(sprintf@val+1)^(0+128),w
 10261  055D  0020               	movlb	0	; select bank0
 10262  055E  00A5               	movwf	___lldiv@dividend+1
 10263  055F  0021               	movlb	1	; select bank1
 10264  0560  083F               	movf	sprintf@val^(0+128),w
 10265  0561  0020               	movlb	0	; select bank0
 10266  0562  00A4               	movwf	___lldiv@dividend
 10267  0563  3190  200C  3180   	fcall	___lldiv
 10268  0566  0020               	movlb	0	; select bank0
 10269  0567  0820               	movf	?___lldiv,w
 10270  0568  390F               	andlw	15
 10271  0569  0021               	movlb	1	; select bank1
 10272  056A  00B0               	movwf	??_sprintf^(0+128)
 10273  056B  0830               	movf	??_sprintf^(0+128),w
 10274  056C  00B9               	movwf	sprintf@idx^(0+128)
 10275                           
 10276                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 10277  056D  0839               	movf	sprintf@idx^(0+128),w
 10278  056E  3EEC               	addlw	low (STR_10| (0+32768))
 10279  056F  0084               	movwf	4
 10280  0570  30A0               	movlw	high (STR_10| (0+32768))
 10281  0571  1803               	skipnc
 10282  0572  3E01               	addlw	1
 10283  0573  0085               	movwf	5
 10284  0574  0800               	movf	0,w	;code access
 10285  0575  00B0               	movwf	??_sprintf^(0+128)
 10286  0576  0830               	movf	??_sprintf^(0+128),w
 10287  0577  00CC               	movwf	sprintf@c^(0+128)
 10288                           
 10289                           ;doprnt.c: 1508: }
 10290                           ;doprnt.c: 1523: }
 10291                           ;doprnt.c: 1524: ((*sp++ = (c)));
 10292  0578  0826               	movf	sprintf@sp^(0+128),w
 10293  0579  0086               	movwf	6
 10294  057A  0827               	movf	(sprintf@sp+1)^(0+128),w
 10295  057B  0087               	movwf	7
 10296  057C  084C               	movf	sprintf@c^(0+128),w
 10297  057D  0081               	movwf	1
 10298  057E  3001               	movlw	1
 10299  057F  07A6               	addwf	sprintf@sp^(0+128),f
 10300  0580  3000               	movlw	0
 10301  0581  3DA7               	addwfc	(sprintf@sp+1)^(0+128),f
 10302  0582  2D35               	goto	l6976
 10303  0583                     l6980:	
 10304                           ;doprnt.c: 1525: }
 10305                           ;doprnt.c: 1533: }
 10306                           ;doprnt.c: 1535: alldone:
 10307                           
 10308                           
 10309                           ;doprnt.c: 1538: *sp = 0;
 10310  0583  0826               	movf	sprintf@sp^(0+128),w
 10311  0584  0086               	movwf	6
 10312  0585  0827               	movf	(sprintf@sp+1)^(0+128),w
 10313  0586  0087               	movwf	7
 10314  0587  0181               	clrf	1
 10315  0588  0008               	return
 10316  0589                     __end_of_sprintf:	
 10317                           ;doprnt.c: 1540: return 0;
 10318                           ;	Return value of _sprintf is never used
 10319                           
 10320                           
 10321                           	psect	text2
 10322  0589                     __ptext2:	
 10323 ;; *************** function _scale *****************
 10324 ;; Defined at:
 10325 ;;		line 425 in file "/opt/microchip/xc8/v1.35/sources/common/doprnt.c"
 10326 ;; Parameters:    Size  Location     Type
 10327 ;;  scl             1    wreg     char 
 10328 ;; Auto vars:     Size  Location     Type
 10329 ;;  scl             1   46[BANK0 ] char 
 10330 ;; Return value:  Size  Location     Type
 10331 ;;                  3   38[BANK0 ] char 
 10332 ;; Registers used:
 10333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10334 ;; Tracked objects:
 10335 ;;		On entry : 0/0
 10336 ;;		On exit  : 0/0
 10337 ;;		Unchanged: 0/0
 10338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10339 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10340 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10341 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10342 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10343 ;;Total ram usage:        9 bytes
 10344 ;; Hardware stack levels used:    1
 10345 ;; Hardware stack levels required when called:    7
 10346 ;; This function calls:
 10347 ;;		___awdiv
 10348 ;;		___awmod
 10349 ;;		___ftmul
 10350 ;;		___wmul
 10351 ;; This function is called by:
 10352 ;;		_sprintf
 10353 ;; This function uses a non-reentrant model
 10354 ;;
 10355                           
 10356                           
 10357                           ;psect for function _scale
 10358  0589                     _scale:	
 10359                           
 10360                           ;incstack = 0
 10361                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10362                           ;scale@scl stored from wreg
 10363  0589  0020               	movlb	0	; select bank0
 10364  058A  00CE               	movwf	scale@scl
 10365                           
 10366                           ;doprnt.c: 428: if(scl < 0) {
 10367  058B  1FCE               	btfss	scale@scl,7
 10368  058C  2EAF               	goto	l6454
 10369                           
 10370                           ;doprnt.c: 429: scl = -scl;
 10371  058D  09CE               	comf	scale@scl,f
 10372  058E  0ACE               	incf	scale@scl,f
 10373                           
 10374                           ;doprnt.c: 430: if(scl>=110)
 10375  058F  084E               	movf	scale@scl,w
 10376  0590  3A80               	xorlw	128
 10377  0591  3E12               	addlw	-238
 10378  0592  1C03               	skipc
 10379  0593  2E33               	goto	l6444
 10380                           
 10381                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10382  0594  300A               	movlw	10
 10383  0595  00A7               	movwf	___awdiv@divisor
 10384  0596  3000               	movlw	0
 10385  0597  00A8               	movwf	___awdiv@divisor+1
 10386  0598  084E               	movf	scale@scl,w
 10387  0599  00A2               	movwf	___awmod@dividend
 10388  059A  01A3               	clrf	___awmod@dividend+1
 10389  059B  1BA2               	btfsc	___awmod@dividend,7
 10390  059C  03A3               	decf	___awmod@dividend+1,f
 10391  059D  3064               	movlw	100
 10392  059E  00A0               	movwf	___awmod@divisor
 10393  059F  3000               	movlw	0
 10394  05A0  00A1               	movwf	___awmod@divisor+1
 10395  05A1  31A2  2261  3185   	fcall	___awmod
 10396  05A4  0020               	movlb	0	; select bank0
 10397  05A5  0821               	movf	?___awmod+1,w
 10398  05A6  00AA               	movwf	___awdiv@dividend+1
 10399  05A7  0820               	movf	?___awmod,w
 10400  05A8  00A9               	movwf	___awdiv@dividend
 10401  05A9  31A2  22A7  3185   	fcall	___awdiv
 10402  05AC  0020               	movlb	0	; select bank0
 10403  05AD  0827               	movf	?___awdiv,w
 10404  05AE  3E09               	addlw	9
 10405  05AF  00B0               	movwf	___wmul@multiplier
 10406  05B0  3000               	movlw	0
 10407  05B1  3D28               	addwfc	?___awdiv+1,w
 10408  05B2  00B1               	movwf	___wmul@multiplier+1
 10409  05B3  3003               	movlw	3
 10410  05B4  00B2               	movwf	___wmul@multiplicand
 10411  05B5  3000               	movlw	0
 10412  05B6  00B3               	movwf	___wmul@multiplicand+1
 10413  05B7  31AC  24B9  3185   	fcall	___wmul
 10414  05BA  0020               	movlb	0	; select bank0
 10415  05BB  0831               	movf	?___wmul+1,w
 10416  05BC  0085               	movwf	5
 10417  05BD  0830               	movf	?___wmul,w
 10418  05BE  0084               	movwf	4
 10419  05BF  3028               	movlw	low (__npowers_| (0+32768))
 10420  05C0  0784               	addwf	4,f
 10421  05C1  30A0               	movlw	high (__npowers_| (0+32768))
 10422  05C2  3D85               	addwfc	5,f
 10423  05C3  3F00               	moviw [0]fsr0
 10424  05C4  00B6               	movwf	___ftmul@f1
 10425  05C5  3F01               	moviw [1]fsr0
 10426  05C6  00B7               	movwf	___ftmul@f1+1
 10427  05C7  3F02               	moviw [2]fsr0
 10428  05C8  00B8               	movwf	___ftmul@f1+2
 10429  05C9  3064               	movlw	100
 10430  05CA  00A7               	movwf	___awdiv@divisor
 10431  05CB  3000               	movlw	0
 10432  05CC  00A8               	movwf	___awdiv@divisor+1
 10433  05CD  084E               	movf	scale@scl,w
 10434  05CE  00A9               	movwf	___awdiv@dividend
 10435  05CF  01AA               	clrf	___awdiv@dividend+1
 10436  05D0  1BA9               	btfsc	___awdiv@dividend,7
 10437  05D1  03AA               	decf	___awdiv@dividend+1,f
 10438  05D2  31A2  22A7  3185   	fcall	___awdiv
 10439  05D5  0020               	movlb	0	; select bank0
 10440  05D6  0827               	movf	?___awdiv,w
 10441  05D7  3E12               	addlw	18
 10442  05D8  00B0               	movwf	___wmul@multiplier
 10443  05D9  3000               	movlw	0
 10444  05DA  3D28               	addwfc	?___awdiv+1,w
 10445  05DB  00B1               	movwf	___wmul@multiplier+1
 10446  05DC  3003               	movlw	3
 10447  05DD  00B2               	movwf	___wmul@multiplicand
 10448  05DE  3000               	movlw	0
 10449  05DF  00B3               	movwf	___wmul@multiplicand+1
 10450  05E0  31AC  24B9  3185   	fcall	___wmul
 10451  05E3  0020               	movlb	0	; select bank0
 10452  05E4  0831               	movf	?___wmul+1,w
 10453  05E5  0085               	movwf	5
 10454  05E6  0830               	movf	?___wmul,w
 10455  05E7  0084               	movwf	4
 10456  05E8  3028               	movlw	low (__npowers_| (0+32768))
 10457  05E9  0784               	addwf	4,f
 10458  05EA  30A0               	movlw	high (__npowers_| (0+32768))
 10459  05EB  3D85               	addwfc	5,f
 10460  05EC  3F00               	moviw [0]fsr0
 10461  05ED  00B9               	movwf	___ftmul@f2
 10462  05EE  3F01               	moviw [1]fsr0
 10463  05EF  00BA               	movwf	___ftmul@f2+1
 10464  05F0  3F02               	moviw [2]fsr0
 10465  05F1  00BB               	movwf	___ftmul@f2+2
 10466  05F2  31A7  274C  3185   	fcall	___ftmul
 10467  05F5  0020               	movlb	0	; select bank0
 10468  05F6  0836               	movf	?___ftmul,w
 10469  05F7  00CB               	movwf	_scale$1912
 10470  05F8  0837               	movf	?___ftmul+1,w
 10471  05F9  00CC               	movwf	_scale$1912+1
 10472  05FA  0838               	movf	?___ftmul+2,w
 10473  05FB  00CD               	movwf	_scale$1912+2
 10474                           
 10475                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10476  05FC  084E               	movf	scale@scl,w
 10477  05FD  00A2               	movwf	___awmod@dividend
 10478  05FE  01A3               	clrf	___awmod@dividend+1
 10479  05FF  1BA2               	btfsc	___awmod@dividend,7
 10480  0600  03A3               	decf	___awmod@dividend+1,f
 10481  0601  300A               	movlw	10
 10482  0602  00A0               	movwf	___awmod@divisor
 10483  0603  3000               	movlw	0
 10484  0604  00A1               	movwf	___awmod@divisor+1
 10485  0605  31A2  2261  3185   	fcall	___awmod
 10486  0608  0020               	movlb	0	; select bank0
 10487  0609  0821               	movf	?___awmod+1,w
 10488  060A  00B1               	movwf	___wmul@multiplier+1
 10489  060B  0820               	movf	?___awmod,w
 10490  060C  00B0               	movwf	___wmul@multiplier
 10491  060D  3003               	movlw	3
 10492  060E  00B2               	movwf	___wmul@multiplicand
 10493  060F  3000               	movlw	0
 10494  0610  00B3               	movwf	___wmul@multiplicand+1
 10495  0611  31AC  24B9  3185   	fcall	___wmul
 10496  0614  0020               	movlb	0	; select bank0
 10497  0615  0831               	movf	?___wmul+1,w
 10498  0616  0085               	movwf	5
 10499  0617  0830               	movf	?___wmul,w
 10500  0618  0084               	movwf	4
 10501  0619  3028               	movlw	low (__npowers_| (0+32768))
 10502  061A  0784               	addwf	4,f
 10503  061B  30A0               	movlw	high (__npowers_| (0+32768))
 10504  061C  3D85               	addwfc	5,f
 10505  061D  3F00               	moviw [0]fsr0
 10506  061E  00B6               	movwf	___ftmul@f1
 10507  061F  3F01               	moviw [1]fsr0
 10508  0620  00B7               	movwf	___ftmul@f1+1
 10509  0621  3F02               	moviw [2]fsr0
 10510  0622  00B8               	movwf	___ftmul@f1+2
 10511  0623  084B               	movf	_scale$1912,w
 10512  0624  00B9               	movwf	___ftmul@f2
 10513  0625  084C               	movf	_scale$1912+1,w
 10514  0626  00BA               	movwf	___ftmul@f2+1
 10515  0627  084D               	movf	_scale$1912+2,w
 10516  0628  00BB               	movwf	___ftmul@f2+2
 10517  0629  31A7  274C         	fcall	___ftmul
 10518  062B  0020               	movlb	0	; select bank0
 10519  062C  0836               	movf	?___ftmul,w
 10520  062D  00C6               	movwf	?_scale
 10521  062E  0837               	movf	?___ftmul+1,w
 10522  062F  00C7               	movwf	?_scale+1
 10523  0630  0838               	movf	?___ftmul+2,w
 10524  0631  00C8               	movwf	?_scale+2
 10525  0632  0008               	return
 10526  0633                     l6444:	
 10527                           
 10528                           ;doprnt.c: 432: else if(scl > 10)
 10529  0633  084E               	movf	scale@scl,w
 10530  0634  3A80               	xorlw	128
 10531  0635  3E75               	addlw	-139
 10532  0636  1C03               	skipc
 10533  0637  2E92               	goto	l6450
 10534                           
 10535                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 10536  0638  084E               	movf	scale@scl,w
 10537  0639  00A2               	movwf	___awmod@dividend
 10538  063A  01A3               	clrf	___awmod@dividend+1
 10539  063B  1BA2               	btfsc	___awmod@dividend,7
 10540  063C  03A3               	decf	___awmod@dividend+1,f
 10541  063D  300A               	movlw	10
 10542  063E  00A0               	movwf	___awmod@divisor
 10543  063F  3000               	movlw	0
 10544  0640  00A1               	movwf	___awmod@divisor+1
 10545  0641  31A2  2261  3185   	fcall	___awmod
 10546  0644  0020               	movlb	0	; select bank0
 10547  0645  0821               	movf	?___awmod+1,w
 10548  0646  00B1               	movwf	___wmul@multiplier+1
 10549  0647  0820               	movf	?___awmod,w
 10550  0648  00B0               	movwf	___wmul@multiplier
 10551  0649  3003               	movlw	3
 10552  064A  00B2               	movwf	___wmul@multiplicand
 10553  064B  3000               	movlw	0
 10554  064C  00B3               	movwf	___wmul@multiplicand+1
 10555  064D  31AC  24B9  3185   	fcall	___wmul
 10556  0650  0020               	movlb	0	; select bank0
 10557  0651  0831               	movf	?___wmul+1,w
 10558  0652  0085               	movwf	5
 10559  0653  0830               	movf	?___wmul,w
 10560  0654  0084               	movwf	4
 10561  0655  3028               	movlw	low (__npowers_| (0+32768))
 10562  0656  0784               	addwf	4,f
 10563  0657  30A0               	movlw	high (__npowers_| (0+32768))
 10564  0658  3D85               	addwfc	5,f
 10565  0659  3F00               	moviw [0]fsr0
 10566  065A  00B6               	movwf	___ftmul@f1
 10567  065B  3F01               	moviw [1]fsr0
 10568  065C  00B7               	movwf	___ftmul@f1+1
 10569  065D  3F02               	moviw [2]fsr0
 10570  065E  00B8               	movwf	___ftmul@f1+2
 10571  065F  300A               	movlw	10
 10572  0660  00A7               	movwf	___awdiv@divisor
 10573  0661  3000               	movlw	0
 10574  0662  00A8               	movwf	___awdiv@divisor+1
 10575  0663  084E               	movf	scale@scl,w
 10576  0664  00A9               	movwf	___awdiv@dividend
 10577  0665  01AA               	clrf	___awdiv@dividend+1
 10578  0666  1BA9               	btfsc	___awdiv@dividend,7
 10579  0667  03AA               	decf	___awdiv@dividend+1,f
 10580  0668  31A2  22A7  3185   	fcall	___awdiv
 10581  066B  0020               	movlb	0	; select bank0
 10582  066C  0827               	movf	?___awdiv,w
 10583  066D  3E09               	addlw	9
 10584  066E  00B0               	movwf	___wmul@multiplier
 10585  066F  3000               	movlw	0
 10586  0670  3D28               	addwfc	?___awdiv+1,w
 10587  0671  00B1               	movwf	___wmul@multiplier+1
 10588  0672  3003               	movlw	3
 10589  0673  00B2               	movwf	___wmul@multiplicand
 10590  0674  3000               	movlw	0
 10591  0675  00B3               	movwf	___wmul@multiplicand+1
 10592  0676  31AC  24B9  3185   	fcall	___wmul
 10593  0679  0020               	movlb	0	; select bank0
 10594  067A  0831               	movf	?___wmul+1,w
 10595  067B  0085               	movwf	5
 10596  067C  0830               	movf	?___wmul,w
 10597  067D  0084               	movwf	4
 10598  067E  3028               	movlw	low (__npowers_| (0+32768))
 10599  067F  0784               	addwf	4,f
 10600  0680  30A0               	movlw	high (__npowers_| (0+32768))
 10601  0681  3D85               	addwfc	5,f
 10602  0682  3F00               	moviw [0]fsr0
 10603  0683  00B9               	movwf	___ftmul@f2
 10604  0684  3F01               	moviw [1]fsr0
 10605  0685  00BA               	movwf	___ftmul@f2+1
 10606  0686  3F02               	moviw [2]fsr0
 10607  0687  00BB               	movwf	___ftmul@f2+2
 10608  0688  31A7  274C         	fcall	___ftmul
 10609  068A  0020               	movlb	0	; select bank0
 10610  068B  0836               	movf	?___ftmul,w
 10611  068C  00C6               	movwf	?_scale
 10612  068D  0837               	movf	?___ftmul+1,w
 10613  068E  00C7               	movwf	?_scale+1
 10614  068F  0838               	movf	?___ftmul+2,w
 10615  0690  00C8               	movwf	?_scale+2
 10616  0691  0008               	return
 10617  0692                     l6450:	
 10618                           
 10619                           ;doprnt.c: 434: return _npowers_[scl];
 10620  0692  084E               	movf	scale@scl,w
 10621  0693  00C9               	movwf	??_scale
 10622  0694  01CA               	clrf	??_scale+1
 10623  0695  0849               	movf	??_scale,w
 10624  0696  00B0               	movwf	___wmul@multiplier
 10625  0697  084A               	movf	??_scale+1,w
 10626  0698  00B1               	movwf	___wmul@multiplier+1
 10627  0699  3003               	movlw	3
 10628  069A  00B2               	movwf	___wmul@multiplicand
 10629  069B  3000               	movlw	0
 10630  069C  00B3               	movwf	___wmul@multiplicand+1
 10631  069D  31AC  24B9         	fcall	___wmul
 10632  069F  0020               	movlb	0	; select bank0
 10633  06A0  0831               	movf	?___wmul+1,w
 10634  06A1  0085               	movwf	5
 10635  06A2  0830               	movf	?___wmul,w
 10636  06A3  0084               	movwf	4
 10637  06A4  3028               	movlw	low (__npowers_| (0+32768))
 10638  06A5  0784               	addwf	4,f
 10639  06A6  30A0               	movlw	high (__npowers_| (0+32768))
 10640  06A7  3D85               	addwfc	5,f
 10641  06A8  3F00               	moviw [0]fsr0
 10642  06A9  00C6               	movwf	?_scale
 10643  06AA  3F01               	moviw [1]fsr0
 10644  06AB  00C7               	movwf	?_scale+1
 10645  06AC  3F02               	moviw [2]fsr0
 10646  06AD  00C8               	movwf	?_scale+2
 10647  06AE  0008               	return
 10648  06AF                     l6454:	
 10649                           
 10650                           ;doprnt.c: 435: }
 10651                           ;doprnt.c: 436: if(scl>=110)
 10652  06AF  084E               	movf	scale@scl,w
 10653  06B0  3A80               	xorlw	128
 10654  06B1  3E12               	addlw	-238
 10655  06B2  1C03               	skipc
 10656  06B3  2F53               	goto	l6462
 10657                           
 10658                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10659  06B4  300A               	movlw	10
 10660  06B5  00A7               	movwf	___awdiv@divisor
 10661  06B6  3000               	movlw	0
 10662  06B7  00A8               	movwf	___awdiv@divisor+1
 10663  06B8  084E               	movf	scale@scl,w
 10664  06B9  00A2               	movwf	___awmod@dividend
 10665  06BA  01A3               	clrf	___awmod@dividend+1
 10666  06BB  1BA2               	btfsc	___awmod@dividend,7
 10667  06BC  03A3               	decf	___awmod@dividend+1,f
 10668  06BD  3064               	movlw	100
 10669  06BE  00A0               	movwf	___awmod@divisor
 10670  06BF  3000               	movlw	0
 10671  06C0  00A1               	movwf	___awmod@divisor+1
 10672  06C1  31A2  2261  3185   	fcall	___awmod
 10673  06C4  0020               	movlb	0	; select bank0
 10674  06C5  0821               	movf	?___awmod+1,w
 10675  06C6  00AA               	movwf	___awdiv@dividend+1
 10676  06C7  0820               	movf	?___awmod,w
 10677  06C8  00A9               	movwf	___awdiv@dividend
 10678  06C9  31A2  22A7  3185   	fcall	___awdiv
 10679  06CC  0020               	movlb	0	; select bank0
 10680  06CD  0827               	movf	?___awdiv,w
 10681  06CE  3E09               	addlw	9
 10682  06CF  00B0               	movwf	___wmul@multiplier
 10683  06D0  3000               	movlw	0
 10684  06D1  3D28               	addwfc	?___awdiv+1,w
 10685  06D2  00B1               	movwf	___wmul@multiplier+1
 10686  06D3  3003               	movlw	3
 10687  06D4  00B2               	movwf	___wmul@multiplicand
 10688  06D5  3000               	movlw	0
 10689  06D6  00B3               	movwf	___wmul@multiplicand+1
 10690  06D7  31AC  24B9  3185   	fcall	___wmul
 10691  06DA  0020               	movlb	0	; select bank0
 10692  06DB  0831               	movf	?___wmul+1,w
 10693  06DC  0085               	movwf	5
 10694  06DD  0830               	movf	?___wmul,w
 10695  06DE  0084               	movwf	4
 10696  06DF  304F               	movlw	low (__powers_| (0+32768))
 10697  06E0  0784               	addwf	4,f
 10698  06E1  30A0               	movlw	high (__powers_| (0+32768))
 10699  06E2  3D85               	addwfc	5,f
 10700  06E3  3F00               	moviw [0]fsr0
 10701  06E4  00B6               	movwf	___ftmul@f1
 10702  06E5  3F01               	moviw [1]fsr0
 10703  06E6  00B7               	movwf	___ftmul@f1+1
 10704  06E7  3F02               	moviw [2]fsr0
 10705  06E8  00B8               	movwf	___ftmul@f1+2
 10706  06E9  3064               	movlw	100
 10707  06EA  00A7               	movwf	___awdiv@divisor
 10708  06EB  3000               	movlw	0
 10709  06EC  00A8               	movwf	___awdiv@divisor+1
 10710  06ED  084E               	movf	scale@scl,w
 10711  06EE  00A9               	movwf	___awdiv@dividend
 10712  06EF  01AA               	clrf	___awdiv@dividend+1
 10713  06F0  1BA9               	btfsc	___awdiv@dividend,7
 10714  06F1  03AA               	decf	___awdiv@dividend+1,f
 10715  06F2  31A2  22A7  3185   	fcall	___awdiv
 10716  06F5  0020               	movlb	0	; select bank0
 10717  06F6  0827               	movf	?___awdiv,w
 10718  06F7  3E12               	addlw	18
 10719  06F8  00B0               	movwf	___wmul@multiplier
 10720  06F9  3000               	movlw	0
 10721  06FA  3D28               	addwfc	?___awdiv+1,w
 10722  06FB  00B1               	movwf	___wmul@multiplier+1
 10723  06FC  3003               	movlw	3
 10724  06FD  00B2               	movwf	___wmul@multiplicand
 10725  06FE  3000               	movlw	0
 10726  06FF  00B3               	movwf	___wmul@multiplicand+1
 10727  0700  31AC  24B9  3185   	fcall	___wmul
 10728  0703  0020               	movlb	0	; select bank0
 10729  0704  0831               	movf	?___wmul+1,w
 10730  0705  0085               	movwf	5
 10731  0706  0830               	movf	?___wmul,w
 10732  0707  0084               	movwf	4
 10733  0708  304F               	movlw	low (__powers_| (0+32768))
 10734  0709  0784               	addwf	4,f
 10735  070A  30A0               	movlw	high (__powers_| (0+32768))
 10736  070B  3D85               	addwfc	5,f
 10737  070C  3F00               	moviw [0]fsr0
 10738  070D  00B9               	movwf	___ftmul@f2
 10739  070E  3F01               	moviw [1]fsr0
 10740  070F  00BA               	movwf	___ftmul@f2+1
 10741  0710  3F02               	moviw [2]fsr0
 10742  0711  00BB               	movwf	___ftmul@f2+2
 10743  0712  31A7  274C  3185   	fcall	___ftmul
 10744  0715  0020               	movlb	0	; select bank0
 10745  0716  0836               	movf	?___ftmul,w
 10746  0717  00CB               	movwf	_scale$1912
 10747  0718  0837               	movf	?___ftmul+1,w
 10748  0719  00CC               	movwf	_scale$1912+1
 10749  071A  0838               	movf	?___ftmul+2,w
 10750  071B  00CD               	movwf	_scale$1912+2
 10751                           
 10752                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10753  071C  084E               	movf	scale@scl,w
 10754  071D  00A2               	movwf	___awmod@dividend
 10755  071E  01A3               	clrf	___awmod@dividend+1
 10756  071F  1BA2               	btfsc	___awmod@dividend,7
 10757  0720  03A3               	decf	___awmod@dividend+1,f
 10758  0721  300A               	movlw	10
 10759  0722  00A0               	movwf	___awmod@divisor
 10760  0723  3000               	movlw	0
 10761  0724  00A1               	movwf	___awmod@divisor+1
 10762  0725  31A2  2261  3185   	fcall	___awmod
 10763  0728  0020               	movlb	0	; select bank0
 10764  0729  0821               	movf	?___awmod+1,w
 10765  072A  00B1               	movwf	___wmul@multiplier+1
 10766  072B  0820               	movf	?___awmod,w
 10767  072C  00B0               	movwf	___wmul@multiplier
 10768  072D  3003               	movlw	3
 10769  072E  00B2               	movwf	___wmul@multiplicand
 10770  072F  3000               	movlw	0
 10771  0730  00B3               	movwf	___wmul@multiplicand+1
 10772  0731  31AC  24B9  3185   	fcall	___wmul
 10773  0734  0020               	movlb	0	; select bank0
 10774  0735  0831               	movf	?___wmul+1,w
 10775  0736  0085               	movwf	5
 10776  0737  0830               	movf	?___wmul,w
 10777  0738  0084               	movwf	4
 10778  0739  304F               	movlw	low (__powers_| (0+32768))
 10779  073A  0784               	addwf	4,f
 10780  073B  30A0               	movlw	high (__powers_| (0+32768))
 10781  073C  3D85               	addwfc	5,f
 10782  073D  3F00               	moviw [0]fsr0
 10783  073E  00B6               	movwf	___ftmul@f1
 10784  073F  3F01               	moviw [1]fsr0
 10785  0740  00B7               	movwf	___ftmul@f1+1
 10786  0741  3F02               	moviw [2]fsr0
 10787  0742  00B8               	movwf	___ftmul@f1+2
 10788  0743  084B               	movf	_scale$1912,w
 10789  0744  00B9               	movwf	___ftmul@f2
 10790  0745  084C               	movf	_scale$1912+1,w
 10791  0746  00BA               	movwf	___ftmul@f2+1
 10792  0747  084D               	movf	_scale$1912+2,w
 10793  0748  00BB               	movwf	___ftmul@f2+2
 10794  0749  31A7  274C         	fcall	___ftmul
 10795  074B  0020               	movlb	0	; select bank0
 10796  074C  0836               	movf	?___ftmul,w
 10797  074D  00C6               	movwf	?_scale
 10798  074E  0837               	movf	?___ftmul+1,w
 10799  074F  00C7               	movwf	?_scale+1
 10800  0750  0838               	movf	?___ftmul+2,w
 10801  0751  00C8               	movwf	?_scale+2
 10802  0752  0008               	return
 10803  0753                     l6462:	
 10804                           
 10805                           ;doprnt.c: 438: else if(scl > 10)
 10806  0753  084E               	movf	scale@scl,w
 10807  0754  3A80               	xorlw	128
 10808  0755  3E75               	addlw	-139
 10809  0756  1C03               	skipc
 10810  0757  2FB2               	goto	l6468
 10811                           
 10812                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 10813  0758  084E               	movf	scale@scl,w
 10814  0759  00A2               	movwf	___awmod@dividend
 10815  075A  01A3               	clrf	___awmod@dividend+1
 10816  075B  1BA2               	btfsc	___awmod@dividend,7
 10817  075C  03A3               	decf	___awmod@dividend+1,f
 10818  075D  300A               	movlw	10
 10819  075E  00A0               	movwf	___awmod@divisor
 10820  075F  3000               	movlw	0
 10821  0760  00A1               	movwf	___awmod@divisor+1
 10822  0761  31A2  2261  3185   	fcall	___awmod
 10823  0764  0020               	movlb	0	; select bank0
 10824  0765  0821               	movf	?___awmod+1,w
 10825  0766  00B1               	movwf	___wmul@multiplier+1
 10826  0767  0820               	movf	?___awmod,w
 10827  0768  00B0               	movwf	___wmul@multiplier
 10828  0769  3003               	movlw	3
 10829  076A  00B2               	movwf	___wmul@multiplicand
 10830  076B  3000               	movlw	0
 10831  076C  00B3               	movwf	___wmul@multiplicand+1
 10832  076D  31AC  24B9  3185   	fcall	___wmul
 10833  0770  0020               	movlb	0	; select bank0
 10834  0771  0831               	movf	?___wmul+1,w
 10835  0772  0085               	movwf	5
 10836  0773  0830               	movf	?___wmul,w
 10837  0774  0084               	movwf	4
 10838  0775  304F               	movlw	low (__powers_| (0+32768))
 10839  0776  0784               	addwf	4,f
 10840  0777  30A0               	movlw	high (__powers_| (0+32768))
 10841  0778  3D85               	addwfc	5,f
 10842  0779  3F00               	moviw [0]fsr0
 10843  077A  00B6               	movwf	___ftmul@f1
 10844  077B  3F01               	moviw [1]fsr0
 10845  077C  00B7               	movwf	___ftmul@f1+1
 10846  077D  3F02               	moviw [2]fsr0
 10847  077E  00B8               	movwf	___ftmul@f1+2
 10848  077F  300A               	movlw	10
 10849  0780  00A7               	movwf	___awdiv@divisor
 10850  0781  3000               	movlw	0
 10851  0782  00A8               	movwf	___awdiv@divisor+1
 10852  0783  084E               	movf	scale@scl,w
 10853  0784  00A9               	movwf	___awdiv@dividend
 10854  0785  01AA               	clrf	___awdiv@dividend+1
 10855  0786  1BA9               	btfsc	___awdiv@dividend,7
 10856  0787  03AA               	decf	___awdiv@dividend+1,f
 10857  0788  31A2  22A7  3185   	fcall	___awdiv
 10858  078B  0020               	movlb	0	; select bank0
 10859  078C  0827               	movf	?___awdiv,w
 10860  078D  3E09               	addlw	9
 10861  078E  00B0               	movwf	___wmul@multiplier
 10862  078F  3000               	movlw	0
 10863  0790  3D28               	addwfc	?___awdiv+1,w
 10864  0791  00B1               	movwf	___wmul@multiplier+1
 10865  0792  3003               	movlw	3
 10866  0793  00B2               	movwf	___wmul@multiplicand
 10867  0794  3000               	movlw	0
 10868  0795  00B3               	movwf	___wmul@multiplicand+1
 10869  0796  31AC  24B9  3185   	fcall	___wmul
 10870  0799  0020               	movlb	0	; select bank0
 10871  079A  0831               	movf	?___wmul+1,w
 10872  079B  0085               	movwf	5
 10873  079C  0830               	movf	?___wmul,w
 10874  079D  0084               	movwf	4
 10875  079E  304F               	movlw	low (__powers_| (0+32768))
 10876  079F  0784               	addwf	4,f
 10877  07A0  30A0               	movlw	high (__powers_| (0+32768))
 10878  07A1  3D85               	addwfc	5,f
 10879  07A2  3F00               	moviw [0]fsr0
 10880  07A3  00B9               	movwf	___ftmul@f2
 10881  07A4  3F01               	moviw [1]fsr0
 10882  07A5  00BA               	movwf	___ftmul@f2+1
 10883  07A6  3F02               	moviw [2]fsr0
 10884  07A7  00BB               	movwf	___ftmul@f2+2
 10885  07A8  31A7  274C         	fcall	___ftmul
 10886  07AA  0020               	movlb	0	; select bank0
 10887  07AB  0836               	movf	?___ftmul,w
 10888  07AC  00C6               	movwf	?_scale
 10889  07AD  0837               	movf	?___ftmul+1,w
 10890  07AE  00C7               	movwf	?_scale+1
 10891  07AF  0838               	movf	?___ftmul+2,w
 10892  07B0  00C8               	movwf	?_scale+2
 10893  07B1  0008               	return
 10894  07B2                     l6468:	
 10895                           
 10896                           ;doprnt.c: 440: return _powers_[scl];
 10897  07B2  084E               	movf	scale@scl,w
 10898  07B3  00C9               	movwf	??_scale
 10899  07B4  01CA               	clrf	??_scale+1
 10900  07B5  0849               	movf	??_scale,w
 10901  07B6  00B0               	movwf	___wmul@multiplier
 10902  07B7  084A               	movf	??_scale+1,w
 10903  07B8  00B1               	movwf	___wmul@multiplier+1
 10904  07B9  3003               	movlw	3
 10905  07BA  00B2               	movwf	___wmul@multiplicand
 10906  07BB  3000               	movlw	0
 10907  07BC  00B3               	movwf	___wmul@multiplicand+1
 10908  07BD  31AC  24B9         	fcall	___wmul
 10909  07BF  0020               	movlb	0	; select bank0
 10910  07C0  0831               	movf	?___wmul+1,w
 10911  07C1  0085               	movwf	5
 10912  07C2  0830               	movf	?___wmul,w
 10913  07C3  0084               	movwf	4
 10914  07C4  304F               	movlw	low (__powers_| (0+32768))
 10915  07C5  0784               	addwf	4,f
 10916  07C6  30A0               	movlw	high (__powers_| (0+32768))
 10917  07C7  3D85               	addwfc	5,f
 10918  07C8  3F00               	moviw [0]fsr0
 10919  07C9  00C6               	movwf	?_scale
 10920  07CA  3F01               	moviw [1]fsr0
 10921  07CB  00C7               	movwf	?_scale+1
 10922  07CC  3F02               	moviw [2]fsr0
 10923  07CD  00C8               	movwf	?_scale+2
 10924  07CE  0008               	return
 10925  07CF                     __end_of_scale:	
 10926                           
 10927                           	psect	text3
 10928  105F                     __ptext3:	
 10929 ;; *************** function _fround *****************
 10930 ;; Defined at:
 10931 ;;		line 409 in file "/opt/microchip/xc8/v1.35/sources/common/doprnt.c"
 10932 ;; Parameters:    Size  Location     Type
 10933 ;;  prec            1    wreg     unsigned char 
 10934 ;; Auto vars:     Size  Location     Type
 10935 ;;  prec            1   51[BANK0 ] unsigned char 
 10936 ;; Return value:  Size  Location     Type
 10937 ;;                  3   38[BANK0 ] unsigned char 
 10938 ;; Registers used:
 10939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10940 ;; Tracked objects:
 10941 ;;		On entry : 0/0
 10942 ;;		On exit  : 0/0
 10943 ;;		Unchanged: 0/0
 10944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10945 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10946 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10947 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10948 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10949 ;;Total ram usage:       14 bytes
 10950 ;; Hardware stack levels used:    1
 10951 ;; Hardware stack levels required when called:    7
 10952 ;; This function calls:
 10953 ;;		___awdiv
 10954 ;;		___awmod
 10955 ;;		___ftmul
 10956 ;;		___wmul
 10957 ;; This function is called by:
 10958 ;;		_sprintf
 10959 ;; This function uses a non-reentrant model
 10960 ;;
 10961                           
 10962                           
 10963                           ;psect for function _fround
 10964  105F                     _fround:	
 10965                           
 10966                           ;incstack = 0
 10967                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10968                           ;fround@prec stored from wreg
 10969  105F  0020               	movlb	0	; select bank0
 10970  1060  00D3               	movwf	fround@prec
 10971                           
 10972                           ;doprnt.c: 413: if(prec>=110)
 10973  1061  306E               	movlw	110
 10974  1062  0253               	subwf	fround@prec,w
 10975  1063  1C03               	skipc
 10976  1064  2920               	goto	l6420
 10977                           
 10978                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 10979  1065  300A               	movlw	10
 10980  1066  00A7               	movwf	___awdiv@divisor
 10981  1067  3000               	movlw	0
 10982  1068  00A8               	movwf	___awdiv@divisor+1
 10983  1069  0853               	movf	fround@prec,w
 10984  106A  00C9               	movwf	??_fround
 10985  106B  01CA               	clrf	??_fround+1
 10986  106C  0849               	movf	??_fround,w
 10987  106D  00A2               	movwf	___awmod@dividend
 10988  106E  084A               	movf	??_fround+1,w
 10989  106F  00A3               	movwf	___awmod@dividend+1
 10990  1070  3064               	movlw	100
 10991  1071  00A0               	movwf	___awmod@divisor
 10992  1072  3000               	movlw	0
 10993  1073  00A1               	movwf	___awmod@divisor+1
 10994  1074  31A2  2261  3190   	fcall	___awmod
 10995  1077  0020               	movlb	0	; select bank0
 10996  1078  0821               	movf	?___awmod+1,w
 10997  1079  00AA               	movwf	___awdiv@dividend+1
 10998  107A  0820               	movf	?___awmod,w
 10999  107B  00A9               	movwf	___awdiv@dividend
 11000  107C  31A2  22A7  3190   	fcall	___awdiv
 11001  107F  0020               	movlb	0	; select bank0
 11002  1080  0827               	movf	?___awdiv,w
 11003  1081  3E09               	addlw	9
 11004  1082  00B0               	movwf	___wmul@multiplier
 11005  1083  3000               	movlw	0
 11006  1084  3D28               	addwfc	?___awdiv+1,w
 11007  1085  00B1               	movwf	___wmul@multiplier+1
 11008  1086  3003               	movlw	3
 11009  1087  00B2               	movwf	___wmul@multiplicand
 11010  1088  3000               	movlw	0
 11011  1089  00B3               	movwf	___wmul@multiplicand+1
 11012  108A  31AC  24B9  3190   	fcall	___wmul
 11013  108D  0020               	movlb	0	; select bank0
 11014  108E  0831               	movf	?___wmul+1,w
 11015  108F  0085               	movwf	5
 11016  1090  0830               	movf	?___wmul,w
 11017  1091  0084               	movwf	4
 11018  1092  3028               	movlw	low (__npowers_| (0+32768))
 11019  1093  0784               	addwf	4,f
 11020  1094  30A0               	movlw	high (__npowers_| (0+32768))
 11021  1095  3D85               	addwfc	5,f
 11022  1096  3F00               	moviw [0]fsr0
 11023  1097  00B6               	movwf	___ftmul@f1
 11024  1098  3F01               	moviw [1]fsr0
 11025  1099  00B7               	movwf	___ftmul@f1+1
 11026  109A  3F02               	moviw [2]fsr0
 11027  109B  00B8               	movwf	___ftmul@f1+2
 11028  109C  3064               	movlw	100
 11029  109D  00A7               	movwf	___awdiv@divisor
 11030  109E  3000               	movlw	0
 11031  109F  00A8               	movwf	___awdiv@divisor+1
 11032  10A0  0853               	movf	fround@prec,w
 11033  10A1  00CB               	movwf	??_fround+2
 11034  10A2  01CC               	clrf	??_fround+3
 11035  10A3  084B               	movf	??_fround+2,w
 11036  10A4  00A9               	movwf	___awdiv@dividend
 11037  10A5  084C               	movf	??_fround+3,w
 11038  10A6  00AA               	movwf	___awdiv@dividend+1
 11039  10A7  31A2  22A7  3190   	fcall	___awdiv
 11040  10AA  0020               	movlb	0	; select bank0
 11041  10AB  0827               	movf	?___awdiv,w
 11042  10AC  3E12               	addlw	18
 11043  10AD  00B0               	movwf	___wmul@multiplier
 11044  10AE  3000               	movlw	0
 11045  10AF  3D28               	addwfc	?___awdiv+1,w
 11046  10B0  00B1               	movwf	___wmul@multiplier+1
 11047  10B1  3003               	movlw	3
 11048  10B2  00B2               	movwf	___wmul@multiplicand
 11049  10B3  3000               	movlw	0
 11050  10B4  00B3               	movwf	___wmul@multiplicand+1
 11051  10B5  31AC  24B9  3190   	fcall	___wmul
 11052  10B8  0020               	movlb	0	; select bank0
 11053  10B9  0831               	movf	?___wmul+1,w
 11054  10BA  0085               	movwf	5
 11055  10BB  0830               	movf	?___wmul,w
 11056  10BC  0084               	movwf	4
 11057  10BD  3028               	movlw	low (__npowers_| (0+32768))
 11058  10BE  0784               	addwf	4,f
 11059  10BF  30A0               	movlw	high (__npowers_| (0+32768))
 11060  10C0  3D85               	addwfc	5,f
 11061  10C1  3F00               	moviw [0]fsr0
 11062  10C2  00B9               	movwf	___ftmul@f2
 11063  10C3  3F01               	moviw [1]fsr0
 11064  10C4  00BA               	movwf	___ftmul@f2+1
 11065  10C5  3F02               	moviw [2]fsr0
 11066  10C6  00BB               	movwf	___ftmul@f2+2
 11067  10C7  31A7  274C  3190   	fcall	___ftmul
 11068  10CA  0020               	movlb	0	; select bank0
 11069  10CB  0836               	movf	?___ftmul,w
 11070  10CC  00D0               	movwf	_fround$1910
 11071  10CD  0837               	movf	?___ftmul+1,w
 11072  10CE  00D1               	movwf	_fround$1910+1
 11073  10CF  0838               	movf	?___ftmul+2,w
 11074  10D0  00D2               	movwf	_fround$1910+2
 11075                           
 11076                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11077  10D1  0853               	movf	fround@prec,w
 11078  10D2  00C9               	movwf	??_fround
 11079  10D3  01CA               	clrf	??_fround+1
 11080  10D4  0849               	movf	??_fround,w
 11081  10D5  00A2               	movwf	___awmod@dividend
 11082  10D6  084A               	movf	??_fround+1,w
 11083  10D7  00A3               	movwf	___awmod@dividend+1
 11084  10D8  300A               	movlw	10
 11085  10D9  00A0               	movwf	___awmod@divisor
 11086  10DA  3000               	movlw	0
 11087  10DB  00A1               	movwf	___awmod@divisor+1
 11088  10DC  31A2  2261  3190   	fcall	___awmod
 11089  10DF  0020               	movlb	0	; select bank0
 11090  10E0  0821               	movf	?___awmod+1,w
 11091  10E1  00B1               	movwf	___wmul@multiplier+1
 11092  10E2  0820               	movf	?___awmod,w
 11093  10E3  00B0               	movwf	___wmul@multiplier
 11094  10E4  3003               	movlw	3
 11095  10E5  00B2               	movwf	___wmul@multiplicand
 11096  10E6  3000               	movlw	0
 11097  10E7  00B3               	movwf	___wmul@multiplicand+1
 11098  10E8  31AC  24B9  3190   	fcall	___wmul
 11099  10EB  0020               	movlb	0	; select bank0
 11100  10EC  0831               	movf	?___wmul+1,w
 11101  10ED  0085               	movwf	5
 11102  10EE  0830               	movf	?___wmul,w
 11103  10EF  0084               	movwf	4
 11104  10F0  3028               	movlw	low (__npowers_| (0+32768))
 11105  10F1  0784               	addwf	4,f
 11106  10F2  30A0               	movlw	high (__npowers_| (0+32768))
 11107  10F3  3D85               	addwfc	5,f
 11108  10F4  3F00               	moviw [0]fsr0
 11109  10F5  00B6               	movwf	___ftmul@f1
 11110  10F6  3F01               	moviw [1]fsr0
 11111  10F7  00B7               	movwf	___ftmul@f1+1
 11112  10F8  3F02               	moviw [2]fsr0
 11113  10F9  00B8               	movwf	___ftmul@f1+2
 11114  10FA  0850               	movf	_fround$1910,w
 11115  10FB  00B9               	movwf	___ftmul@f2
 11116  10FC  0851               	movf	_fround$1910+1,w
 11117  10FD  00BA               	movwf	___ftmul@f2+1
 11118  10FE  0852               	movf	_fround$1910+2,w
 11119  10FF  00BB               	movwf	___ftmul@f2+2
 11120  1100  31A7  274C  3190   	fcall	___ftmul
 11121  1103  0020               	movlb	0	; select bank0
 11122  1104  0836               	movf	?___ftmul,w
 11123  1105  00CD               	movwf	_fround$1911
 11124  1106  0837               	movf	?___ftmul+1,w
 11125  1107  00CE               	movwf	_fround$1911+1
 11126  1108  0838               	movf	?___ftmul+2,w
 11127  1109  00CF               	movwf	_fround$1911+2
 11128                           
 11129                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11130  110A  3000               	movlw	0
 11131  110B  00B6               	movwf	___ftmul@f1
 11132  110C  3000               	movlw	0
 11133  110D  00B7               	movwf	___ftmul@f1+1
 11134  110E  303F               	movlw	63
 11135  110F  00B8               	movwf	___ftmul@f1+2
 11136  1110  084D               	movf	_fround$1911,w
 11137  1111  00B9               	movwf	___ftmul@f2
 11138  1112  084E               	movf	_fround$1911+1,w
 11139  1113  00BA               	movwf	___ftmul@f2+1
 11140  1114  084F               	movf	_fround$1911+2,w
 11141  1115  00BB               	movwf	___ftmul@f2+2
 11142  1116  31A7  274C         	fcall	___ftmul
 11143  1118  0020               	movlb	0	; select bank0
 11144  1119  0836               	movf	?___ftmul,w
 11145  111A  00C6               	movwf	?_fround
 11146  111B  0837               	movf	?___ftmul+1,w
 11147  111C  00C7               	movwf	?_fround+1
 11148  111D  0838               	movf	?___ftmul+2,w
 11149  111E  00C8               	movwf	?_fround+2
 11150  111F  0008               	return
 11151  1120                     l6420:	
 11152                           
 11153                           ;doprnt.c: 415: else if(prec > 10)
 11154  1120  300B               	movlw	11
 11155  1121  0253               	subwf	fround@prec,w
 11156  1122  1C03               	skipc
 11157  1123  2998               	goto	l6428
 11158                           
 11159                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11160  1124  0853               	movf	fround@prec,w
 11161  1125  00C9               	movwf	??_fround
 11162  1126  01CA               	clrf	??_fround+1
 11163  1127  0849               	movf	??_fround,w
 11164  1128  00A2               	movwf	___awmod@dividend
 11165  1129  084A               	movf	??_fround+1,w
 11166  112A  00A3               	movwf	___awmod@dividend+1
 11167  112B  300A               	movlw	10
 11168  112C  00A0               	movwf	___awmod@divisor
 11169  112D  3000               	movlw	0
 11170  112E  00A1               	movwf	___awmod@divisor+1
 11171  112F  31A2  2261  3190   	fcall	___awmod
 11172  1132  0020               	movlb	0	; select bank0
 11173  1133  0821               	movf	?___awmod+1,w
 11174  1134  00B1               	movwf	___wmul@multiplier+1
 11175  1135  0820               	movf	?___awmod,w
 11176  1136  00B0               	movwf	___wmul@multiplier
 11177  1137  3003               	movlw	3
 11178  1138  00B2               	movwf	___wmul@multiplicand
 11179  1139  3000               	movlw	0
 11180  113A  00B3               	movwf	___wmul@multiplicand+1
 11181  113B  31AC  24B9  3190   	fcall	___wmul
 11182  113E  0020               	movlb	0	; select bank0
 11183  113F  0831               	movf	?___wmul+1,w
 11184  1140  0085               	movwf	5
 11185  1141  0830               	movf	?___wmul,w
 11186  1142  0084               	movwf	4
 11187  1143  3028               	movlw	low (__npowers_| (0+32768))
 11188  1144  0784               	addwf	4,f
 11189  1145  30A0               	movlw	high (__npowers_| (0+32768))
 11190  1146  3D85               	addwfc	5,f
 11191  1147  3F00               	moviw [0]fsr0
 11192  1148  00B6               	movwf	___ftmul@f1
 11193  1149  3F01               	moviw [1]fsr0
 11194  114A  00B7               	movwf	___ftmul@f1+1
 11195  114B  3F02               	moviw [2]fsr0
 11196  114C  00B8               	movwf	___ftmul@f1+2
 11197  114D  300A               	movlw	10
 11198  114E  00A7               	movwf	___awdiv@divisor
 11199  114F  3000               	movlw	0
 11200  1150  00A8               	movwf	___awdiv@divisor+1
 11201  1151  0853               	movf	fround@prec,w
 11202  1152  00CB               	movwf	??_fround+2
 11203  1153  01CC               	clrf	??_fround+3
 11204  1154  084B               	movf	??_fround+2,w
 11205  1155  00A9               	movwf	___awdiv@dividend
 11206  1156  084C               	movf	??_fround+3,w
 11207  1157  00AA               	movwf	___awdiv@dividend+1
 11208  1158  31A2  22A7  3190   	fcall	___awdiv
 11209  115B  0020               	movlb	0	; select bank0
 11210  115C  0827               	movf	?___awdiv,w
 11211  115D  3E09               	addlw	9
 11212  115E  00B0               	movwf	___wmul@multiplier
 11213  115F  3000               	movlw	0
 11214  1160  3D28               	addwfc	?___awdiv+1,w
 11215  1161  00B1               	movwf	___wmul@multiplier+1
 11216  1162  3003               	movlw	3
 11217  1163  00B2               	movwf	___wmul@multiplicand
 11218  1164  3000               	movlw	0
 11219  1165  00B3               	movwf	___wmul@multiplicand+1
 11220  1166  31AC  24B9  3190   	fcall	___wmul
 11221  1169  0020               	movlb	0	; select bank0
 11222  116A  0831               	movf	?___wmul+1,w
 11223  116B  0085               	movwf	5
 11224  116C  0830               	movf	?___wmul,w
 11225  116D  0084               	movwf	4
 11226  116E  3028               	movlw	low (__npowers_| (0+32768))
 11227  116F  0784               	addwf	4,f
 11228  1170  30A0               	movlw	high (__npowers_| (0+32768))
 11229  1171  3D85               	addwfc	5,f
 11230  1172  3F00               	moviw [0]fsr0
 11231  1173  00B9               	movwf	___ftmul@f2
 11232  1174  3F01               	moviw [1]fsr0
 11233  1175  00BA               	movwf	___ftmul@f2+1
 11234  1176  3F02               	moviw [2]fsr0
 11235  1177  00BB               	movwf	___ftmul@f2+2
 11236  1178  31A7  274C  3190   	fcall	___ftmul
 11237  117B  0020               	movlb	0	; select bank0
 11238  117C  0836               	movf	?___ftmul,w
 11239  117D  00D0               	movwf	_fround$1910
 11240  117E  0837               	movf	?___ftmul+1,w
 11241  117F  00D1               	movwf	_fround$1910+1
 11242  1180  0838               	movf	?___ftmul+2,w
 11243  1181  00D2               	movwf	_fround$1910+2
 11244                           
 11245                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11246  1182  3000               	movlw	0
 11247  1183  00B6               	movwf	___ftmul@f1
 11248  1184  3000               	movlw	0
 11249  1185  00B7               	movwf	___ftmul@f1+1
 11250  1186  303F               	movlw	63
 11251  1187  00B8               	movwf	___ftmul@f1+2
 11252  1188  0850               	movf	_fround$1910,w
 11253  1189  00B9               	movwf	___ftmul@f2
 11254  118A  0851               	movf	_fround$1910+1,w
 11255  118B  00BA               	movwf	___ftmul@f2+1
 11256  118C  0852               	movf	_fround$1910+2,w
 11257  118D  00BB               	movwf	___ftmul@f2+2
 11258  118E  31A7  274C         	fcall	___ftmul
 11259  1190  0020               	movlb	0	; select bank0
 11260  1191  0836               	movf	?___ftmul,w
 11261  1192  00C6               	movwf	?_fround
 11262  1193  0837               	movf	?___ftmul+1,w
 11263  1194  00C7               	movwf	?_fround+1
 11264  1195  0838               	movf	?___ftmul+2,w
 11265  1196  00C8               	movwf	?_fround+2
 11266  1197  0008               	return
 11267  1198                     l6428:	
 11268                           
 11269                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 11270  1198  3000               	movlw	0
 11271  1199  00B6               	movwf	___ftmul@f1
 11272  119A  3000               	movlw	0
 11273  119B  00B7               	movwf	___ftmul@f1+1
 11274  119C  303F               	movlw	63
 11275  119D  00B8               	movwf	___ftmul@f1+2
 11276  119E  0853               	movf	fround@prec,w
 11277  119F  00C9               	movwf	??_fround
 11278  11A0  01CA               	clrf	??_fround+1
 11279  11A1  0849               	movf	??_fround,w
 11280  11A2  00B0               	movwf	___wmul@multiplier
 11281  11A3  084A               	movf	??_fround+1,w
 11282  11A4  00B1               	movwf	___wmul@multiplier+1
 11283  11A5  3003               	movlw	3
 11284  11A6  00B2               	movwf	___wmul@multiplicand
 11285  11A7  3000               	movlw	0
 11286  11A8  00B3               	movwf	___wmul@multiplicand+1
 11287  11A9  31AC  24B9  3190   	fcall	___wmul
 11288  11AC  0020               	movlb	0	; select bank0
 11289  11AD  0831               	movf	?___wmul+1,w
 11290  11AE  0085               	movwf	5
 11291  11AF  0830               	movf	?___wmul,w
 11292  11B0  0084               	movwf	4
 11293  11B1  3028               	movlw	low (__npowers_| (0+32768))
 11294  11B2  0784               	addwf	4,f
 11295  11B3  30A0               	movlw	high (__npowers_| (0+32768))
 11296  11B4  3D85               	addwfc	5,f
 11297  11B5  3F00               	moviw [0]fsr0
 11298  11B6  00B9               	movwf	___ftmul@f2
 11299  11B7  3F01               	moviw [1]fsr0
 11300  11B8  00BA               	movwf	___ftmul@f2+1
 11301  11B9  3F02               	moviw [2]fsr0
 11302  11BA  00BB               	movwf	___ftmul@f2+2
 11303  11BB  31A7  274C         	fcall	___ftmul
 11304  11BD  0020               	movlb	0	; select bank0
 11305  11BE  0836               	movf	?___ftmul,w
 11306  11BF  00C6               	movwf	?_fround
 11307  11C0  0837               	movf	?___ftmul+1,w
 11308  11C1  00C7               	movwf	?_fround+1
 11309  11C2  0838               	movf	?___ftmul+2,w
 11310  11C3  00C8               	movwf	?_fround+2
 11311  11C4  0008               	return
 11312  11C5                     __end_of_fround:	
 11313                           
 11314                           	psect	text4
 11315  2261                     __ptext4:	
 11316 ;; *************** function ___awmod *****************
 11317 ;; Defined at:
 11318 ;;		line 6 in file "/opt/microchip/xc8/v1.35/sources/common/awmod.c"
 11319 ;; Parameters:    Size  Location     Type
 11320 ;;  divisor         2    0[BANK0 ] int 
 11321 ;;  dividend        2    2[BANK0 ] int 
 11322 ;; Auto vars:     Size  Location     Type
 11323 ;;  sign            1    6[BANK0 ] unsigned char 
 11324 ;;  counter         1    5[BANK0 ] unsigned char 
 11325 ;; Return value:  Size  Location     Type
 11326 ;;                  2    0[BANK0 ] int 
 11327 ;; Registers used:
 11328 ;;		wreg, status,2, status,0
 11329 ;; Tracked objects:
 11330 ;;		On entry : 0/0
 11331 ;;		On exit  : 0/0
 11332 ;;		Unchanged: 0/0
 11333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11334 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11335 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11336 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11337 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11338 ;;Total ram usage:        7 bytes
 11339 ;; Hardware stack levels used:    1
 11340 ;; Hardware stack levels required when called:    5
 11341 ;; This function calls:
 11342 ;;		Nothing
 11343 ;; This function is called by:
 11344 ;;		_fround
 11345 ;;		_scale
 11346 ;; This function uses a non-reentrant model
 11347 ;;
 11348                           
 11349                           
 11350                           ;psect for function ___awmod
 11351  2261                     ___awmod:	
 11352                           
 11353                           ;incstack = 0
 11354                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11355  2261  0020               	movlb	0	; select bank0
 11356  2262  01A6               	clrf	___awmod@sign
 11357  2263  1FA3               	btfss	___awmod@dividend+1,7
 11358  2264  2A6C               	goto	l6138
 11359  2265  09A2               	comf	___awmod@dividend,f
 11360  2266  09A3               	comf	___awmod@dividend+1,f
 11361  2267  0AA2               	incf	___awmod@dividend,f
 11362  2268  1903               	skipnz
 11363  2269  0AA3               	incf	___awmod@dividend+1,f
 11364  226A  01A6               	clrf	___awmod@sign
 11365  226B  0AA6               	incf	___awmod@sign,f
 11366  226C                     l6138:	
 11367  226C  1FA1               	btfss	___awmod@divisor+1,7
 11368  226D  2A73               	goto	l6142
 11369  226E  09A0               	comf	___awmod@divisor,f
 11370  226F  09A1               	comf	___awmod@divisor+1,f
 11371  2270  0AA0               	incf	___awmod@divisor,f
 11372  2271  1903               	skipnz
 11373  2272  0AA1               	incf	___awmod@divisor+1,f
 11374  2273                     l6142:	
 11375  2273  0820               	movf	___awmod@divisor,w
 11376  2274  0421               	iorwf	___awmod@divisor+1,w
 11377  2275  1903               	btfsc	3,2
 11378  2276  2A9A               	goto	l6160
 11379  2277  01A5               	clrf	___awmod@counter
 11380  2278  0AA5               	incf	___awmod@counter,f
 11381  2279                     l6150:	
 11382  2279  1BA1               	btfsc	___awmod@divisor+1,7
 11383  227A  2A85               	goto	l6152
 11384  227B  3001               	movlw	1
 11385  227C                     u7825:	
 11386  227C  35A0               	lslf	___awmod@divisor,f
 11387  227D  0DA1               	rlf	___awmod@divisor+1,f
 11388  227E  0B89               	decfsz	9,f
 11389  227F  2A7C               	goto	u7825
 11390  2280  3001               	movlw	1
 11391  2281  00A4               	movwf	??___awmod
 11392  2282  0824               	movf	??___awmod,w
 11393  2283  07A5               	addwf	___awmod@counter,f
 11394  2284  2A79               	goto	l6150
 11395  2285                     l6152:	
 11396  2285  0821               	movf	___awmod@divisor+1,w
 11397  2286  0223               	subwf	___awmod@dividend+1,w
 11398  2287  1D03               	skipz
 11399  2288  2A8B               	goto	u7845
 11400  2289  0820               	movf	___awmod@divisor,w
 11401  228A  0222               	subwf	___awmod@dividend,w
 11402  228B                     u7845:	
 11403  228B  1C03               	skipc
 11404  228C  2A91               	goto	l6156
 11405  228D  0820               	movf	___awmod@divisor,w
 11406  228E  02A2               	subwf	___awmod@dividend,f
 11407  228F  0821               	movf	___awmod@divisor+1,w
 11408  2290  3BA3               	subwfb	___awmod@dividend+1,f
 11409  2291                     l6156:	
 11410  2291  3001               	movlw	1
 11411  2292                     u7855:	
 11412  2292  36A1               	lsrf	___awmod@divisor+1,f
 11413  2293  0CA0               	rrf	___awmod@divisor,f
 11414  2294  0B89               	decfsz	9,f
 11415  2295  2A92               	goto	u7855
 11416  2296  3001               	movlw	1
 11417  2297  02A5               	subwf	___awmod@counter,f
 11418  2298  1D03               	btfss	3,2
 11419  2299  2A85               	goto	l6152
 11420  229A                     l6160:	
 11421  229A  0826               	movf	___awmod@sign,w
 11422  229B  1903               	btfsc	3,2
 11423  229C  2AA2               	goto	l6164
 11424  229D  09A2               	comf	___awmod@dividend,f
 11425  229E  09A3               	comf	___awmod@dividend+1,f
 11426  229F  0AA2               	incf	___awmod@dividend,f
 11427  22A0  1903               	skipnz
 11428  22A1  0AA3               	incf	___awmod@dividend+1,f
 11429  22A2                     l6164:	
 11430  22A2  0823               	movf	___awmod@dividend+1,w
 11431  22A3  00A1               	movwf	?___awmod+1
 11432  22A4  0822               	movf	___awmod@dividend,w
 11433  22A5  00A0               	movwf	?___awmod
 11434  22A6  0008               	return
 11435  22A7                     __end_of___awmod:	
 11436                           
 11437                           	psect	text5
 11438  22A7                     __ptext5:	
 11439 ;; *************** function ___awdiv *****************
 11440 ;; Defined at:
 11441 ;;		line 6 in file "/opt/microchip/xc8/v1.35/sources/common/awdiv.c"
 11442 ;; Parameters:    Size  Location     Type
 11443 ;;  divisor         2    7[BANK0 ] int 
 11444 ;;  dividend        2    9[BANK0 ] int 
 11445 ;; Auto vars:     Size  Location     Type
 11446 ;;  quotient        2   14[BANK0 ] int 
 11447 ;;  sign            1   13[BANK0 ] unsigned char 
 11448 ;;  counter         1   12[BANK0 ] unsigned char 
 11449 ;; Return value:  Size  Location     Type
 11450 ;;                  2    7[BANK0 ] int 
 11451 ;; Registers used:
 11452 ;;		wreg, status,2, status,0
 11453 ;; Tracked objects:
 11454 ;;		On entry : 0/0
 11455 ;;		On exit  : 0/0
 11456 ;;		Unchanged: 0/0
 11457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11458 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11459 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11460 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11461 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11462 ;;Total ram usage:        9 bytes
 11463 ;; Hardware stack levels used:    1
 11464 ;; Hardware stack levels required when called:    5
 11465 ;; This function calls:
 11466 ;;		Nothing
 11467 ;; This function is called by:
 11468 ;;		_fround
 11469 ;;		_scale
 11470 ;;		_sprintf
 11471 ;; This function uses a non-reentrant model
 11472 ;;
 11473                           
 11474                           
 11475                           ;psect for function ___awdiv
 11476  22A7                     ___awdiv:	
 11477                           
 11478                           ;incstack = 0
 11479                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11480  22A7  0020               	movlb	0	; select bank0
 11481  22A8  01AD               	clrf	___awdiv@sign
 11482  22A9  1FA8               	btfss	___awdiv@divisor+1,7
 11483  22AA  2AB2               	goto	l6094
 11484  22AB  09A7               	comf	___awdiv@divisor,f
 11485  22AC  09A8               	comf	___awdiv@divisor+1,f
 11486  22AD  0AA7               	incf	___awdiv@divisor,f
 11487  22AE  1903               	skipnz
 11488  22AF  0AA8               	incf	___awdiv@divisor+1,f
 11489  22B0  01AD               	clrf	___awdiv@sign
 11490  22B1  0AAD               	incf	___awdiv@sign,f
 11491  22B2                     l6094:	
 11492  22B2  1FAA               	btfss	___awdiv@dividend+1,7
 11493  22B3  2ABD               	goto	l6100
 11494  22B4  09A9               	comf	___awdiv@dividend,f
 11495  22B5  09AA               	comf	___awdiv@dividend+1,f
 11496  22B6  0AA9               	incf	___awdiv@dividend,f
 11497  22B7  1903               	skipnz
 11498  22B8  0AAA               	incf	___awdiv@dividend+1,f
 11499  22B9  3001               	movlw	1
 11500  22BA  00AB               	movwf	??___awdiv
 11501  22BB  082B               	movf	??___awdiv,w
 11502  22BC  06AD               	xorwf	___awdiv@sign,f
 11503  22BD                     l6100:	
 11504  22BD  01AE               	clrf	___awdiv@quotient
 11505  22BE  01AF               	clrf	___awdiv@quotient+1
 11506  22BF  0827               	movf	___awdiv@divisor,w
 11507  22C0  0428               	iorwf	___awdiv@divisor+1,w
 11508  22C1  1903               	btfsc	3,2
 11509  22C2  2AEC               	goto	l6122
 11510  22C3  01AC               	clrf	___awdiv@counter
 11511  22C4  0AAC               	incf	___awdiv@counter,f
 11512  22C5                     l6110:	
 11513  22C5  1BA8               	btfsc	___awdiv@divisor+1,7
 11514  22C6  2AD1               	goto	l6112
 11515  22C7  3001               	movlw	1
 11516  22C8                     u7725:	
 11517  22C8  35A7               	lslf	___awdiv@divisor,f
 11518  22C9  0DA8               	rlf	___awdiv@divisor+1,f
 11519  22CA  0B89               	decfsz	9,f
 11520  22CB  2AC8               	goto	u7725
 11521  22CC  3001               	movlw	1
 11522  22CD  00AB               	movwf	??___awdiv
 11523  22CE  082B               	movf	??___awdiv,w
 11524  22CF  07AC               	addwf	___awdiv@counter,f
 11525  22D0  2AC5               	goto	l6110
 11526  22D1                     l6112:	
 11527  22D1  3001               	movlw	1
 11528  22D2                     u7745:	
 11529  22D2  35AE               	lslf	___awdiv@quotient,f
 11530  22D3  0DAF               	rlf	___awdiv@quotient+1,f
 11531  22D4  0B89               	decfsz	9,f
 11532  22D5  2AD2               	goto	u7745
 11533  22D6  0828               	movf	___awdiv@divisor+1,w
 11534  22D7  022A               	subwf	___awdiv@dividend+1,w
 11535  22D8  1D03               	skipz
 11536  22D9  2ADC               	goto	u7755
 11537  22DA  0827               	movf	___awdiv@divisor,w
 11538  22DB  0229               	subwf	___awdiv@dividend,w
 11539  22DC                     u7755:	
 11540  22DC  1C03               	skipc
 11541  22DD  2AE3               	goto	l6118
 11542  22DE  0827               	movf	___awdiv@divisor,w
 11543  22DF  02A9               	subwf	___awdiv@dividend,f
 11544  22E0  0828               	movf	___awdiv@divisor+1,w
 11545  22E1  3BAA               	subwfb	___awdiv@dividend+1,f
 11546  22E2  142E               	bsf	___awdiv@quotient,0
 11547  22E3                     l6118:	
 11548  22E3  3001               	movlw	1
 11549  22E4                     u7765:	
 11550  22E4  36A8               	lsrf	___awdiv@divisor+1,f
 11551  22E5  0CA7               	rrf	___awdiv@divisor,f
 11552  22E6  0B89               	decfsz	9,f
 11553  22E7  2AE4               	goto	u7765
 11554  22E8  3001               	movlw	1
 11555  22E9  02AC               	subwf	___awdiv@counter,f
 11556  22EA  1D03               	btfss	3,2
 11557  22EB  2AD1               	goto	l6112
 11558  22EC                     l6122:	
 11559  22EC  082D               	movf	___awdiv@sign,w
 11560  22ED  1903               	btfsc	3,2
 11561  22EE  2AF4               	goto	l6126
 11562  22EF  09AE               	comf	___awdiv@quotient,f
 11563  22F0  09AF               	comf	___awdiv@quotient+1,f
 11564  22F1  0AAE               	incf	___awdiv@quotient,f
 11565  22F2  1903               	skipnz
 11566  22F3  0AAF               	incf	___awdiv@quotient+1,f
 11567  22F4                     l6126:	
 11568  22F4  082F               	movf	___awdiv@quotient+1,w
 11569  22F5  00A8               	movwf	?___awdiv+1
 11570  22F6  082E               	movf	___awdiv@quotient,w
 11571  22F7  00A7               	movwf	?___awdiv
 11572  22F8  0008               	return
 11573  22F9                     __end_of___awdiv:	
 11574                           
 11575                           	psect	text6
 11576  180C                     __ptext6:	
 11577 ;; *************** function __tdiv_to_l_ *****************
 11578 ;; Defined at:
 11579 ;;		line 60 in file "/opt/microchip/xc8/v1.35/sources/common/ftdivl.c"
 11580 ;; Parameters:    Size  Location     Type
 11581 ;;  f1              3    0[BANK0 ] float 
 11582 ;;  f2              3    3[BANK0 ] float 
 11583 ;; Auto vars:     Size  Location     Type
 11584 ;;  quot            4   10[BANK0 ] unsigned long 
 11585 ;;  exp1            1   15[BANK0 ] unsigned char 
 11586 ;;  cntr            1   14[BANK0 ] unsigned char 
 11587 ;; Return value:  Size  Location     Type
 11588 ;;                  4    0[BANK0 ] unsigned long 
 11589 ;; Registers used:
 11590 ;;		wreg, status,2, status,0
 11591 ;; Tracked objects:
 11592 ;;		On entry : 0/0
 11593 ;;		On exit  : 0/0
 11594 ;;		Unchanged: 0/0
 11595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11596 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11597 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11598 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11599 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11600 ;;Total ram usage:       16 bytes
 11601 ;; Hardware stack levels used:    1
 11602 ;; Hardware stack levels required when called:    5
 11603 ;; This function calls:
 11604 ;;		Nothing
 11605 ;; This function is called by:
 11606 ;;		_sprintf
 11607 ;; This function uses a non-reentrant model
 11608 ;;
 11609                           
 11610                           
 11611                           ;psect for function __tdiv_to_l_
 11612  180C                     __tdiv_to_l_:	
 11613                           
 11614                           ;incstack = 0
 11615                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
 11616  180C  0020               	movlb	0	; select bank0
 11617  180D  0820               	movf	__tdiv_to_l_@f1,w
 11618  180E  00A6               	movwf	??__tdiv_to_l_
 11619  180F  0821               	movf	__tdiv_to_l_@f1+1,w
 11620  1810  00A7               	movwf	??__tdiv_to_l_+1
 11621  1811  0822               	movf	__tdiv_to_l_@f1+2,w
 11622  1812  00A8               	movwf	??__tdiv_to_l_+2
 11623  1813  1003               	clrc
 11624  1814  0D27               	rlf	??__tdiv_to_l_+1,w
 11625  1815  0D28               	rlf	??__tdiv_to_l_+2,w
 11626  1816  00A9               	movwf	??__tdiv_to_l_+3
 11627  1817  0829               	movf	??__tdiv_to_l_+3,w
 11628  1818  00AF               	movwf	__tdiv_to_l_@exp1
 11629  1819  082F               	movf	__tdiv_to_l_@exp1,w
 11630  181A  1D03               	btfss	3,2
 11631  181B  2825               	goto	l4634
 11632  181C  3000               	movlw	0
 11633  181D  00A3               	movwf	?__tdiv_to_l_+3
 11634  181E  3000               	movlw	0
 11635  181F  00A2               	movwf	?__tdiv_to_l_+2
 11636  1820  3000               	movlw	0
 11637  1821  00A1               	movwf	?__tdiv_to_l_+1
 11638  1822  3000               	movlw	0
 11639  1823  00A0               	movwf	?__tdiv_to_l_
 11640  1824  0008               	return
 11641  1825                     l4634:	
 11642  1825  0823               	movf	__tdiv_to_l_@f2,w
 11643  1826  00A6               	movwf	??__tdiv_to_l_
 11644  1827  0824               	movf	__tdiv_to_l_@f2+1,w
 11645  1828  00A7               	movwf	??__tdiv_to_l_+1
 11646  1829  0825               	movf	__tdiv_to_l_@f2+2,w
 11647  182A  00A8               	movwf	??__tdiv_to_l_+2
 11648  182B  1003               	clrc
 11649  182C  0D27               	rlf	??__tdiv_to_l_+1,w
 11650  182D  0D28               	rlf	??__tdiv_to_l_+2,w
 11651  182E  00A9               	movwf	??__tdiv_to_l_+3
 11652  182F  0829               	movf	??__tdiv_to_l_+3,w
 11653  1830  00AE               	movwf	__tdiv_to_l_@cntr
 11654  1831  082E               	movf	__tdiv_to_l_@cntr,w
 11655  1832  1D03               	btfss	3,2
 11656  1833  283D               	goto	l1223
 11657  1834  3000               	movlw	0
 11658  1835  00A3               	movwf	?__tdiv_to_l_+3
 11659  1836  3000               	movlw	0
 11660  1837  00A2               	movwf	?__tdiv_to_l_+2
 11661  1838  3000               	movlw	0
 11662  1839  00A1               	movwf	?__tdiv_to_l_+1
 11663  183A  3000               	movlw	0
 11664  183B  00A0               	movwf	?__tdiv_to_l_
 11665  183C  0008               	return
 11666  183D                     l1223:	
 11667  183D  17A1               	bsf	__tdiv_to_l_@f1+1,7
 11668  183E  30FF               	movlw	255
 11669  183F  05A0               	andwf	__tdiv_to_l_@f1,f
 11670  1840  30FF               	movlw	255
 11671  1841  05A1               	andwf	__tdiv_to_l_@f1+1,f
 11672  1842  3000               	movlw	0
 11673  1843  05A2               	andwf	__tdiv_to_l_@f1+2,f
 11674  1844  17A4               	bsf	__tdiv_to_l_@f2+1,7
 11675  1845  30FF               	movlw	255
 11676  1846  05A3               	andwf	__tdiv_to_l_@f2,f
 11677  1847  30FF               	movlw	255
 11678  1848  05A4               	andwf	__tdiv_to_l_@f2+1,f
 11679  1849  3000               	movlw	0
 11680  184A  05A5               	andwf	__tdiv_to_l_@f2+2,f
 11681  184B  3000               	movlw	0
 11682  184C  00AD               	movwf	__tdiv_to_l_@quot+3
 11683  184D  3000               	movlw	0
 11684  184E  00AC               	movwf	__tdiv_to_l_@quot+2
 11685  184F  3000               	movlw	0
 11686  1850  00AB               	movwf	__tdiv_to_l_@quot+1
 11687  1851  3000               	movlw	0
 11688  1852  00AA               	movwf	__tdiv_to_l_@quot
 11689  1853  307F               	movlw	127
 11690  1854  02AF               	subwf	__tdiv_to_l_@exp1,f
 11691  1855  3098               	movlw	152
 11692  1856  072E               	addwf	__tdiv_to_l_@cntr,w
 11693  1857  00A6               	movwf	??__tdiv_to_l_
 11694  1858  0826               	movf	??__tdiv_to_l_,w
 11695  1859  02AF               	subwf	__tdiv_to_l_@exp1,f
 11696  185A  3018               	movlw	24
 11697  185B  00A6               	movwf	??__tdiv_to_l_
 11698  185C  0826               	movf	??__tdiv_to_l_,w
 11699  185D  00AE               	movwf	__tdiv_to_l_@cntr
 11700  185E                     l4648:	
 11701  185E  3001               	movlw	1
 11702  185F                     u5135:	
 11703  185F  35AA               	lslf	__tdiv_to_l_@quot,f
 11704  1860  0DAB               	rlf	__tdiv_to_l_@quot+1,f
 11705  1861  0DAC               	rlf	__tdiv_to_l_@quot+2,f
 11706  1862  0DAD               	rlf	__tdiv_to_l_@quot+3,f
 11707  1863  0B89               	decfsz	9,f
 11708  1864  285F               	goto	u5135
 11709  1865  0825               	movf	__tdiv_to_l_@f2+2,w
 11710  1866  0222               	subwf	__tdiv_to_l_@f1+2,w
 11711  1867  1D03               	skipz
 11712  1868  286F               	goto	u5145
 11713  1869  0824               	movf	__tdiv_to_l_@f2+1,w
 11714  186A  0221               	subwf	__tdiv_to_l_@f1+1,w
 11715  186B  1D03               	skipz
 11716  186C  286F               	goto	u5145
 11717  186D  0823               	movf	__tdiv_to_l_@f2,w
 11718  186E  0220               	subwf	__tdiv_to_l_@f1,w
 11719  186F                     u5145:	
 11720  186F  1C03               	skipc
 11721  1870  2878               	goto	l4656
 11722  1871  0823               	movf	__tdiv_to_l_@f2,w
 11723  1872  02A0               	subwf	__tdiv_to_l_@f1,f
 11724  1873  0824               	movf	__tdiv_to_l_@f2+1,w
 11725  1874  3BA1               	subwfb	__tdiv_to_l_@f1+1,f
 11726  1875  0825               	movf	__tdiv_to_l_@f2+2,w
 11727  1876  3BA2               	subwfb	__tdiv_to_l_@f1+2,f
 11728  1877  142A               	bsf	__tdiv_to_l_@quot,0
 11729  1878                     l4656:	
 11730  1878  3001               	movlw	1
 11731  1879                     u5155:	
 11732  1879  35A0               	lslf	__tdiv_to_l_@f1,f
 11733  187A  0DA1               	rlf	__tdiv_to_l_@f1+1,f
 11734  187B  0DA2               	rlf	__tdiv_to_l_@f1+2,f
 11735  187C  0B89               	decfsz	9,f
 11736  187D  2879               	goto	u5155
 11737  187E  3001               	movlw	1
 11738  187F  02AE               	subwf	__tdiv_to_l_@cntr,f
 11739  1880  1D03               	btfss	3,2
 11740  1881  285E               	goto	l4648
 11741  1882  1FAF               	btfss	__tdiv_to_l_@exp1,7
 11742  1883  28A0               	goto	l4668
 11743  1884  082F               	movf	__tdiv_to_l_@exp1,w
 11744  1885  3A80               	xorlw	128
 11745  1886  3E97               	addlw	151
 11746  1887  1803               	skipnc
 11747  1888  2892               	goto	l4666
 11748  1889  3000               	movlw	0
 11749  188A  00A3               	movwf	?__tdiv_to_l_+3
 11750  188B  3000               	movlw	0
 11751  188C  00A2               	movwf	?__tdiv_to_l_+2
 11752  188D  3000               	movlw	0
 11753  188E  00A1               	movwf	?__tdiv_to_l_+1
 11754  188F  3000               	movlw	0
 11755  1890  00A0               	movwf	?__tdiv_to_l_
 11756  1891  0008               	return
 11757  1892                     l4666:	
 11758  1892  3001               	movlw	1
 11759  1893                     u5195:	
 11760  1893  36AD               	lsrf	__tdiv_to_l_@quot+3,f
 11761  1894  0CAC               	rrf	__tdiv_to_l_@quot+2,f
 11762  1895  0CAB               	rrf	__tdiv_to_l_@quot+1,f
 11763  1896  0CAA               	rrf	__tdiv_to_l_@quot,f
 11764  1897  0B89               	decfsz	9,f
 11765  1898  2893               	goto	u5195
 11766  1899  3001               	movlw	1
 11767  189A  00A6               	movwf	??__tdiv_to_l_
 11768  189B  0826               	movf	??__tdiv_to_l_,w
 11769  189C  07AF               	addwf	__tdiv_to_l_@exp1,f
 11770  189D  1903               	btfsc	3,2
 11771  189E  28B9               	goto	l4676
 11772  189F  2892               	goto	l4666
 11773  18A0                     l4668:	
 11774  18A0  3018               	movlw	24
 11775  18A1  022F               	subwf	__tdiv_to_l_@exp1,w
 11776  18A2  1C03               	skipc
 11777  18A3  28B6               	goto	l1233
 11778  18A4  3000               	movlw	0
 11779  18A5  00A3               	movwf	?__tdiv_to_l_+3
 11780  18A6  3000               	movlw	0
 11781  18A7  00A2               	movwf	?__tdiv_to_l_+2
 11782  18A8  3000               	movlw	0
 11783  18A9  00A1               	movwf	?__tdiv_to_l_+1
 11784  18AA  3000               	movlw	0
 11785  18AB  00A0               	movwf	?__tdiv_to_l_
 11786  18AC  0008               	return
 11787  18AD                     l4674:	
 11788  18AD  3001               	movlw	1
 11789  18AE                     u5225:	
 11790  18AE  35AA               	lslf	__tdiv_to_l_@quot,f
 11791  18AF  0DAB               	rlf	__tdiv_to_l_@quot+1,f
 11792  18B0  0DAC               	rlf	__tdiv_to_l_@quot+2,f
 11793  18B1  0DAD               	rlf	__tdiv_to_l_@quot+3,f
 11794  18B2  0B89               	decfsz	9,f
 11795  18B3  28AE               	goto	u5225
 11796  18B4  3001               	movlw	1
 11797  18B5  02AF               	subwf	__tdiv_to_l_@exp1,f
 11798  18B6                     l1233:	
 11799  18B6  082F               	movf	__tdiv_to_l_@exp1,w
 11800  18B7  1D03               	btfss	3,2
 11801  18B8  28AD               	goto	l4674
 11802  18B9                     l4676:	
 11803  18B9  082D               	movf	__tdiv_to_l_@quot+3,w
 11804  18BA  00A3               	movwf	?__tdiv_to_l_+3
 11805  18BB  082C               	movf	__tdiv_to_l_@quot+2,w
 11806  18BC  00A2               	movwf	?__tdiv_to_l_+2
 11807  18BD  082B               	movf	__tdiv_to_l_@quot+1,w
 11808  18BE  00A1               	movwf	?__tdiv_to_l_+1
 11809  18BF  082A               	movf	__tdiv_to_l_@quot,w
 11810  18C0  00A0               	movwf	?__tdiv_to_l_
 11811  18C1  0008               	return
 11812  18C2                     __end_of__tdiv_to_l_:	
 11813                           
 11814                           	psect	text7
 11815  19B8                     __ptext7:	
 11816 ;; *************** function __div_to_l_ *****************
 11817 ;; Defined at:
 11818 ;;		line 60 in file "/opt/microchip/xc8/v1.35/sources/common/fldivl.c"
 11819 ;; Parameters:    Size  Location     Type
 11820 ;;  f1              3    0[BANK0 ] unsigned long 
 11821 ;;  f2              3    3[BANK0 ] unsigned long 
 11822 ;; Auto vars:     Size  Location     Type
 11823 ;;  quot            4   14[BANK0 ] unsigned long 
 11824 ;;  exp1            1   19[BANK0 ] unsigned char 
 11825 ;;  cntr            1   18[BANK0 ] unsigned char 
 11826 ;; Return value:  Size  Location     Type
 11827 ;;                  4    0[BANK0 ] unsigned long 
 11828 ;; Registers used:
 11829 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11830 ;; Tracked objects:
 11831 ;;		On entry : 0/0
 11832 ;;		On exit  : 0/0
 11833 ;;		Unchanged: 0/0
 11834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11835 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11836 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11837 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11838 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11839 ;;Total ram usage:       20 bytes
 11840 ;; Hardware stack levels used:    1
 11841 ;; Hardware stack levels required when called:    5
 11842 ;; This function calls:
 11843 ;;		Nothing
 11844 ;; This function is called by:
 11845 ;;		_sprintf
 11846 ;; This function uses a non-reentrant model
 11847 ;;
 11848                           
 11849                           
 11850                           ;psect for function __div_to_l_
 11851  19B8                     __div_to_l_:	
 11852                           
 11853                           ;incstack = 0
 11854                           ; Regs used in __div_to_l_: [wreg+fsr1l+fsr1h+status,2+status,0]
 11855  19B8  3020               	movlw	low (__div_to_l_@f1| 0)
 11856  19B9  0086               	movwf	6
 11857  19BA  0187               	clrf	7
 11858  19BB  3F40               	moviw [0]fsr1
 11859  19BC  0020               	movlb	0	; select bank0
 11860  19BD  00A6               	movwf	??__div_to_l_
 11861  19BE  3F41               	moviw [1]fsr1
 11862  19BF  00A7               	movwf	??__div_to_l_+1
 11863  19C0  3F42               	moviw [2]fsr1
 11864  19C1  00A8               	movwf	??__div_to_l_+2
 11865  19C2  3F43               	moviw [3]fsr1
 11866  19C3  00A9               	movwf	??__div_to_l_+3
 11867  19C4  1003               	clrc
 11868  19C5  0D28               	rlf	??__div_to_l_+2,w
 11869  19C6  0D29               	rlf	??__div_to_l_+3,w
 11870  19C7  00AA               	movwf	??__div_to_l_+4
 11871  19C8  082A               	movf	??__div_to_l_+4,w
 11872  19C9  00B3               	movwf	__div_to_l_@exp1
 11873  19CA  0833               	movf	__div_to_l_@exp1,w
 11874  19CB  1D03               	btfss	3,2
 11875  19CC  29D6               	goto	l4686
 11876  19CD  3000               	movlw	0
 11877  19CE  00A3               	movwf	?__div_to_l_+3
 11878  19CF  3000               	movlw	0
 11879  19D0  00A2               	movwf	?__div_to_l_+2
 11880  19D1  3000               	movlw	0
 11881  19D2  00A1               	movwf	?__div_to_l_+1
 11882  19D3  3000               	movlw	0
 11883  19D4  00A0               	movwf	?__div_to_l_
 11884  19D5  0008               	return
 11885  19D6                     l4686:	
 11886  19D6  3023               	movlw	low (__div_to_l_@f2| 0)
 11887  19D7  0086               	movwf	6
 11888  19D8  0187               	clrf	7
 11889  19D9  3F40               	moviw [0]fsr1
 11890  19DA  00A6               	movwf	??__div_to_l_
 11891  19DB  3F41               	moviw [1]fsr1
 11892  19DC  00A7               	movwf	??__div_to_l_+1
 11893  19DD  3F42               	moviw [2]fsr1
 11894  19DE  00A8               	movwf	??__div_to_l_+2
 11895  19DF  3F43               	moviw [3]fsr1
 11896  19E0  00A9               	movwf	??__div_to_l_+3
 11897  19E1  1003               	clrc
 11898  19E2  0D28               	rlf	??__div_to_l_+2,w
 11899  19E3  0D29               	rlf	??__div_to_l_+3,w
 11900  19E4  00AA               	movwf	??__div_to_l_+4
 11901  19E5  082A               	movf	??__div_to_l_+4,w
 11902  19E6  00B2               	movwf	__div_to_l_@cntr
 11903  19E7  0832               	movf	__div_to_l_@cntr,w
 11904  19E8  1D03               	btfss	3,2
 11905  19E9  29F3               	goto	l4692
 11906  19EA  3000               	movlw	0
 11907  19EB  00A3               	movwf	?__div_to_l_+3
 11908  19EC  3000               	movlw	0
 11909  19ED  00A2               	movwf	?__div_to_l_+2
 11910  19EE  3000               	movlw	0
 11911  19EF  00A1               	movwf	?__div_to_l_+1
 11912  19F0  3000               	movlw	0
 11913  19F1  00A0               	movwf	?__div_to_l_
 11914  19F2  0008               	return
 11915  19F3                     l4692:	
 11916  19F3  3020               	movlw	low (__div_to_l_@f1| 0)
 11917  19F4  0086               	movwf	6
 11918  19F5  0187               	clrf	7
 11919  19F6  3000               	movlw	0
 11920  19F7  0481               	iorwf	1,f
 11921  19F8  3141               	addfsr 1,1
 11922  19F9  3000               	movlw	0
 11923  19FA  0481               	iorwf	1,f
 11924  19FB  3141               	addfsr 1,1
 11925  19FC  3080               	movlw	128
 11926  19FD  0481               	iorwf	1,f
 11927  19FE  3141               	addfsr 1,1
 11928  19FF  3000               	movlw	0
 11929  1A00  0481               	iorwf	1,f
 11930  1A01  3020               	movlw	low (__div_to_l_@f1| 0)
 11931  1A02  0086               	movwf	6
 11932  1A03  0187               	clrf	7
 11933  1A04  30FF               	movlw	255
 11934  1A05  0581               	andwf	1,f
 11935  1A06  3141               	addfsr 1,1
 11936  1A07  30FF               	movlw	255
 11937  1A08  0581               	andwf	1,f
 11938  1A09  3141               	addfsr 1,1
 11939  1A0A  30FF               	movlw	255
 11940  1A0B  0581               	andwf	1,f
 11941  1A0C  3141               	addfsr 1,1
 11942  1A0D  3000               	movlw	0
 11943  1A0E  0581               	andwf	1,f
 11944  1A0F  3023               	movlw	low (__div_to_l_@f2| 0)
 11945  1A10  0086               	movwf	6
 11946  1A11  0187               	clrf	7
 11947  1A12  3000               	movlw	0
 11948  1A13  0481               	iorwf	1,f
 11949  1A14  3141               	addfsr 1,1
 11950  1A15  3000               	movlw	0
 11951  1A16  0481               	iorwf	1,f
 11952  1A17  3141               	addfsr 1,1
 11953  1A18  3080               	movlw	128
 11954  1A19  0481               	iorwf	1,f
 11955  1A1A  3141               	addfsr 1,1
 11956  1A1B  3000               	movlw	0
 11957  1A1C  0481               	iorwf	1,f
 11958  1A1D  3023               	movlw	low (__div_to_l_@f2| 0)
 11959  1A1E  0086               	movwf	6
 11960  1A1F  0187               	clrf	7
 11961  1A20  30FF               	movlw	255
 11962  1A21  0581               	andwf	1,f
 11963  1A22  3141               	addfsr 1,1
 11964  1A23  30FF               	movlw	255
 11965  1A24  0581               	andwf	1,f
 11966  1A25  3141               	addfsr 1,1
 11967  1A26  30FF               	movlw	255
 11968  1A27  0581               	andwf	1,f
 11969  1A28  3141               	addfsr 1,1
 11970  1A29  3000               	movlw	0
 11971  1A2A  0581               	andwf	1,f
 11972  1A2B  3000               	movlw	0
 11973  1A2C  00B1               	movwf	__div_to_l_@quot+3
 11974  1A2D  3000               	movlw	0
 11975  1A2E  00B0               	movwf	__div_to_l_@quot+2
 11976  1A2F  3000               	movlw	0
 11977  1A30  00AF               	movwf	__div_to_l_@quot+1
 11978  1A31  3000               	movlw	0
 11979  1A32  00AE               	movwf	__div_to_l_@quot
 11980  1A33  307F               	movlw	127
 11981  1A34  02B3               	subwf	__div_to_l_@exp1,f
 11982  1A35  30A0               	movlw	160
 11983  1A36  0732               	addwf	__div_to_l_@cntr,w
 11984  1A37  00A6               	movwf	??__div_to_l_
 11985  1A38  0826               	movf	??__div_to_l_,w
 11986  1A39  02B3               	subwf	__div_to_l_@exp1,f
 11987  1A3A  3020               	movlw	32
 11988  1A3B  00A6               	movwf	??__div_to_l_
 11989  1A3C  0826               	movf	??__div_to_l_,w
 11990  1A3D  00B2               	movwf	__div_to_l_@cntr
 11991  1A3E                     l4702:	
 11992  1A3E  3001               	movlw	1
 11993  1A3F                     u5265:	
 11994  1A3F  35AE               	lslf	__div_to_l_@quot,f
 11995  1A40  0DAF               	rlf	__div_to_l_@quot+1,f
 11996  1A41  0DB0               	rlf	__div_to_l_@quot+2,f
 11997  1A42  0DB1               	rlf	__div_to_l_@quot+3,f
 11998  1A43  0B89               	decfsz	9,f
 11999  1A44  2A3F               	goto	u5265
 12000  1A45  3023               	movlw	low (__div_to_l_@f2| 0)
 12001  1A46  0086               	movwf	6
 12002  1A47  0187               	clrf	7
 12003  1A48  3F40               	moviw [0]fsr1
 12004  1A49  00A6               	movwf	??__div_to_l_
 12005  1A4A  3F41               	moviw [1]fsr1
 12006  1A4B  00A7               	movwf	??__div_to_l_+1
 12007  1A4C  3F42               	moviw [2]fsr1
 12008  1A4D  00A8               	movwf	??__div_to_l_+2
 12009  1A4E  3F43               	moviw [3]fsr1
 12010  1A4F  00A9               	movwf	??__div_to_l_+3
 12011  1A50  3020               	movlw	low (__div_to_l_@f1| 0)
 12012  1A51  0086               	movwf	6
 12013  1A52  0187               	clrf	7
 12014  1A53  3F40               	moviw [0]fsr1
 12015  1A54  00AA               	movwf	??__div_to_l_+4
 12016  1A55  3F41               	moviw [1]fsr1
 12017  1A56  00AB               	movwf	??__div_to_l_+5
 12018  1A57  3F42               	moviw [2]fsr1
 12019  1A58  00AC               	movwf	??__div_to_l_+6
 12020  1A59  3F43               	moviw [3]fsr1
 12021  1A5A  00AD               	movwf	??__div_to_l_+7
 12022  1A5B  0829               	movf	??__div_to_l_+3,w
 12023  1A5C  022D               	subwf	??__div_to_l_+7,w
 12024  1A5D  1D03               	skipz
 12025  1A5E  2A69               	goto	u5275
 12026  1A5F  0828               	movf	??__div_to_l_+2,w
 12027  1A60  022C               	subwf	??__div_to_l_+6,w
 12028  1A61  1D03               	skipz
 12029  1A62  2A69               	goto	u5275
 12030  1A63  0827               	movf	??__div_to_l_+1,w
 12031  1A64  022B               	subwf	??__div_to_l_+5,w
 12032  1A65  1D03               	skipz
 12033  1A66  2A69               	goto	u5275
 12034  1A67  0826               	movf	??__div_to_l_,w
 12035  1A68  022A               	subwf	??__div_to_l_+4,w
 12036  1A69                     u5275:	
 12037  1A69  1C03               	skipc
 12038  1A6A  2A86               	goto	l4710
 12039  1A6B  3023               	movlw	low (__div_to_l_@f2| 0)
 12040  1A6C  0086               	movwf	6
 12041  1A6D  0187               	clrf	7
 12042  1A6E  3F40               	moviw [0]fsr1
 12043  1A6F  00A6               	movwf	??__div_to_l_
 12044  1A70  3F41               	moviw [1]fsr1
 12045  1A71  00A7               	movwf	??__div_to_l_+1
 12046  1A72  3F42               	moviw [2]fsr1
 12047  1A73  00A8               	movwf	??__div_to_l_+2
 12048  1A74  3F43               	moviw [3]fsr1
 12049  1A75  00A9               	movwf	??__div_to_l_+3
 12050  1A76  3020               	movlw	low (__div_to_l_@f1| 0)
 12051  1A77  0086               	movwf	6
 12052  1A78  0187               	clrf	7
 12053  1A79  0826               	movf	??__div_to_l_,w
 12054  1A7A  0281               	subwf	1,f
 12055  1A7B  3141               	addfsr 1,1
 12056  1A7C  0827               	movf	??__div_to_l_+1,w
 12057  1A7D  3B81               	subwfb	1,f
 12058  1A7E  3141               	addfsr 1,1
 12059  1A7F  0828               	movf	??__div_to_l_+2,w
 12060  1A80  3B81               	subwfb	1,f
 12061  1A81  3141               	addfsr 1,1
 12062  1A82  0829               	movf	??__div_to_l_+3,w
 12063  1A83  3B81               	subwfb	1,f
 12064  1A84  317D               	addfsr 1,-3
 12065  1A85  142E               	bsf	__div_to_l_@quot,0
 12066  1A86                     l4710:	
 12067  1A86  3020               	movlw	low (__div_to_l_@f1| 0)
 12068  1A87  0086               	movwf	6
 12069  1A88  0187               	clrf	7
 12070  1A89  3581               	lslf	1,f
 12071  1A8A  3141               	addfsr 1,1
 12072  1A8B  0D81               	rlf	1,f
 12073  1A8C  3141               	addfsr 1,1
 12074  1A8D  0D81               	rlf	1,f
 12075  1A8E  3141               	addfsr 1,1
 12076  1A8F  0D81               	rlf	1,f
 12077  1A90  317D               	addfsr 1,-3
 12078  1A91  3001               	movlw	1
 12079  1A92  02B2               	subwf	__div_to_l_@cntr,f
 12080  1A93  1D03               	btfss	3,2
 12081  1A94  2A3E               	goto	l4702
 12082  1A95  1FB3               	btfss	__div_to_l_@exp1,7
 12083  1A96  2AB3               	goto	l4722
 12084  1A97  0833               	movf	__div_to_l_@exp1,w
 12085  1A98  3A80               	xorlw	128
 12086  1A99  3E9F               	addlw	159
 12087  1A9A  1803               	skipnc
 12088  1A9B  2AA5               	goto	l4720
 12089  1A9C  3000               	movlw	0
 12090  1A9D  00A3               	movwf	?__div_to_l_+3
 12091  1A9E  3000               	movlw	0
 12092  1A9F  00A2               	movwf	?__div_to_l_+2
 12093  1AA0  3000               	movlw	0
 12094  1AA1  00A1               	movwf	?__div_to_l_+1
 12095  1AA2  3000               	movlw	0
 12096  1AA3  00A0               	movwf	?__div_to_l_
 12097  1AA4  0008               	return
 12098  1AA5                     l4720:	
 12099  1AA5  3001               	movlw	1
 12100  1AA6                     u5315:	
 12101  1AA6  36B1               	lsrf	__div_to_l_@quot+3,f
 12102  1AA7  0CB0               	rrf	__div_to_l_@quot+2,f
 12103  1AA8  0CAF               	rrf	__div_to_l_@quot+1,f
 12104  1AA9  0CAE               	rrf	__div_to_l_@quot,f
 12105  1AAA  0B89               	decfsz	9,f
 12106  1AAB  2AA6               	goto	u5315
 12107  1AAC  3001               	movlw	1
 12108  1AAD  00A6               	movwf	??__div_to_l_
 12109  1AAE  0826               	movf	??__div_to_l_,w
 12110  1AAF  07B3               	addwf	__div_to_l_@exp1,f
 12111  1AB0  1903               	btfsc	3,2
 12112  1AB1  2ACC               	goto	l4730
 12113  1AB2  2AA5               	goto	l4720
 12114  1AB3                     l4722:	
 12115  1AB3  3020               	movlw	32
 12116  1AB4  0233               	subwf	__div_to_l_@exp1,w
 12117  1AB5  1C03               	skipc
 12118  1AB6  2AC9               	goto	l1149
 12119  1AB7  3000               	movlw	0
 12120  1AB8  00A3               	movwf	?__div_to_l_+3
 12121  1AB9  3000               	movlw	0
 12122  1ABA  00A2               	movwf	?__div_to_l_+2
 12123  1ABB  3000               	movlw	0
 12124  1ABC  00A1               	movwf	?__div_to_l_+1
 12125  1ABD  3000               	movlw	0
 12126  1ABE  00A0               	movwf	?__div_to_l_
 12127  1ABF  0008               	return
 12128  1AC0                     l4728:	
 12129  1AC0  3001               	movlw	1
 12130  1AC1                     u5345:	
 12131  1AC1  35AE               	lslf	__div_to_l_@quot,f
 12132  1AC2  0DAF               	rlf	__div_to_l_@quot+1,f
 12133  1AC3  0DB0               	rlf	__div_to_l_@quot+2,f
 12134  1AC4  0DB1               	rlf	__div_to_l_@quot+3,f
 12135  1AC5  0B89               	decfsz	9,f
 12136  1AC6  2AC1               	goto	u5345
 12137  1AC7  3001               	movlw	1
 12138  1AC8  02B3               	subwf	__div_to_l_@exp1,f
 12139  1AC9                     l1149:	
 12140  1AC9  0833               	movf	__div_to_l_@exp1,w
 12141  1ACA  1D03               	btfss	3,2
 12142  1ACB  2AC0               	goto	l4728
 12143  1ACC                     l4730:	
 12144  1ACC  0831               	movf	__div_to_l_@quot+3,w
 12145  1ACD  00A3               	movwf	?__div_to_l_+3
 12146  1ACE  0830               	movf	__div_to_l_@quot+2,w
 12147  1ACF  00A2               	movwf	?__div_to_l_+2
 12148  1AD0  082F               	movf	__div_to_l_@quot+1,w
 12149  1AD1  00A1               	movwf	?__div_to_l_+1
 12150  1AD2  082E               	movf	__div_to_l_@quot,w
 12151  1AD3  00A0               	movwf	?__div_to_l_
 12152  1AD4  0008               	return
 12153  1AD5                     __end_of__div_to_l_:	
 12154                           
 12155                           	psect	text8
 12156  2E2D                     __ptext8:	
 12157 ;; *************** function ___lltoft *****************
 12158 ;; Defined at:
 12159 ;;		line 35 in file "/opt/microchip/xc8/v1.35/sources/common/lltoft.c"
 12160 ;; Parameters:    Size  Location     Type
 12161 ;;  c               4    8[BANK0 ] unsigned long 
 12162 ;; Auto vars:     Size  Location     Type
 12163 ;;  exp             1   13[BANK0 ] unsigned char 
 12164 ;; Return value:  Size  Location     Type
 12165 ;;                  3    8[BANK0 ] float 
 12166 ;; Registers used:
 12167 ;;		wreg, status,2, status,0, pclath, cstack
 12168 ;; Tracked objects:
 12169 ;;		On entry : 0/0
 12170 ;;		On exit  : 0/0
 12171 ;;		Unchanged: 0/0
 12172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12173 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12174 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12175 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12176 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12177 ;;Total ram usage:        6 bytes
 12178 ;; Hardware stack levels used:    1
 12179 ;; Hardware stack levels required when called:    6
 12180 ;; This function calls:
 12181 ;;		___ftpack
 12182 ;; This function is called by:
 12183 ;;		_sprintf
 12184 ;; This function uses a non-reentrant model
 12185 ;;
 12186                           
 12187                           
 12188                           ;psect for function ___lltoft
 12189  2E2D                     ___lltoft:	
 12190                           
 12191                           ;incstack = 0
 12192                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
 12193  2E2D  308E               	movlw	142
 12194  2E2E  0020               	movlb	0	; select bank0
 12195  2E2F  00AC               	movwf	??___lltoft
 12196  2E30  082C               	movf	??___lltoft,w
 12197  2E31  00AD               	movwf	___lltoft@exp
 12198  2E32                     l6714:	
 12199  2E32  30FF               	movlw	255
 12200  2E33  052B               	andwf	___lltoft@c+3,w
 12201  2E34  1903               	btfsc	3,2
 12202  2E35  2E42               	goto	l6716
 12203  2E36  3001               	movlw	1
 12204  2E37                     u8565:	
 12205  2E37  36AB               	lsrf	___lltoft@c+3,f
 12206  2E38  0CAA               	rrf	___lltoft@c+2,f
 12207  2E39  0CA9               	rrf	___lltoft@c+1,f
 12208  2E3A  0CA8               	rrf	___lltoft@c,f
 12209  2E3B  0B89               	decfsz	9,f
 12210  2E3C  2E37               	goto	u8565
 12211  2E3D  3001               	movlw	1
 12212  2E3E  00AC               	movwf	??___lltoft
 12213  2E3F  082C               	movf	??___lltoft,w
 12214  2E40  07AD               	addwf	___lltoft@exp,f
 12215  2E41  2E32               	goto	l6714
 12216  2E42                     l6716:	
 12217  2E42  0828               	movf	___lltoft@c,w
 12218  2E43  00A0               	movwf	___ftpack@arg
 12219  2E44  0829               	movf	___lltoft@c+1,w
 12220  2E45  00A1               	movwf	___ftpack@arg+1
 12221  2E46  082A               	movf	___lltoft@c+2,w
 12222  2E47  00A2               	movwf	___ftpack@arg+2
 12223  2E48  082D               	movf	___lltoft@exp,w
 12224  2E49  00AC               	movwf	??___lltoft
 12225  2E4A  082C               	movf	??___lltoft,w
 12226  2E4B  00A3               	movwf	___ftpack@exp
 12227  2E4C  01A4               	clrf	___ftpack@sign
 12228  2E4D  31A3  23B9         	fcall	___ftpack
 12229  2E4F  0020               	movlb	0	; select bank0
 12230  2E50  0820               	movf	?___ftpack,w
 12231  2E51  00A8               	movwf	?___lltoft
 12232  2E52  0821               	movf	?___ftpack+1,w
 12233  2E53  00A9               	movwf	?___lltoft+1
 12234  2E54  0822               	movf	?___ftpack+2,w
 12235  2E55  00AA               	movwf	?___lltoft+2
 12236  2E56  0008               	return
 12237  2E57                     __end_of___lltoft:	
 12238                           
 12239                           	psect	text9
 12240  221E                     __ptext9:	
 12241 ;; *************** function ___llmod *****************
 12242 ;; Defined at:
 12243 ;;		line 6 in file "/opt/microchip/xc8/v1.35/sources/common/llmod.c"
 12244 ;; Parameters:    Size  Location     Type
 12245 ;;  divisor         4    0[BANK0 ] unsigned long 
 12246 ;;  dividend        4    4[BANK0 ] unsigned long 
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;  counter         1    9[BANK0 ] unsigned char 
 12249 ;; Return value:  Size  Location     Type
 12250 ;;                  4    0[BANK0 ] unsigned long 
 12251 ;; Registers used:
 12252 ;;		wreg, status,2, status,0
 12253 ;; Tracked objects:
 12254 ;;		On entry : 0/0
 12255 ;;		On exit  : 0/0
 12256 ;;		Unchanged: 0/0
 12257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12258 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12259 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12260 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12261 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12262 ;;Total ram usage:       10 bytes
 12263 ;; Hardware stack levels used:    1
 12264 ;; Hardware stack levels required when called:    5
 12265 ;; This function calls:
 12266 ;;		Nothing
 12267 ;; This function is called by:
 12268 ;;		_sprintf
 12269 ;; This function uses a non-reentrant model
 12270 ;;
 12271                           
 12272                           
 12273                           ;psect for function ___llmod
 12274  221E                     ___llmod:	
 12275                           
 12276                           ;incstack = 0
 12277                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 12278  221E  0020               	movlb	0	; select bank0
 12279  221F  0823               	movf	___llmod@divisor+3,w
 12280  2220  0422               	iorwf	___llmod@divisor+2,w
 12281  2221  0421               	iorwf	___llmod@divisor+1,w
 12282  2222  0420               	iorwf	___llmod@divisor,w
 12283  2223  1903               	skipnz
 12284  2224  2A58               	goto	l6706
 12285  2225  01A9               	clrf	___llmod@counter
 12286  2226  0AA9               	incf	___llmod@counter,f
 12287  2227                     l6696:	
 12288  2227  1BA3               	btfsc	___llmod@divisor+3,7
 12289  2228  2A35               	goto	l6698
 12290  2229  3001               	movlw	1
 12291  222A                     u8515:	
 12292  222A  35A0               	lslf	___llmod@divisor,f
 12293  222B  0DA1               	rlf	___llmod@divisor+1,f
 12294  222C  0DA2               	rlf	___llmod@divisor+2,f
 12295  222D  0DA3               	rlf	___llmod@divisor+3,f
 12296  222E  0B89               	decfsz	9,f
 12297  222F  2A2A               	goto	u8515
 12298  2230  3001               	movlw	1
 12299  2231  00A8               	movwf	??___llmod
 12300  2232  0828               	movf	??___llmod,w
 12301  2233  07A9               	addwf	___llmod@counter,f
 12302  2234  2A27               	goto	l6696
 12303  2235                     l6698:	
 12304  2235  0823               	movf	___llmod@divisor+3,w
 12305  2236  0227               	subwf	___llmod@dividend+3,w
 12306  2237  1D03               	skipz
 12307  2238  2A43               	goto	u8535
 12308  2239  0822               	movf	___llmod@divisor+2,w
 12309  223A  0226               	subwf	___llmod@dividend+2,w
 12310  223B  1D03               	skipz
 12311  223C  2A43               	goto	u8535
 12312  223D  0821               	movf	___llmod@divisor+1,w
 12313  223E  0225               	subwf	___llmod@dividend+1,w
 12314  223F  1D03               	skipz
 12315  2240  2A43               	goto	u8535
 12316  2241  0820               	movf	___llmod@divisor,w
 12317  2242  0224               	subwf	___llmod@dividend,w
 12318  2243                     u8535:	
 12319  2243  1C03               	skipc
 12320  2244  2A4D               	goto	l6702
 12321  2245  0820               	movf	___llmod@divisor,w
 12322  2246  02A4               	subwf	___llmod@dividend,f
 12323  2247  0821               	movf	___llmod@divisor+1,w
 12324  2248  3BA5               	subwfb	___llmod@dividend+1,f
 12325  2249  0822               	movf	___llmod@divisor+2,w
 12326  224A  3BA6               	subwfb	___llmod@dividend+2,f
 12327  224B  0823               	movf	___llmod@divisor+3,w
 12328  224C  3BA7               	subwfb	___llmod@dividend+3,f
 12329  224D                     l6702:	
 12330  224D  3001               	movlw	1
 12331  224E                     u8545:	
 12332  224E  36A3               	lsrf	___llmod@divisor+3,f
 12333  224F  0CA2               	rrf	___llmod@divisor+2,f
 12334  2250  0CA1               	rrf	___llmod@divisor+1,f
 12335  2251  0CA0               	rrf	___llmod@divisor,f
 12336  2252  0B89               	decfsz	9,f
 12337  2253  2A4E               	goto	u8545
 12338  2254  3001               	movlw	1
 12339  2255  02A9               	subwf	___llmod@counter,f
 12340  2256  1D03               	btfss	3,2
 12341  2257  2A35               	goto	l6698
 12342  2258                     l6706:	
 12343  2258  0827               	movf	___llmod@dividend+3,w
 12344  2259  00A3               	movwf	?___llmod+3
 12345  225A  0826               	movf	___llmod@dividend+2,w
 12346  225B  00A2               	movwf	?___llmod+2
 12347  225C  0825               	movf	___llmod@dividend+1,w
 12348  225D  00A1               	movwf	?___llmod+1
 12349  225E  0824               	movf	___llmod@dividend,w
 12350  225F  00A0               	movwf	?___llmod
 12351  2260  0008               	return
 12352  2261                     __end_of___llmod:	
 12353                           
 12354                           	psect	text10
 12355  100C                     __ptext10:	
 12356 ;; *************** function ___lldiv *****************
 12357 ;; Defined at:
 12358 ;;		line 6 in file "/opt/microchip/xc8/v1.35/sources/common/lldiv.c"
 12359 ;; Parameters:    Size  Location     Type
 12360 ;;  divisor         4    0[BANK0 ] unsigned long 
 12361 ;;  dividend        4    4[BANK0 ] unsigned long 
 12362 ;; Auto vars:     Size  Location     Type
 12363 ;;  quotient        4    9[BANK0 ] unsigned long 
 12364 ;;  counter         1   13[BANK0 ] unsigned char 
 12365 ;; Return value:  Size  Location     Type
 12366 ;;                  4    0[BANK0 ] unsigned long 
 12367 ;; Registers used:
 12368 ;;		wreg, status,2, status,0
 12369 ;; Tracked objects:
 12370 ;;		On entry : 0/0
 12371 ;;		On exit  : 0/0
 12372 ;;		Unchanged: 0/0
 12373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12374 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12375 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12376 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12377 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12378 ;;Total ram usage:       14 bytes
 12379 ;; Hardware stack levels used:    1
 12380 ;; Hardware stack levels required when called:    5
 12381 ;; This function calls:
 12382 ;;		Nothing
 12383 ;; This function is called by:
 12384 ;;		_sprintf
 12385 ;; This function uses a non-reentrant model
 12386 ;;
 12387                           
 12388                           
 12389                           ;psect for function ___lldiv
 12390  100C                     ___lldiv:	
 12391                           
 12392                           ;incstack = 0
 12393                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 12394  100C  3000               	movlw	0
 12395  100D  0020               	movlb	0	; select bank0
 12396  100E  00AC               	movwf	___lldiv@quotient+3
 12397  100F  3000               	movlw	0
 12398  1010  00AB               	movwf	___lldiv@quotient+2
 12399  1011  3000               	movlw	0
 12400  1012  00AA               	movwf	___lldiv@quotient+1
 12401  1013  3000               	movlw	0
 12402  1014  00A9               	movwf	___lldiv@quotient
 12403  1015  0823               	movf	___lldiv@divisor+3,w
 12404  1016  0422               	iorwf	___lldiv@divisor+2,w
 12405  1017  0421               	iorwf	___lldiv@divisor+1,w
 12406  1018  0420               	iorwf	___lldiv@divisor,w
 12407  1019  1903               	skipnz
 12408  101A  2856               	goto	l6686
 12409  101B  01AD               	clrf	___lldiv@counter
 12410  101C  0AAD               	incf	___lldiv@counter,f
 12411  101D                     l6672:	
 12412  101D  1BA3               	btfsc	___lldiv@divisor+3,7
 12413  101E  282B               	goto	l6674
 12414  101F  3001               	movlw	1
 12415  1020                     u8445:	
 12416  1020  35A0               	lslf	___lldiv@divisor,f
 12417  1021  0DA1               	rlf	___lldiv@divisor+1,f
 12418  1022  0DA2               	rlf	___lldiv@divisor+2,f
 12419  1023  0DA3               	rlf	___lldiv@divisor+3,f
 12420  1024  0B89               	decfsz	9,f
 12421  1025  2820               	goto	u8445
 12422  1026  3001               	movlw	1
 12423  1027  00A8               	movwf	??___lldiv
 12424  1028  0828               	movf	??___lldiv,w
 12425  1029  07AD               	addwf	___lldiv@counter,f
 12426  102A  281D               	goto	l6672
 12427  102B                     l6674:	
 12428  102B  3001               	movlw	1
 12429  102C                     u8465:	
 12430  102C  35A9               	lslf	___lldiv@quotient,f
 12431  102D  0DAA               	rlf	___lldiv@quotient+1,f
 12432  102E  0DAB               	rlf	___lldiv@quotient+2,f
 12433  102F  0DAC               	rlf	___lldiv@quotient+3,f
 12434  1030  0B89               	decfsz	9,f
 12435  1031  282C               	goto	u8465
 12436  1032  0823               	movf	___lldiv@divisor+3,w
 12437  1033  0227               	subwf	___lldiv@dividend+3,w
 12438  1034  1D03               	skipz
 12439  1035  2840               	goto	u8475
 12440  1036  0822               	movf	___lldiv@divisor+2,w
 12441  1037  0226               	subwf	___lldiv@dividend+2,w
 12442  1038  1D03               	skipz
 12443  1039  2840               	goto	u8475
 12444  103A  0821               	movf	___lldiv@divisor+1,w
 12445  103B  0225               	subwf	___lldiv@dividend+1,w
 12446  103C  1D03               	skipz
 12447  103D  2840               	goto	u8475
 12448  103E  0820               	movf	___lldiv@divisor,w
 12449  103F  0224               	subwf	___lldiv@dividend,w
 12450  1040                     u8475:	
 12451  1040  1C03               	skipc
 12452  1041  284B               	goto	l6682
 12453  1042  0820               	movf	___lldiv@divisor,w
 12454  1043  02A4               	subwf	___lldiv@dividend,f
 12455  1044  0821               	movf	___lldiv@divisor+1,w
 12456  1045  3BA5               	subwfb	___lldiv@dividend+1,f
 12457  1046  0822               	movf	___lldiv@divisor+2,w
 12458  1047  3BA6               	subwfb	___lldiv@dividend+2,f
 12459  1048  0823               	movf	___lldiv@divisor+3,w
 12460  1049  3BA7               	subwfb	___lldiv@dividend+3,f
 12461  104A  1429               	bsf	___lldiv@quotient,0
 12462  104B                     l6682:	
 12463  104B  3001               	movlw	1
 12464  104C                     u8485:	
 12465  104C  36A3               	lsrf	___lldiv@divisor+3,f
 12466  104D  0CA2               	rrf	___lldiv@divisor+2,f
 12467  104E  0CA1               	rrf	___lldiv@divisor+1,f
 12468  104F  0CA0               	rrf	___lldiv@divisor,f
 12469  1050  0B89               	decfsz	9,f
 12470  1051  284C               	goto	u8485
 12471  1052  3001               	movlw	1
 12472  1053  02AD               	subwf	___lldiv@counter,f
 12473  1054  1D03               	btfss	3,2
 12474  1055  282B               	goto	l6674
 12475  1056                     l6686:	
 12476  1056  082C               	movf	___lldiv@quotient+3,w
 12477  1057  00A3               	movwf	?___lldiv+3
 12478  1058  082B               	movf	___lldiv@quotient+2,w
 12479  1059  00A2               	movwf	?___lldiv+2
 12480  105A  082A               	movf	___lldiv@quotient+1,w
 12481  105B  00A1               	movwf	?___lldiv+1
 12482  105C  0829               	movf	___lldiv@quotient,w
 12483  105D  00A0               	movwf	?___lldiv
 12484  105E  0008               	return
 12485  105F                     __end_of___lldiv:	
 12486                           
 12487                           	psect	text11
 12488  2BCA                     __ptext11:	
 12489 ;; *************** function _serial_puts_ROM *****************
 12490 ;; Defined at:
 12491 ;;		line 197 in file "serial.c"
 12492 ;; Parameters:    Size  Location     Type
 12493 ;;  P               2    2[BANK0 ] PTR const unsigned char 
 12494 ;;		 -> STR_9(2), STR_1(14), 
 12495 ;; Auto vars:     Size  Location     Type
 12496 ;;		None
 12497 ;; Return value:  Size  Location     Type
 12498 ;;		None               void
 12499 ;; Registers used:
 12500 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12501 ;; Tracked objects:
 12502 ;;		On entry : 0/0
 12503 ;;		On exit  : 0/0
 12504 ;;		Unchanged: 0/0
 12505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12506 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12508 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12509 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12510 ;;Total ram usage:        3 bytes
 12511 ;; Hardware stack levels used:    1
 12512 ;; Hardware stack levels required when called:    6
 12513 ;; This function calls:
 12514 ;;		_EUSART_Write
 12515 ;; This function is called by:
 12516 ;;		_main
 12517 ;; This function uses a non-reentrant model
 12518 ;;
 12519                           
 12520                           
 12521                           ;psect for function _serial_puts_ROM
 12522  2BCA                     _serial_puts_ROM:	
 12523  2BCA                     l446:	
 12524                           ;incstack = 0
 12525                           ; Regs used in _serial_puts_ROM: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12526                           ;serial.c: 199: do {
 12527                           
 12528                           
 12529                           ;serial.c: 200: EUSART_Write(*P++);
 12530  2BCA  0020               	movlb	0	; select bank0
 12531  2BCB  0822               	movf	serial_puts_ROM@P,w
 12532  2BCC  0084               	movwf	4
 12533  2BCD  0823               	movf	serial_puts_ROM@P+1,w
 12534  2BCE  0085               	movwf	5
 12535  2BCF  0800               	movf	0,w	;code access
 12536  2BD0  31AD  25B9  31AB   	fcall	_EUSART_Write
 12537  2BD3  3001               	movlw	1
 12538  2BD4  0020               	movlb	0	; select bank0
 12539  2BD5  07A2               	addwf	serial_puts_ROM@P,f
 12540  2BD6  3000               	movlw	0
 12541  2BD7  3DA3               	addwfc	serial_puts_ROM@P+1,f
 12542                           
 12543                           ;serial.c: 201: }
 12544                           ;serial.c: 202: while(*P != 0x00);
 12545  2BD8  0822               	movf	serial_puts_ROM@P,w
 12546  2BD9  0084               	movwf	4
 12547  2BDA  0823               	movf	serial_puts_ROM@P+1,w
 12548  2BDB  0085               	movwf	5
 12549  2BDC  0012               	moviw fsr0++
 12550  2BDD  1903               	btfsc	3,2
 12551  2BDE  0008               	return
 12552  2BDF  2BCA               	goto	l446
 12553  2BE0                     __end_of_serial_puts_ROM:	
 12554                           
 12555                           	psect	text12
 12556  2BB4                     __ptext12:	
 12557 ;; *************** function _serial_puts_RAM *****************
 12558 ;; Defined at:
 12559 ;;		line 189 in file "serial.c"
 12560 ;; Parameters:    Size  Location     Type
 12561 ;;  P               2    2[BANK0 ] PTR unsigned char 
 12562 ;;		 -> line(100), 
 12563 ;; Auto vars:     Size  Location     Type
 12564 ;;		None
 12565 ;; Return value:  Size  Location     Type
 12566 ;;		None               void
 12567 ;; Registers used:
 12568 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12569 ;; Tracked objects:
 12570 ;;		On entry : 0/0
 12571 ;;		On exit  : 0/0
 12572 ;;		Unchanged: 0/0
 12573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12574 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12577 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12578 ;;Total ram usage:        2 bytes
 12579 ;; Hardware stack levels used:    1
 12580 ;; Hardware stack levels required when called:    6
 12581 ;; This function calls:
 12582 ;;		_EUSART_Write
 12583 ;; This function is called by:
 12584 ;;		_main
 12585 ;; This function uses a non-reentrant model
 12586 ;;
 12587                           
 12588                           
 12589                           ;psect for function _serial_puts_RAM
 12590  2BB4                     _serial_puts_RAM:	
 12591  2BB4                     l441:	
 12592                           ;incstack = 0
 12593                           ; Regs used in _serial_puts_RAM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12594                           ;serial.c: 191: do {
 12595                           
 12596                           
 12597                           ;serial.c: 192: EUSART_Write(*P++);
 12598  2BB4  0020               	movlb	0	; select bank0
 12599  2BB5  0822               	movf	serial_puts_RAM@P,w
 12600  2BB6  0086               	movwf	6
 12601  2BB7  0823               	movf	serial_puts_RAM@P+1,w
 12602  2BB8  0087               	movwf	7
 12603  2BB9  0801               	movf	1,w
 12604  2BBA  31AD  25B9  31AB   	fcall	_EUSART_Write
 12605  2BBD  3001               	movlw	1
 12606  2BBE  0020               	movlb	0	; select bank0
 12607  2BBF  07A2               	addwf	serial_puts_RAM@P,f
 12608  2BC0  3000               	movlw	0
 12609  2BC1  3DA3               	addwfc	serial_puts_RAM@P+1,f
 12610                           
 12611                           ;serial.c: 193: }
 12612                           ;serial.c: 194: while(*P != 0x00);
 12613  2BC2  0822               	movf	serial_puts_RAM@P,w
 12614  2BC3  0086               	movwf	6
 12615  2BC4  0823               	movf	serial_puts_RAM@P+1,w
 12616  2BC5  0087               	movwf	7
 12617  2BC6  0801               	movf	1,w
 12618  2BC7  1903               	btfsc	3,2
 12619  2BC8  0008               	return
 12620  2BC9  2BB4               	goto	l441
 12621  2BCA                     __end_of_serial_puts_RAM:	
 12622                           
 12623                           	psect	text13
 12624  2DB9                     __ptext13:	
 12625 ;; *************** function _EUSART_Write *****************
 12626 ;; Defined at:
 12627 ;;		line 130 in file "mcc_generated_files/eusart.c"
 12628 ;; Parameters:    Size  Location     Type
 12629 ;;  txData          1    wreg     unsigned char 
 12630 ;; Auto vars:     Size  Location     Type
 12631 ;;  txData          1    1[BANK0 ] unsigned char 
 12632 ;; Return value:  Size  Location     Type
 12633 ;;		None               void
 12634 ;; Registers used:
 12635 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12636 ;; Tracked objects:
 12637 ;;		On entry : 0/0
 12638 ;;		On exit  : 0/0
 12639 ;;		Unchanged: 0/0
 12640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12642 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12643 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12644 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12645 ;;Total ram usage:        2 bytes
 12646 ;; Hardware stack levels used:    1
 12647 ;; Hardware stack levels required when called:    5
 12648 ;; This function calls:
 12649 ;;		Nothing
 12650 ;; This function is called by:
 12651 ;;		_serial_puts_RAM
 12652 ;;		_serial_puts_ROM
 12653 ;; This function uses a non-reentrant model
 12654 ;;
 12655                           
 12656                           
 12657                           ;psect for function _EUSART_Write
 12658  2DB9                     _EUSART_Write:	
 12659                           
 12660                           ;incstack = 0
 12661                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 12662                           ;EUSART_Write@txData stored from wreg
 12663  2DB9  0020               	movlb	0	; select bank0
 12664  2DBA  00A1               	movwf	EUSART_Write@txData
 12665  2DBB                     l6230:	
 12666                           ;eusart.c: 131: while (0 == eusartTxBufferRemaining) {
 12667                           
 12668  2DBB  0021               	movlb	1	; select bank1
 12669  2DBC  0868               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 12670  2DBD  1903               	btfsc	3,2
 12671  2DBE  2DBB               	goto	l6230
 12672                           
 12673                           ;eusart.c: 132: }
 12674                           ;eusart.c: 134: if (0 == PIE1bits.TXIE) {
 12675  2DBF  1A11               	btfsc	17,4	;volatile
 12676  2DC0  2DC6               	goto	l165
 12677                           
 12678                           ;eusart.c: 135: TX1REG = txData;
 12679  2DC1  0020               	movlb	0	; select bank0
 12680  2DC2  0821               	movf	EUSART_Write@txData,w
 12681  2DC3  0023               	movlb	3	; select bank3
 12682  2DC4  009A               	movwf	26	;volatile
 12683                           
 12684                           ;eusart.c: 136: } else {
 12685  2DC5  2DDC               	goto	l6244
 12686  2DC6                     l165:	
 12687                           
 12688                           ;eusart.c: 137: PIE1bits.TXIE = 0;
 12689  2DC6  1211               	bcf	17,4	;volatile
 12690                           
 12691                           ;eusart.c: 138: eusartTxBuffer[eusartTxHead++] = txData;
 12692  2DC7  0020               	movlb	0	; select bank0
 12693  2DC8  0821               	movf	EUSART_Write@txData,w
 12694  2DC9  00A0               	movwf	??_EUSART_Write
 12695  2DCA  0879               	movf	_eusartTxHead,w
 12696  2DCB  3EC6               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 12697  2DCC  0086               	movwf	6
 12698  2DCD  3001               	movlw	1	; select bank3/4
 12699  2DCE  0087               	movwf	7
 12700  2DCF  0820               	movf	??_EUSART_Write,w
 12701  2DD0  0081               	movwf	1
 12702  2DD1  3001               	movlw	1
 12703  2DD2  00A0               	movwf	??_EUSART_Write
 12704  2DD3  0820               	movf	??_EUSART_Write,w
 12705  2DD4  07F9               	addwf	_eusartTxHead,f
 12706                           
 12707                           ;eusart.c: 139: if (sizeof (eusartTxBuffer) <= eusartTxHead) {
 12708  2DD5  3008               	movlw	8
 12709  2DD6  0279               	subwf	_eusartTxHead,w
 12710  2DD7  1803               	btfsc	3,0
 12711                           
 12712                           ;eusart.c: 140: eusartTxHead = 0;
 12713  2DD8  01F9               	clrf	_eusartTxHead
 12714                           
 12715                           ;eusart.c: 141: }
 12716                           ;eusart.c: 142: eusartTxBufferRemaining--;
 12717  2DD9  3001               	movlw	1
 12718  2DDA  0021               	movlb	1	; select bank1
 12719  2DDB  02E8               	subwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 12720  2DDC                     l6244:	
 12721                           
 12722                           ;eusart.c: 143: }
 12723                           ;eusart.c: 144: PIE1bits.TXIE = 1;
 12724  2DDC  0021               	movlb	1	; select bank1
 12725  2DDD  1611               	bsf	17,4	;volatile
 12726  2DDE  0008               	return
 12727  2DDF                     __end_of_EUSART_Write:	
 12728                           
 12729                           	psect	text14
 12730  2E57                     __ptext14:	
 12731 ;; *************** function _serial_is_string *****************
 12732 ;; Defined at:
 12733 ;;		line 129 in file "serial.c"
 12734 ;; Parameters:    Size  Location     Type
 12735 ;;		None
 12736 ;; Auto vars:     Size  Location     Type
 12737 ;;  i               1    3[BANK0 ] unsigned char 
 12738 ;;  result          1    2[BANK0 ] unsigned char 
 12739 ;; Return value:  Size  Location     Type
 12740 ;;                  1    wreg      unsigned char 
 12741 ;; Registers used:
 12742 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12743 ;; Tracked objects:
 12744 ;;		On entry : 0/0
 12745 ;;		On exit  : 0/0
 12746 ;;		Unchanged: 0/0
 12747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12749 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12750 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12751 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12752 ;;Total ram usage:        4 bytes
 12753 ;; Hardware stack levels used:    1
 12754 ;; Hardware stack levels required when called:    5
 12755 ;; This function calls:
 12756 ;;		Nothing
 12757 ;; This function is called by:
 12758 ;;		_main
 12759 ;; This function uses a non-reentrant model
 12760 ;;
 12761                           
 12762                           
 12763                           ;psect for function _serial_is_string
 12764  2E57                     _serial_is_string:	
 12765                           
 12766                           ;serial.c: 131: uint8_t result = 0x00;
 12767                           
 12768                           ;incstack = 0
 12769                           ; Regs used in _serial_is_string: [wreg+fsr1l+fsr1h+status,2+status,0]
 12770  2E57  0020               	movlb	0	; select bank0
 12771  2E58  01A2               	clrf	serial_is_string@result
 12772                           
 12773                           ;serial.c: 132: uint8_t i = circ_buf_tail;
 12774  2E59  0877               	movf	_circ_buf_tail,w	;volatile
 12775  2E5A  00A0               	movwf	??_serial_is_string
 12776  2E5B  0820               	movf	??_serial_is_string,w
 12777  2E5C  00A3               	movwf	serial_is_string@i
 12778                           
 12779                           ;serial.c: 134: if (circ_buf_tail != circ_buf_head){
 12780  2E5D  0877               	movf	_circ_buf_tail,w	;volatile
 12781  2E5E  0676               	xorwf	_circ_buf_head,w	;volatile
 12782  2E5F  1D03               	btfss	3,2
 12783  2E60  2E77               	goto	l6754
 12784  2E61  2E81               	goto	l6756
 12785  2E62                     l6748:	
 12786                           ;serial.c: 144: while (i != ((circ_buf_head + (128 - 1)) & 0b01111111 )){
 12787                           
 12788                           
 12789                           ;serial.c: 145: i++;
 12790  2E62  3001               	movlw	1
 12791  2E63  00A0               	movwf	??_serial_is_string
 12792  2E64  0820               	movf	??_serial_is_string,w
 12793  2E65  07A3               	addwf	serial_is_string@i,f
 12794                           
 12795                           ;serial.c: 146: i &= 0b01111111;
 12796  2E66  307F               	movlw	127
 12797  2E67  00A0               	movwf	??_serial_is_string
 12798  2E68  0820               	movf	??_serial_is_string,w
 12799  2E69  05A3               	andwf	serial_is_string@i,f
 12800                           
 12801                           ;serial.c: 147: if (circ_buf[i] == line_terminator){
 12802  2E6A  0823               	movf	serial_is_string@i,w
 12803  2E6B  3E0C               	addlw	12
 12804  2E6C  0086               	movwf	6
 12805  2E6D  0187               	clrf	7
 12806  2E6E  3027               	movlw	39
 12807  2E6F  3D87               	addwfc	7,f
 12808  2E70  0801               	movf	1,w
 12809  2E71  067B               	xorwf	_line_terminator,w	;volatile
 12810  2E72  1D03               	skipz
 12811  2E73  2E77               	goto	l6754
 12812                           
 12813                           ;serial.c: 148: result = 0x01;
 12814  2E74  01A2               	clrf	serial_is_string@result
 12815  2E75  0AA2               	incf	serial_is_string@result,f
 12816                           
 12817                           ;serial.c: 149: break;
 12818  2E76  2E81               	goto	l6756
 12819  2E77                     l6754:	
 12820  2E77  307F               	movlw	127
 12821  2E78  0776               	addwf	_circ_buf_head,w	;volatile
 12822  2E79  00A0               	movwf	??_serial_is_string
 12823  2E7A  307F               	movlw	127
 12824  2E7B  0520               	andwf	??_serial_is_string,w
 12825  2E7C  00A1               	movwf	??_serial_is_string+1
 12826  2E7D  0821               	movf	??_serial_is_string+1,w
 12827  2E7E  0623               	xorwf	serial_is_string@i,w
 12828  2E7F  1D03               	skipz
 12829  2E80  2E62               	goto	l6748
 12830  2E81                     l6756:	
 12831                           
 12832                           ;serial.c: 150: }
 12833                           ;serial.c: 151: }
 12834                           ;serial.c: 152: }
 12835                           ;serial.c: 153: return result;
 12836  2E81  0822               	movf	serial_is_string@result,w
 12837  2E82  0008               	return
 12838  2E83                     __end_of_serial_is_string:	
 12839                           
 12840                           	psect	text15
 12841  2F8A                     __ptext15:	
 12842 ;; *************** function _serial_gets *****************
 12843 ;; Defined at:
 12844 ;;		line 80 in file "serial.c"
 12845 ;; Parameters:    Size  Location     Type
 12846 ;;  P               2    0[BANK0 ] PTR unsigned char 
 12847 ;;		 -> line(100), 
 12848 ;; Auto vars:     Size  Location     Type
 12849 ;;  num_char        1    3[BANK0 ] unsigned char 
 12850 ;; Return value:  Size  Location     Type
 12851 ;;                  1    wreg      unsigned char 
 12852 ;; Registers used:
 12853 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12854 ;; Tracked objects:
 12855 ;;		On entry : 0/0
 12856 ;;		On exit  : 0/0
 12857 ;;		Unchanged: 0/0
 12858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12859 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12860 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12861 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12862 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12863 ;;Total ram usage:        4 bytes
 12864 ;; Hardware stack levels used:    1
 12865 ;; Hardware stack levels required when called:    5
 12866 ;; This function calls:
 12867 ;;		Nothing
 12868 ;; This function is called by:
 12869 ;;		_main
 12870 ;; This function uses a non-reentrant model
 12871 ;;
 12872                           
 12873                           
 12874                           ;psect for function _serial_gets
 12875  2F8A                     _serial_gets:	
 12876                           
 12877                           ;serial.c: 82: uint8_t num_char = 0;
 12878                           
 12879                           ;incstack = 0
 12880                           ; Regs used in _serial_gets: [wreg+fsr1l+fsr1h+status,2+status,0]
 12881  2F8A  0020               	movlb	0	; select bank0
 12882  2F8B  01A3               	clrf	serial_gets@num_char
 12883                           
 12884                           ;serial.c: 84: while (circ_buf_tail != circ_buf_head){
 12885  2F8C  2FAB               	goto	l6776
 12886  2F8D                     l6766:	
 12887                           ;serial.c: 88: break;
 12888                           
 12889                           
 12890                           ;serial.c: 89: }
 12891                           ;serial.c: 90: *P++ = circ_buf[circ_buf_tail++];
 12892  2F8D  0877               	movf	_circ_buf_tail,w	;volatile
 12893  2F8E  3E0C               	addlw	12
 12894  2F8F  0086               	movwf	6
 12895  2F90  0187               	clrf	7
 12896  2F91  3027               	movlw	39
 12897  2F92  3D87               	addwfc	7,f
 12898  2F93  0801               	movf	1,w
 12899  2F94  00A2               	movwf	??_serial_gets
 12900  2F95  0820               	movf	serial_gets@P,w
 12901  2F96  0086               	movwf	6
 12902  2F97  0821               	movf	serial_gets@P+1,w
 12903  2F98  0087               	movwf	7
 12904  2F99  0822               	movf	??_serial_gets,w
 12905  2F9A  0081               	movwf	1
 12906  2F9B  3001               	movlw	1
 12907  2F9C  00A2               	movwf	??_serial_gets
 12908  2F9D  0822               	movf	??_serial_gets,w
 12909  2F9E  07F7               	addwf	_circ_buf_tail,f	;volatile
 12910  2F9F  3001               	movlw	1
 12911  2FA0  07A0               	addwf	serial_gets@P,f
 12912  2FA1  3000               	movlw	0
 12913  2FA2  3DA1               	addwfc	serial_gets@P+1,f
 12914                           
 12915                           ;serial.c: 91: num_char++;
 12916  2FA3  3001               	movlw	1
 12917  2FA4  00A2               	movwf	??_serial_gets
 12918  2FA5  0822               	movf	??_serial_gets,w
 12919  2FA6  07A3               	addwf	serial_gets@num_char,f
 12920                           
 12921                           ;serial.c: 94: circ_buf_tail &= 0b01111111;
 12922  2FA7  307F               	movlw	127
 12923  2FA8  00A2               	movwf	??_serial_gets
 12924  2FA9  0822               	movf	??_serial_gets,w
 12925  2FAA  05F7               	andwf	_circ_buf_tail,f	;volatile
 12926  2FAB                     l6776:	
 12927  2FAB  0877               	movf	_circ_buf_tail,w	;volatile
 12928  2FAC  0676               	xorwf	_circ_buf_head,w	;volatile
 12929  2FAD  1903               	btfsc	3,2
 12930  2FAE  2FBE               	goto	l6778
 12931                           
 12932                           ;serial.c: 85: if (circ_buf[circ_buf_tail++] == line_terminator){
 12933  2FAF  0877               	movf	_circ_buf_tail,w	;volatile
 12934  2FB0  0AF7               	incf	_circ_buf_tail,f	;volatile
 12935  2FB1  3E0C               	addlw	12
 12936  2FB2  0086               	movwf	6
 12937  2FB3  0187               	clrf	7
 12938  2FB4  3027               	movlw	39
 12939  2FB5  3D87               	addwfc	7,f
 12940  2FB6  0801               	movf	1,w
 12941  2FB7  067B               	xorwf	_line_terminator,w	;volatile
 12942  2FB8  1D03               	skipz
 12943  2FB9  2F8D               	goto	l6766
 12944                           
 12945                           ;serial.c: 87: circ_buf_tail &= 0b01111111;
 12946  2FBA  307F               	movlw	127
 12947  2FBB  00A2               	movwf	??_serial_gets
 12948  2FBC  0822               	movf	??_serial_gets,w
 12949  2FBD  05F7               	andwf	_circ_buf_tail,f	;volatile
 12950  2FBE                     l6778:	
 12951                           
 12952                           ;serial.c: 95: }
 12953                           ;serial.c: 96: *P = 0x00;
 12954  2FBE  0820               	movf	serial_gets@P,w
 12955  2FBF  0086               	movwf	6
 12956  2FC0  0821               	movf	serial_gets@P+1,w
 12957  2FC1  0087               	movwf	7
 12958  2FC2  0181               	clrf	1
 12959  2FC3  0008               	return
 12960  2FC4                     __end_of_serial_gets:	
 12961                           ;serial.c: 97: return num_char;
 12962                           ;	Return value of _serial_gets is never used
 12963                           
 12964                           
 12965                           	psect	text16
 12966  2359                     __ptext16:	
 12967 ;; *************** function _line_parser *****************
 12968 ;; Defined at:
 12969 ;;		line 74 in file "line_parser.c"
 12970 ;; Parameters:    Size  Location     Type
 12971 ;;  line            2    0[BANK0 ] PTR unsigned char 
 12972 ;;		 -> line(100), 
 12973 ;;  delim           1    2[BANK0 ] unsigned char 
 12974 ;; Auto vars:     Size  Location     Type
 12975 ;;  i               1    7[BANK0 ] unsigned char 
 12976 ;;  field_ctr       1    6[BANK0 ] unsigned char 
 12977 ;; Return value:  Size  Location     Type
 12978 ;;                  1    wreg      unsigned char 
 12979 ;; Registers used:
 12980 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12981 ;; Tracked objects:
 12982 ;;		On entry : 0/0
 12983 ;;		On exit  : 0/0
 12984 ;;		Unchanged: 0/0
 12985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 12986 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12987 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12988 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12989 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 12990 ;;Total ram usage:        8 bytes
 12991 ;; Hardware stack levels used:    1
 12992 ;; Hardware stack levels required when called:    5
 12993 ;; This function calls:
 12994 ;;		Nothing
 12995 ;; This function is called by:
 12996 ;;		_main
 12997 ;; This function uses a non-reentrant model
 12998 ;;
 12999                           
 13000                           
 13001                           ;psect for function _line_parser
 13002  2359                     _line_parser:	
 13003                           
 13004                           ;line_parser.c: 76: uint8_t i = 0;
 13005                           
 13006                           ;incstack = 0
 13007                           ; Regs used in _line_parser: [wreg+fsr1l+fsr1h+status,2+status,0]
 13008  2359  0020               	movlb	0	; select bank0
 13009  235A  01A7               	clrf	line_parser@i
 13010                           
 13011                           ;line_parser.c: 77: uint8_t field_ctr = 1;
 13012  235B  01A6               	clrf	line_parser@field_ctr
 13013  235C  0AA6               	incf	line_parser@field_ctr,f
 13014                           
 13015                           ;line_parser.c: 79: field_offsets[0] = 0;
 13016  235D  0023               	movlb	3	; select bank3
 13017  235E  01A0               	clrf	_field_offsets^(0+384)
 13018                           
 13019                           ;line_parser.c: 81: if(*line == 0x00){
 13020  235F  0020               	movlb	0	; select bank0
 13021  2360  0820               	movf	line_parser@line,w
 13022  2361  0086               	movwf	6
 13023  2362  0821               	movf	line_parser@line+1,w
 13024  2363  0087               	movwf	7
 13025  2364  0801               	movf	1,w
 13026  2365  1D03               	btfss	3,2
 13027  2366  2BAD               	goto	l7018
 13028                           
 13029                           ;line_parser.c: 82: line_buf[0] = 0x00;
 13030  2367  308C               	movlw	140
 13031  2368  0086               	movwf	6
 13032  2369  3027               	movlw	39
 13033  236A  0087               	movwf	7
 13034  236B  3000               	movlw	0
 13035  236C  3FC0               	movwi [0]fsr1
 13036                           
 13037                           ;line_parser.c: 83: return 0;
 13038                           ;	Return value of _line_parser is never used
 13039  236D  0008               	return
 13040  236E                     l7002:	
 13041                           ;line_parser.c: 84: }
 13042                           ;line_parser.c: 86: while(i < 100 - 1){
 13043                           
 13044                           
 13045                           ;line_parser.c: 87: if(*line == delim){
 13046  236E  0820               	movf	line_parser@line,w
 13047  236F  0086               	movwf	6
 13048  2370  0821               	movf	line_parser@line+1,w
 13049  2371  0087               	movwf	7
 13050  2372  0801               	movf	1,w
 13051  2373  0622               	xorwf	line_parser@delim,w
 13052  2374  1D03               	skipz
 13053  2375  2B8C               	goto	l7008
 13054                           
 13055                           ;line_parser.c: 88: line_buf[i] = 0x00;
 13056  2376  0827               	movf	line_parser@i,w
 13057  2377  3E8C               	addlw	140
 13058  2378  0086               	movwf	6
 13059  2379  0187               	clrf	7
 13060  237A  3027               	movlw	39
 13061  237B  3D87               	addwfc	7,f
 13062  237C  0181               	clrf	1
 13063                           
 13064                           ;line_parser.c: 89: field_offsets[field_ctr] = i + 1;
 13065  237D  0827               	movf	line_parser@i,w
 13066  237E  3E01               	addlw	1
 13067  237F  00A3               	movwf	??_line_parser
 13068  2380  0826               	movf	line_parser@field_ctr,w
 13069  2381  3EA0               	addlw	(low (_field_offsets| (0+256)))& (0+255)
 13070  2382  0086               	movwf	6
 13071  2383  3001               	movlw	1	; select bank3/4
 13072  2384  0087               	movwf	7
 13073  2385  0823               	movf	??_line_parser,w
 13074  2386  0081               	movwf	1
 13075                           
 13076                           ;line_parser.c: 90: field_ctr++;
 13077  2387  3001               	movlw	1
 13078  2388  00A3               	movwf	??_line_parser
 13079  2389  0823               	movf	??_line_parser,w
 13080  238A  07A6               	addwf	line_parser@field_ctr,f
 13081                           
 13082                           ;line_parser.c: 91: }
 13083  238B  2B9E               	goto	l7010
 13084  238C                     l7008:	
 13085                           
 13086                           ;line_parser.c: 92: else{
 13087                           ;line_parser.c: 93: line_buf[i] = *line;
 13088  238C  0820               	movf	line_parser@line,w
 13089  238D  0086               	movwf	6
 13090  238E  0821               	movf	line_parser@line+1,w
 13091  238F  0087               	movwf	7
 13092  2390  0801               	movf	1,w
 13093  2391  00A3               	movwf	??_line_parser
 13094  2392  0827               	movf	line_parser@i,w
 13095  2393  3E8C               	addlw	140
 13096  2394  00A4               	movwf	??_line_parser+1
 13097  2395  01A5               	clrf	??_line_parser+2
 13098  2396  3027               	movlw	39
 13099  2397  3DA5               	addwfc	??_line_parser+2,f
 13100  2398  0824               	movf	??_line_parser+1,w
 13101  2399  0086               	movwf	6
 13102  239A  0825               	movf	??_line_parser+2,w
 13103  239B  0087               	movwf	7
 13104  239C  0823               	movf	??_line_parser,w
 13105  239D  0081               	movwf	1
 13106  239E                     l7010:	
 13107                           
 13108                           ;line_parser.c: 94: }
 13109                           ;line_parser.c: 95: line++;
 13110  239E  3001               	movlw	1
 13111  239F  07A0               	addwf	line_parser@line,f
 13112  23A0  3000               	movlw	0
 13113  23A1  3DA1               	addwfc	line_parser@line+1,f
 13114                           
 13115                           ;line_parser.c: 96: i++;
 13116  23A2  3001               	movlw	1
 13117  23A3  00A3               	movwf	??_line_parser
 13118  23A4  0823               	movf	??_line_parser,w
 13119  23A5  07A7               	addwf	line_parser@i,f
 13120                           
 13121                           ;line_parser.c: 97: if(*line == 0x00)
 13122  23A6  0820               	movf	line_parser@line,w
 13123  23A7  0086               	movwf	6
 13124  23A8  0821               	movf	line_parser@line+1,w
 13125  23A9  0087               	movwf	7
 13126  23AA  0801               	movf	1,w
 13127  23AB  1903               	btfsc	3,2
 13128  23AC  2BB1               	goto	l7020
 13129  23AD                     l7018:	
 13130                           ;line_parser.c: 98: break;
 13131                           
 13132  23AD  3063               	movlw	99
 13133  23AE  0227               	subwf	line_parser@i,w
 13134  23AF  1C03               	skipc
 13135  23B0  2B6E               	goto	l7002
 13136  23B1                     l7020:	
 13137                           
 13138                           ;line_parser.c: 99: }
 13139                           ;line_parser.c: 101: line_buf[i] = 0x00;
 13140  23B1  0827               	movf	line_parser@i,w
 13141  23B2  3E8C               	addlw	140
 13142  23B3  0086               	movwf	6
 13143  23B4  0187               	clrf	7
 13144  23B5  3027               	movlw	39
 13145  23B6  3D87               	addwfc	7,f
 13146  23B7  0181               	clrf	1
 13147  23B8  0008               	return
 13148  23B9                     __end_of_line_parser:	
 13149                           ;line_parser.c: 102: return field_ctr;
 13150                           ;	Return value of _line_parser is never used
 13151                           
 13152                           
 13153                           	psect	text17
 13154  0CA1                     __ptext17:	
 13155 ;; *************** function _heading *****************
 13156 ;; Defined at:
 13157 ;;		line 84 in file "GPS_distance.c"
 13158 ;; Parameters:    Size  Location     Type
 13159 ;;  lat1            3   47[BANK1 ] unsigned char 
 13160 ;;  lon1            3   50[BANK1 ] unsigned char 
 13161 ;;  lat2            3   53[BANK1 ] unsigned char 
 13162 ;;  lon2            3   56[BANK1 ] unsigned char 
 13163 ;; Auto vars:     Size  Location     Type
 13164 ;;  angle           3    0[BANK2 ] unsigned char 
 13165 ;;  c               3   51[BANK2 ] unsigned char 
 13166 ;;  d               3   48[BANK2 ] unsigned char 
 13167 ;;  b               3   45[BANK2 ] unsigned char 
 13168 ;;  a               3   42[BANK2 ] unsigned char 
 13169 ;; Return value:  Size  Location     Type
 13170 ;;                  3   47[BANK1 ] unsigned char 
 13171 ;; Registers used:
 13172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13173 ;; Tracked objects:
 13174 ;;		On entry : 0/0
 13175 ;;		On exit  : 0/0
 13176 ;;		Unchanged: 0/0
 13177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 13178 ;;      Params:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13179 ;;      Locals:         0       0       0      54       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13181 ;;      Totals:         0       0      12      54       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 13182 ;;Total ram usage:       66 bytes
 13183 ;; Hardware stack levels used:    1
 13184 ;; Hardware stack levels required when called:   10
 13185 ;; This function calls:
 13186 ;;		___ftadd
 13187 ;;		___ftdiv
 13188 ;;		___ftge
 13189 ;;		___ftmul
 13190 ;;		___ftneg
 13191 ;;		_atan2
 13192 ;;		_cos
 13193 ;;		_deg2rad
 13194 ;;		_fmod
 13195 ;;		_sin
 13196 ;; This function is called by:
 13197 ;;		_main
 13198 ;; This function uses a non-reentrant model
 13199 ;;
 13200                           
 13201                           
 13202                           ;psect for function _heading
 13203  0CA1                     _heading:	
 13204                           
 13205                           ;GPS_distance.c: 86: double a = deg2rad(lat1);
 13206                           
 13207                           ;incstack = 0
 13208                           ; Regs used in _heading: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13209  0CA1  0021               	movlb	1	; select bank1
 13210  0CA2  084F               	movf	heading@lat1^(0+128),w
 13211  0CA3  0020               	movlb	0	; select bank0
 13212  0CA4  00D6               	movwf	deg2rad@deg
 13213  0CA5  0021               	movlb	1	; select bank1
 13214  0CA6  0850               	movf	(heading@lat1+1)^(0+128),w
 13215  0CA7  0020               	movlb	0	; select bank0
 13216  0CA8  00D7               	movwf	deg2rad@deg+1
 13217  0CA9  0021               	movlb	1	; select bank1
 13218  0CAA  0851               	movf	(heading@lat1+2)^(0+128),w
 13219  0CAB  0020               	movlb	0	; select bank0
 13220  0CAC  00D8               	movwf	deg2rad@deg+2
 13221  0CAD  31AD  25DF  318C   	fcall	_deg2rad
 13222  0CB0  0020               	movlb	0	; select bank0
 13223  0CB1  0856               	movf	?_deg2rad,w
 13224  0CB2  0022               	movlb	2	; select bank2
 13225  0CB3  00CA               	movwf	heading@a^(0+256)
 13226  0CB4  0020               	movlb	0	; select bank0
 13227  0CB5  0857               	movf	?_deg2rad+1,w
 13228  0CB6  0022               	movlb	2	; select bank2
 13229  0CB7  00CB               	movwf	(heading@a+1)^(0+256)
 13230  0CB8  0020               	movlb	0	; select bank0
 13231  0CB9  0858               	movf	?_deg2rad+2,w
 13232  0CBA  0022               	movlb	2	; select bank2
 13233  0CBB  00CC               	movwf	(heading@a+2)^(0+256)
 13234                           
 13235                           ;GPS_distance.c: 87: double b = deg2rad(lon1);
 13236  0CBC  0021               	movlb	1	; select bank1
 13237  0CBD  0852               	movf	heading@lon1^(0+128),w
 13238  0CBE  0020               	movlb	0	; select bank0
 13239  0CBF  00D6               	movwf	deg2rad@deg
 13240  0CC0  0021               	movlb	1	; select bank1
 13241  0CC1  0853               	movf	(heading@lon1+1)^(0+128),w
 13242  0CC2  0020               	movlb	0	; select bank0
 13243  0CC3  00D7               	movwf	deg2rad@deg+1
 13244  0CC4  0021               	movlb	1	; select bank1
 13245  0CC5  0854               	movf	(heading@lon1+2)^(0+128),w
 13246  0CC6  0020               	movlb	0	; select bank0
 13247  0CC7  00D8               	movwf	deg2rad@deg+2
 13248  0CC8  31AD  25DF  318C   	fcall	_deg2rad
 13249  0CCB  0020               	movlb	0	; select bank0
 13250  0CCC  0856               	movf	?_deg2rad,w
 13251  0CCD  0022               	movlb	2	; select bank2
 13252  0CCE  00CD               	movwf	heading@b^(0+256)
 13253  0CCF  0020               	movlb	0	; select bank0
 13254  0CD0  0857               	movf	?_deg2rad+1,w
 13255  0CD1  0022               	movlb	2	; select bank2
 13256  0CD2  00CE               	movwf	(heading@b+1)^(0+256)
 13257  0CD3  0020               	movlb	0	; select bank0
 13258  0CD4  0858               	movf	?_deg2rad+2,w
 13259  0CD5  0022               	movlb	2	; select bank2
 13260  0CD6  00CF               	movwf	(heading@b+2)^(0+256)
 13261                           
 13262                           ;GPS_distance.c: 88: double c = deg2rad(lat2);
 13263  0CD7  0021               	movlb	1	; select bank1
 13264  0CD8  0855               	movf	heading@lat2^(0+128),w
 13265  0CD9  0020               	movlb	0	; select bank0
 13266  0CDA  00D6               	movwf	deg2rad@deg
 13267  0CDB  0021               	movlb	1	; select bank1
 13268  0CDC  0856               	movf	(heading@lat2+1)^(0+128),w
 13269  0CDD  0020               	movlb	0	; select bank0
 13270  0CDE  00D7               	movwf	deg2rad@deg+1
 13271  0CDF  0021               	movlb	1	; select bank1
 13272  0CE0  0857               	movf	(heading@lat2+2)^(0+128),w
 13273  0CE1  0020               	movlb	0	; select bank0
 13274  0CE2  00D8               	movwf	deg2rad@deg+2
 13275  0CE3  31AD  25DF  318C   	fcall	_deg2rad
 13276  0CE6  0020               	movlb	0	; select bank0
 13277  0CE7  0856               	movf	?_deg2rad,w
 13278  0CE8  0022               	movlb	2	; select bank2
 13279  0CE9  00D3               	movwf	heading@c^(0+256)
 13280  0CEA  0020               	movlb	0	; select bank0
 13281  0CEB  0857               	movf	?_deg2rad+1,w
 13282  0CEC  0022               	movlb	2	; select bank2
 13283  0CED  00D4               	movwf	(heading@c+1)^(0+256)
 13284  0CEE  0020               	movlb	0	; select bank0
 13285  0CEF  0858               	movf	?_deg2rad+2,w
 13286  0CF0  0022               	movlb	2	; select bank2
 13287  0CF1  00D5               	movwf	(heading@c+2)^(0+256)
 13288                           
 13289                           ;GPS_distance.c: 89: double d = deg2rad(lon2);
 13290  0CF2  0021               	movlb	1	; select bank1
 13291  0CF3  0858               	movf	heading@lon2^(0+128),w
 13292  0CF4  0020               	movlb	0	; select bank0
 13293  0CF5  00D6               	movwf	deg2rad@deg
 13294  0CF6  0021               	movlb	1	; select bank1
 13295  0CF7  0859               	movf	(heading@lon2+1)^(0+128),w
 13296  0CF8  0020               	movlb	0	; select bank0
 13297  0CF9  00D7               	movwf	deg2rad@deg+1
 13298  0CFA  0021               	movlb	1	; select bank1
 13299  0CFB  085A               	movf	(heading@lon2+2)^(0+128),w
 13300  0CFC  0020               	movlb	0	; select bank0
 13301  0CFD  00D8               	movwf	deg2rad@deg+2
 13302  0CFE  31AD  25DF  318C   	fcall	_deg2rad
 13303  0D01  0020               	movlb	0	; select bank0
 13304  0D02  0856               	movf	?_deg2rad,w
 13305  0D03  0022               	movlb	2	; select bank2
 13306  0D04  00D0               	movwf	heading@d^(0+256)
 13307  0D05  0020               	movlb	0	; select bank0
 13308  0D06  0857               	movf	?_deg2rad+1,w
 13309  0D07  0022               	movlb	2	; select bank2
 13310  0D08  00D1               	movwf	(heading@d+1)^(0+256)
 13311  0D09  0020               	movlb	0	; select bank0
 13312  0D0A  0858               	movf	?_deg2rad+2,w
 13313  0D0B  0022               	movlb	2	; select bank2
 13314  0D0C  00D2               	movwf	(heading@d+2)^(0+256)
 13315                           
 13316                           ;GPS_distance.c: 91: if (cos(c) * sin(d - b) == 0){
 13317  0D0D  0850               	movf	heading@d^(0+256),w
 13318  0D0E  0020               	movlb	0	; select bank0
 13319  0D0F  00D9               	movwf	___ftadd@f1
 13320  0D10  0022               	movlb	2	; select bank2
 13321  0D11  0851               	movf	(heading@d+1)^(0+256),w
 13322  0D12  0020               	movlb	0	; select bank0
 13323  0D13  00DA               	movwf	___ftadd@f1+1
 13324  0D14  0022               	movlb	2	; select bank2
 13325  0D15  0852               	movf	(heading@d+2)^(0+256),w
 13326  0D16  0020               	movlb	0	; select bank0
 13327  0D17  00DB               	movwf	___ftadd@f1+2
 13328  0D18  0022               	movlb	2	; select bank2
 13329  0D19  084D               	movf	heading@b^(0+256),w
 13330  0D1A  0020               	movlb	0	; select bank0
 13331  0D1B  00A0               	movwf	___ftneg@f1
 13332  0D1C  0022               	movlb	2	; select bank2
 13333  0D1D  084E               	movf	(heading@b+1)^(0+256),w
 13334  0D1E  0020               	movlb	0	; select bank0
 13335  0D1F  00A1               	movwf	___ftneg@f1+1
 13336  0D20  0022               	movlb	2	; select bank2
 13337  0D21  084F               	movf	(heading@b+2)^(0+256),w
 13338  0D22  0020               	movlb	0	; select bank0
 13339  0D23  00A2               	movwf	___ftneg@f1+2
 13340  0D24  3198  2003  318C   	fcall	___ftneg
 13341  0D27  0020               	movlb	0	; select bank0
 13342  0D28  0820               	movf	?___ftneg,w
 13343  0D29  00DC               	movwf	___ftadd@f2
 13344  0D2A  0821               	movf	?___ftneg+1,w
 13345  0D2B  00DD               	movwf	___ftadd@f2+1
 13346  0D2C  0822               	movf	?___ftneg+2,w
 13347  0D2D  00DE               	movwf	___ftadd@f2+2
 13348  0D2E  3198  20C2  318C   	fcall	___ftadd
 13349  0D31  0020               	movlb	0	; select bank0
 13350  0D32  0859               	movf	?___ftadd,w
 13351  0D33  0022               	movlb	2	; select bank2
 13352  0D34  00C1               	movwf	_heading$1897^(0+256)
 13353  0D35  0020               	movlb	0	; select bank0
 13354  0D36  085A               	movf	?___ftadd+1,w
 13355  0D37  0022               	movlb	2	; select bank2
 13356  0D38  00C2               	movwf	(_heading$1897+1)^(0+256)
 13357  0D39  0020               	movlb	0	; select bank0
 13358  0D3A  085B               	movf	?___ftadd+2,w
 13359  0D3B  0022               	movlb	2	; select bank2
 13360  0D3C  00C3               	movwf	(_heading$1897+2)^(0+256)
 13361                           
 13362                           ;GPS_distance.c: 91: if (cos(c) * sin(d - b) == 0){
 13363  0D3D  0841               	movf	_heading$1897^(0+256),w
 13364  0D3E  0021               	movlb	1	; select bank1
 13365  0D3F  00A6               	movwf	sin@f^(0+128)
 13366  0D40  0022               	movlb	2	; select bank2
 13367  0D41  0842               	movf	(_heading$1897+1)^(0+256),w
 13368  0D42  0021               	movlb	1	; select bank1
 13369  0D43  00A7               	movwf	(sin@f+1)^(0+128)
 13370  0D44  0022               	movlb	2	; select bank2
 13371  0D45  0843               	movf	(_heading$1897+2)^(0+256),w
 13372  0D46  0021               	movlb	1	; select bank1
 13373  0D47  00A8               	movwf	(sin@f+2)^(0+128)
 13374  0D48  319C  241C  318C   	fcall	_sin
 13375  0D4B  0021               	movlb	1	; select bank1
 13376  0D4C  0826               	movf	?_sin^(0+128),w
 13377  0D4D  0022               	movlb	2	; select bank2
 13378  0D4E  00C4               	movwf	_heading$1898^(0+256)
 13379  0D4F  0021               	movlb	1	; select bank1
 13380  0D50  0827               	movf	(?_sin+1)^(0+128),w
 13381  0D51  0022               	movlb	2	; select bank2
 13382  0D52  00C5               	movwf	(_heading$1898+1)^(0+256)
 13383  0D53  0021               	movlb	1	; select bank1
 13384  0D54  0828               	movf	(?_sin+2)^(0+128),w
 13385  0D55  0022               	movlb	2	; select bank2
 13386  0D56  00C6               	movwf	(_heading$1898+2)^(0+256)
 13387                           
 13388                           ;GPS_distance.c: 91: if (cos(c) * sin(d - b) == 0){
 13389  0D57  0853               	movf	heading@c^(0+256),w
 13390  0D58  0021               	movlb	1	; select bank1
 13391  0D59  00B4               	movwf	cos@f^(0+128)
 13392  0D5A  0022               	movlb	2	; select bank2
 13393  0D5B  0854               	movf	(heading@c+1)^(0+256),w
 13394  0D5C  0021               	movlb	1	; select bank1
 13395  0D5D  00B5               	movwf	(cos@f+1)^(0+128)
 13396  0D5E  0022               	movlb	2	; select bank2
 13397  0D5F  0855               	movf	(heading@c+2)^(0+256),w
 13398  0D60  0021               	movlb	1	; select bank1
 13399  0D61  00B6               	movwf	(cos@f+2)^(0+128)
 13400  0D62  31A4  2494  318C   	fcall	_cos
 13401  0D65  0021               	movlb	1	; select bank1
 13402  0D66  0834               	movf	?_cos^(0+128),w
 13403  0D67  0022               	movlb	2	; select bank2
 13404  0D68  00C7               	movwf	_heading$1899^(0+256)
 13405  0D69  0021               	movlb	1	; select bank1
 13406  0D6A  0835               	movf	(?_cos+1)^(0+128),w
 13407  0D6B  0022               	movlb	2	; select bank2
 13408  0D6C  00C8               	movwf	(_heading$1899+1)^(0+256)
 13409  0D6D  0021               	movlb	1	; select bank1
 13410  0D6E  0836               	movf	(?_cos+2)^(0+128),w
 13411  0D6F  0022               	movlb	2	; select bank2
 13412  0D70  00C9               	movwf	(_heading$1899+2)^(0+256)
 13413                           
 13414                           ;GPS_distance.c: 91: if (cos(c) * sin(d - b) == 0){
 13415  0D71  0844               	movf	_heading$1898^(0+256),w
 13416  0D72  0020               	movlb	0	; select bank0
 13417  0D73  00B6               	movwf	___ftmul@f1
 13418  0D74  0022               	movlb	2	; select bank2
 13419  0D75  0845               	movf	(_heading$1898+1)^(0+256),w
 13420  0D76  0020               	movlb	0	; select bank0
 13421  0D77  00B7               	movwf	___ftmul@f1+1
 13422  0D78  0022               	movlb	2	; select bank2
 13423  0D79  0846               	movf	(_heading$1898+2)^(0+256),w
 13424  0D7A  0020               	movlb	0	; select bank0
 13425  0D7B  00B8               	movwf	___ftmul@f1+2
 13426  0D7C  0022               	movlb	2	; select bank2
 13427  0D7D  0847               	movf	_heading$1899^(0+256),w
 13428  0D7E  0020               	movlb	0	; select bank0
 13429  0D7F  00B9               	movwf	___ftmul@f2
 13430  0D80  0022               	movlb	2	; select bank2
 13431  0D81  0848               	movf	(_heading$1899+1)^(0+256),w
 13432  0D82  0020               	movlb	0	; select bank0
 13433  0D83  00BA               	movwf	___ftmul@f2+1
 13434  0D84  0022               	movlb	2	; select bank2
 13435  0D85  0849               	movf	(_heading$1899+2)^(0+256),w
 13436  0D86  0020               	movlb	0	; select bank0
 13437  0D87  00BB               	movwf	___ftmul@f2+2
 13438  0D88  31A7  274C  318C   	fcall	___ftmul
 13439  0D8B  0020               	movlb	0	; select bank0
 13440  0D8C  0838               	movf	?___ftmul+2,w
 13441  0D8D  0437               	iorwf	?___ftmul+1,w
 13442  0D8E  0436               	iorwf	?___ftmul,w
 13443  0D8F  1D03               	skipz
 13444  0D90  2DBE               	goto	l7094
 13445                           
 13446                           ;GPS_distance.c: 92: if (c > a)
 13447  0D91  0022               	movlb	2	; select bank2
 13448  0D92  084A               	movf	heading@a^(0+256),w
 13449  0D93  0020               	movlb	0	; select bank0
 13450  0D94  00A0               	movwf	___ftge@ff1
 13451  0D95  0022               	movlb	2	; select bank2
 13452  0D96  084B               	movf	(heading@a+1)^(0+256),w
 13453  0D97  0020               	movlb	0	; select bank0
 13454  0D98  00A1               	movwf	___ftge@ff1+1
 13455  0D99  0022               	movlb	2	; select bank2
 13456  0D9A  084C               	movf	(heading@a+2)^(0+256),w
 13457  0D9B  0020               	movlb	0	; select bank0
 13458  0D9C  00A2               	movwf	___ftge@ff1+2
 13459  0D9D  0022               	movlb	2	; select bank2
 13460  0D9E  0853               	movf	heading@c^(0+256),w
 13461  0D9F  0020               	movlb	0	; select bank0
 13462  0DA0  00A3               	movwf	___ftge@ff2
 13463  0DA1  0022               	movlb	2	; select bank2
 13464  0DA2  0854               	movf	(heading@c+1)^(0+256),w
 13465  0DA3  0020               	movlb	0	; select bank0
 13466  0DA4  00A4               	movwf	___ftge@ff2+1
 13467  0DA5  0022               	movlb	2	; select bank2
 13468  0DA6  0855               	movf	(heading@c+2)^(0+256),w
 13469  0DA7  0020               	movlb	0	; select bank0
 13470  0DA8  00A5               	movwf	___ftge@ff2+2
 13471  0DA9  31AF  27C4  318C   	fcall	___ftge
 13472  0DAC  1803               	btfsc	3,0
 13473  0DAD  2DB6               	goto	l7090
 13474                           
 13475                           ;GPS_distance.c: 93: return 0;
 13476  0DAE  3000               	movlw	0
 13477  0DAF  0021               	movlb	1	; select bank1
 13478  0DB0  00CF               	movwf	?_heading^(0+128)
 13479  0DB1  3000               	movlw	0
 13480  0DB2  00D0               	movwf	(?_heading+1)^(0+128)
 13481  0DB3  3000               	movlw	0
 13482  0DB4  00D1               	movwf	(?_heading+2)^(0+128)
 13483  0DB5  0008               	return
 13484  0DB6                     l7090:	
 13485                           
 13486                           ;GPS_distance.c: 94: else
 13487                           ;GPS_distance.c: 95: return 180;
 13488  0DB6  3000               	movlw	0
 13489  0DB7  0021               	movlb	1	; select bank1
 13490  0DB8  00CF               	movwf	?_heading^(0+128)
 13491  0DB9  3034               	movlw	52
 13492  0DBA  00D0               	movwf	(?_heading+1)^(0+128)
 13493  0DBB  3043               	movlw	67
 13494  0DBC  00D1               	movwf	(?_heading+2)^(0+128)
 13495                           
 13496                           ;GPS_distance.c: 96: }
 13497  0DBD  0008               	return
 13498  0DBE                     l7094:	
 13499                           
 13500                           ;GPS_distance.c: 97: else
 13501                           ;GPS_distance.c: 98: {
 13502                           ;GPS_distance.c: 99: double angle = atan2(cos(c) * sin(d - b), sin(c) * cos(a) - sin(a) 
      +                          * cos(c) * cos(d - b));
 13503  0DBE  0022               	movlb	2	; select bank2
 13504  0DBF  0850               	movf	heading@d^(0+256),w
 13505  0DC0  0020               	movlb	0	; select bank0
 13506  0DC1  00D9               	movwf	___ftadd@f1
 13507  0DC2  0022               	movlb	2	; select bank2
 13508  0DC3  0851               	movf	(heading@d+1)^(0+256),w
 13509  0DC4  0020               	movlb	0	; select bank0
 13510  0DC5  00DA               	movwf	___ftadd@f1+1
 13511  0DC6  0022               	movlb	2	; select bank2
 13512  0DC7  0852               	movf	(heading@d+2)^(0+256),w
 13513  0DC8  0020               	movlb	0	; select bank0
 13514  0DC9  00DB               	movwf	___ftadd@f1+2
 13515  0DCA  0022               	movlb	2	; select bank2
 13516  0DCB  084D               	movf	heading@b^(0+256),w
 13517  0DCC  0020               	movlb	0	; select bank0
 13518  0DCD  00A0               	movwf	___ftneg@f1
 13519  0DCE  0022               	movlb	2	; select bank2
 13520  0DCF  084E               	movf	(heading@b+1)^(0+256),w
 13521  0DD0  0020               	movlb	0	; select bank0
 13522  0DD1  00A1               	movwf	___ftneg@f1+1
 13523  0DD2  0022               	movlb	2	; select bank2
 13524  0DD3  084F               	movf	(heading@b+2)^(0+256),w
 13525  0DD4  0020               	movlb	0	; select bank0
 13526  0DD5  00A2               	movwf	___ftneg@f1+2
 13527  0DD6  3198  2003  318C   	fcall	___ftneg
 13528  0DD9  0020               	movlb	0	; select bank0
 13529  0DDA  0820               	movf	?___ftneg,w
 13530  0DDB  00DC               	movwf	___ftadd@f2
 13531  0DDC  0821               	movf	?___ftneg+1,w
 13532  0DDD  00DD               	movwf	___ftadd@f2+1
 13533  0DDE  0822               	movf	?___ftneg+2,w
 13534  0DDF  00DE               	movwf	___ftadd@f2+2
 13535  0DE0  3198  20C2  318C   	fcall	___ftadd
 13536  0DE3  0020               	movlb	0	; select bank0
 13537  0DE4  0859               	movf	?___ftadd,w
 13538  0DE5  0022               	movlb	2	; select bank2
 13539  0DE6  00C1               	movwf	_heading$1897^(0+256)
 13540  0DE7  0020               	movlb	0	; select bank0
 13541  0DE8  085A               	movf	?___ftadd+1,w
 13542  0DE9  0022               	movlb	2	; select bank2
 13543  0DEA  00C2               	movwf	(_heading$1897+1)^(0+256)
 13544  0DEB  0020               	movlb	0	; select bank0
 13545  0DEC  085B               	movf	?___ftadd+2,w
 13546  0DED  0022               	movlb	2	; select bank2
 13547  0DEE  00C3               	movwf	(_heading$1897+2)^(0+256)
 13548                           
 13549                           ;GPS_distance.c: 97: else
 13550                           ;GPS_distance.c: 98: {
 13551                           ;GPS_distance.c: 99: double angle = atan2(cos(c) * sin(d - b), sin(c) * cos(a) - sin(a) 
      +                          * cos(c) * cos(d - b));
 13552  0DEF  0841               	movf	_heading$1897^(0+256),w
 13553  0DF0  0021               	movlb	1	; select bank1
 13554  0DF1  00A6               	movwf	sin@f^(0+128)
 13555  0DF2  0022               	movlb	2	; select bank2
 13556  0DF3  0842               	movf	(_heading$1897+1)^(0+256),w
 13557  0DF4  0021               	movlb	1	; select bank1
 13558  0DF5  00A7               	movwf	(sin@f+1)^(0+128)
 13559  0DF6  0022               	movlb	2	; select bank2
 13560  0DF7  0843               	movf	(_heading$1897+2)^(0+256),w
 13561  0DF8  0021               	movlb	1	; select bank1
 13562  0DF9  00A8               	movwf	(sin@f+2)^(0+128)
 13563  0DFA  319C  241C  318C   	fcall	_sin
 13564  0DFD  0021               	movlb	1	; select bank1
 13565  0DFE  0826               	movf	?_sin^(0+128),w
 13566  0DFF  0022               	movlb	2	; select bank2
 13567  0E00  00C4               	movwf	_heading$1898^(0+256)
 13568  0E01  0021               	movlb	1	; select bank1
 13569  0E02  0827               	movf	(?_sin+1)^(0+128),w
 13570  0E03  0022               	movlb	2	; select bank2
 13571  0E04  00C5               	movwf	(_heading$1898+1)^(0+256)
 13572  0E05  0021               	movlb	1	; select bank1
 13573  0E06  0828               	movf	(?_sin+2)^(0+128),w
 13574  0E07  0022               	movlb	2	; select bank2
 13575  0E08  00C6               	movwf	(_heading$1898+2)^(0+256)
 13576                           
 13577                           ;GPS_distance.c: 97: else
 13578                           ;GPS_distance.c: 98: {
 13579                           ;GPS_distance.c: 99: double angle = atan2(cos(c) * sin(d - b), sin(c) * cos(a) - sin(a) 
      +                          * cos(c) * cos(d - b));
 13580  0E09  0853               	movf	heading@c^(0+256),w
 13581  0E0A  0021               	movlb	1	; select bank1
 13582  0E0B  00B4               	movwf	cos@f^(0+128)
 13583  0E0C  0022               	movlb	2	; select bank2
 13584  0E0D  0854               	movf	(heading@c+1)^(0+256),w
 13585  0E0E  0021               	movlb	1	; select bank1
 13586  0E0F  00B5               	movwf	(cos@f+1)^(0+128)
 13587  0E10  0022               	movlb	2	; select bank2
 13588  0E11  0855               	movf	(heading@c+2)^(0+256),w
 13589  0E12  0021               	movlb	1	; select bank1
 13590  0E13  00B6               	movwf	(cos@f+2)^(0+128)
 13591  0E14  31A4  2494  318C   	fcall	_cos
 13592  0E17  0021               	movlb	1	; select bank1
 13593  0E18  0834               	movf	?_cos^(0+128),w
 13594  0E19  0022               	movlb	2	; select bank2
 13595  0E1A  00C7               	movwf	_heading$1899^(0+256)
 13596  0E1B  0021               	movlb	1	; select bank1
 13597  0E1C  0835               	movf	(?_cos+1)^(0+128),w
 13598  0E1D  0022               	movlb	2	; select bank2
 13599  0E1E  00C8               	movwf	(_heading$1899+1)^(0+256)
 13600  0E1F  0021               	movlb	1	; select bank1
 13601  0E20  0836               	movf	(?_cos+2)^(0+128),w
 13602  0E21  0022               	movlb	2	; select bank2
 13603  0E22  00C9               	movwf	(_heading$1899+2)^(0+256)
 13604                           
 13605                           ;GPS_distance.c: 97: else
 13606                           ;GPS_distance.c: 98: {
 13607                           ;GPS_distance.c: 99: double angle = atan2(cos(c) * sin(d - b), sin(c) * cos(a) - sin(a) 
      +                          * cos(c) * cos(d - b));
 13608  0E23  084A               	movf	heading@a^(0+256),w
 13609  0E24  0021               	movlb	1	; select bank1
 13610  0E25  00A6               	movwf	sin@f^(0+128)
 13611  0E26  0022               	movlb	2	; select bank2
 13612  0E27  084B               	movf	(heading@a+1)^(0+256),w
 13613  0E28  0021               	movlb	1	; select bank1
 13614  0E29  00A7               	movwf	(sin@f+1)^(0+128)
 13615  0E2A  0022               	movlb	2	; select bank2
 13616  0E2B  084C               	movf	(heading@a+2)^(0+256),w
 13617  0E2C  0021               	movlb	1	; select bank1
 13618  0E2D  00A8               	movwf	(sin@f+2)^(0+128)
 13619  0E2E  319C  241C  318C   	fcall	_sin
 13620  0E31  0021               	movlb	1	; select bank1
 13621  0E32  0826               	movf	?_sin^(0+128),w
 13622  0E33  0022               	movlb	2	; select bank2
 13623  0E34  00A3               	movwf	_heading$1900^(0+256)
 13624  0E35  0021               	movlb	1	; select bank1
 13625  0E36  0827               	movf	(?_sin+1)^(0+128),w
 13626  0E37  0022               	movlb	2	; select bank2
 13627  0E38  00A4               	movwf	(_heading$1900+1)^(0+256)
 13628  0E39  0021               	movlb	1	; select bank1
 13629  0E3A  0828               	movf	(?_sin+2)^(0+128),w
 13630  0E3B  0022               	movlb	2	; select bank2
 13631  0E3C  00A5               	movwf	(_heading$1900+2)^(0+256)
 13632                           
 13633                           ;GPS_distance.c: 97: else
 13634                           ;GPS_distance.c: 98: {
 13635                           ;GPS_distance.c: 99: double angle = atan2(cos(c) * sin(d - b), sin(c) * cos(a) - sin(a) 
      +                          * cos(c) * cos(d - b));
 13636  0E3D  0853               	movf	heading@c^(0+256),w
 13637  0E3E  0021               	movlb	1	; select bank1
 13638  0E3F  00B4               	movwf	cos@f^(0+128)
 13639  0E40  0022               	movlb	2	; select bank2
 13640  0E41  0854               	movf	(heading@c+1)^(0+256),w
 13641  0E42  0021               	movlb	1	; select bank1
 13642  0E43  00B5               	movwf	(cos@f+1)^(0+128)
 13643  0E44  0022               	movlb	2	; select bank2
 13644  0E45  0855               	movf	(heading@c+2)^(0+256),w
 13645  0E46  0021               	movlb	1	; select bank1
 13646  0E47  00B6               	movwf	(cos@f+2)^(0+128)
 13647  0E48  31A4  2494  318C   	fcall	_cos
 13648  0E4B  0021               	movlb	1	; select bank1
 13649  0E4C  0834               	movf	?_cos^(0+128),w
 13650  0E4D  0022               	movlb	2	; select bank2
 13651  0E4E  00A6               	movwf	_heading$1901^(0+256)
 13652  0E4F  0021               	movlb	1	; select bank1
 13653  0E50  0835               	movf	(?_cos+1)^(0+128),w
 13654  0E51  0022               	movlb	2	; select bank2
 13655  0E52  00A7               	movwf	(_heading$1901+1)^(0+256)
 13656  0E53  0021               	movlb	1	; select bank1
 13657  0E54  0836               	movf	(?_cos+2)^(0+128),w
 13658  0E55  0022               	movlb	2	; select bank2
 13659  0E56  00A8               	movwf	(_heading$1901+2)^(0+256)
 13660                           
 13661                           ;GPS_distance.c: 97: else
 13662                           ;GPS_distance.c: 98: {
 13663                           ;GPS_distance.c: 99: double angle = atan2(cos(c) * sin(d - b), sin(c) * cos(a) - sin(a) 
      +                          * cos(c) * cos(d - b));
 13664  0E57  084D               	movf	heading@b^(0+256),w
 13665  0E58  0020               	movlb	0	; select bank0
 13666  0E59  00A0               	movwf	___ftneg@f1
 13667  0E5A  0022               	movlb	2	; select bank2
 13668  0E5B  084E               	movf	(heading@b+1)^(0+256),w
 13669  0E5C  0020               	movlb	0	; select bank0
 13670  0E5D  00A1               	movwf	___ftneg@f1+1
 13671  0E5E  0022               	movlb	2	; select bank2
 13672  0E5F  084F               	movf	(heading@b+2)^(0+256),w
 13673  0E60  0020               	movlb	0	; select bank0
 13674  0E61  00A2               	movwf	___ftneg@f1+2
 13675  0E62  3198  2003  318C   	fcall	___ftneg
 13676  0E65  0020               	movlb	0	; select bank0
 13677  0E66  0820               	movf	?___ftneg,w
 13678  0E67  00DC               	movwf	___ftadd@f2
 13679  0E68  0821               	movf	?___ftneg+1,w
 13680  0E69  00DD               	movwf	___ftadd@f2+1
 13681  0E6A  0822               	movf	?___ftneg+2,w
 13682  0E6B  00DE               	movwf	___ftadd@f2+2
 13683  0E6C  0022               	movlb	2	; select bank2
 13684  0E6D  0850               	movf	heading@d^(0+256),w
 13685  0E6E  0020               	movlb	0	; select bank0
 13686  0E6F  00D9               	movwf	___ftadd@f1
 13687  0E70  0022               	movlb	2	; select bank2
 13688  0E71  0851               	movf	(heading@d+1)^(0+256),w
 13689  0E72  0020               	movlb	0	; select bank0
 13690  0E73  00DA               	movwf	___ftadd@f1+1
 13691  0E74  0022               	movlb	2	; select bank2
 13692  0E75  0852               	movf	(heading@d+2)^(0+256),w
 13693  0E76  0020               	movlb	0	; select bank0
 13694  0E77  00DB               	movwf	___ftadd@f1+2
 13695  0E78  3198  20C2  318C   	fcall	___ftadd
 13696  0E7B  0020               	movlb	0	; select bank0
 13697  0E7C  0859               	movf	?___ftadd,w
 13698  0E7D  0022               	movlb	2	; select bank2
 13699  0E7E  00A9               	movwf	_heading$1902^(0+256)
 13700  0E7F  0020               	movlb	0	; select bank0
 13701  0E80  085A               	movf	?___ftadd+1,w
 13702  0E81  0022               	movlb	2	; select bank2
 13703  0E82  00AA               	movwf	(_heading$1902+1)^(0+256)
 13704  0E83  0020               	movlb	0	; select bank0
 13705  0E84  085B               	movf	?___ftadd+2,w
 13706  0E85  0022               	movlb	2	; select bank2
 13707  0E86  00AB               	movwf	(_heading$1902+2)^(0+256)
 13708                           
 13709                           ;GPS_distance.c: 97: else
 13710                           ;GPS_distance.c: 98: {
 13711                           ;GPS_distance.c: 99: double angle = atan2(cos(c) * sin(d - b), sin(c) * cos(a) - sin(a) 
      +                          * cos(c) * cos(d - b));
 13712  0E87  0823               	movf	_heading$1900^(0+256),w
 13713  0E88  0020               	movlb	0	; select bank0
 13714  0E89  00B9               	movwf	___ftmul@f2
 13715  0E8A  0022               	movlb	2	; select bank2
 13716  0E8B  0824               	movf	(_heading$1900+1)^(0+256),w
 13717  0E8C  0020               	movlb	0	; select bank0
 13718  0E8D  00BA               	movwf	___ftmul@f2+1
 13719  0E8E  0022               	movlb	2	; select bank2
 13720  0E8F  0825               	movf	(_heading$1900+2)^(0+256),w
 13721  0E90  0020               	movlb	0	; select bank0
 13722  0E91  00BB               	movwf	___ftmul@f2+2
 13723  0E92  0022               	movlb	2	; select bank2
 13724  0E93  0826               	movf	_heading$1901^(0+256),w
 13725  0E94  0020               	movlb	0	; select bank0
 13726  0E95  00B6               	movwf	___ftmul@f1
 13727  0E96  0022               	movlb	2	; select bank2
 13728  0E97  0827               	movf	(_heading$1901+1)^(0+256),w
 13729  0E98  0020               	movlb	0	; select bank0
 13730  0E99  00B7               	movwf	___ftmul@f1+1
 13731  0E9A  0022               	movlb	2	; select bank2
 13732  0E9B  0828               	movf	(_heading$1901+2)^(0+256),w
 13733  0E9C  0020               	movlb	0	; select bank0
 13734  0E9D  00B8               	movwf	___ftmul@f1+2
 13735  0E9E  31A7  274C  318C   	fcall	___ftmul
 13736  0EA1  0020               	movlb	0	; select bank0
 13737  0EA2  0836               	movf	?___ftmul,w
 13738  0EA3  0022               	movlb	2	; select bank2
 13739  0EA4  00AC               	movwf	_heading$1903^(0+256)
 13740  0EA5  0020               	movlb	0	; select bank0
 13741  0EA6  0837               	movf	?___ftmul+1,w
 13742  0EA7  0022               	movlb	2	; select bank2
 13743  0EA8  00AD               	movwf	(_heading$1903+1)^(0+256)
 13744  0EA9  0020               	movlb	0	; select bank0
 13745  0EAA  0838               	movf	?___ftmul+2,w
 13746  0EAB  0022               	movlb	2	; select bank2
 13747  0EAC  00AE               	movwf	(_heading$1903+2)^(0+256)
 13748                           
 13749                           ;GPS_distance.c: 97: else
 13750                           ;GPS_distance.c: 98: {
 13751                           ;GPS_distance.c: 99: double angle = atan2(cos(c) * sin(d - b), sin(c) * cos(a) - sin(a) 
      +                          * cos(c) * cos(d - b));
 13752  0EAD  0829               	movf	_heading$1902^(0+256),w
 13753  0EAE  0021               	movlb	1	; select bank1
 13754  0EAF  00B4               	movwf	cos@f^(0+128)
 13755  0EB0  0022               	movlb	2	; select bank2
 13756  0EB1  082A               	movf	(_heading$1902+1)^(0+256),w
 13757  0EB2  0021               	movlb	1	; select bank1
 13758  0EB3  00B5               	movwf	(cos@f+1)^(0+128)
 13759  0EB4  0022               	movlb	2	; select bank2
 13760  0EB5  082B               	movf	(_heading$1902+2)^(0+256),w
 13761  0EB6  0021               	movlb	1	; select bank1
 13762  0EB7  00B6               	movwf	(cos@f+2)^(0+128)
 13763  0EB8  31A4  2494  318C   	fcall	_cos
 13764  0EBB  0021               	movlb	1	; select bank1
 13765  0EBC  0834               	movf	?_cos^(0+128),w
 13766  0EBD  0022               	movlb	2	; select bank2
 13767  0EBE  00AF               	movwf	_heading$1904^(0+256)
 13768  0EBF  0021               	movlb	1	; select bank1
 13769  0EC0  0835               	movf	(?_cos+1)^(0+128),w
 13770  0EC1  0022               	movlb	2	; select bank2
 13771  0EC2  00B0               	movwf	(_heading$1904+1)^(0+256)
 13772  0EC3  0021               	movlb	1	; select bank1
 13773  0EC4  0836               	movf	(?_cos+2)^(0+128),w
 13774  0EC5  0022               	movlb	2	; select bank2
 13775  0EC6  00B1               	movwf	(_heading$1904+2)^(0+256)
 13776                           
 13777                           ;GPS_distance.c: 97: else
 13778                           ;GPS_distance.c: 98: {
 13779                           ;GPS_distance.c: 99: double angle = atan2(cos(c) * sin(d - b), sin(c) * cos(a) - sin(a) 
      +                          * cos(c) * cos(d - b));
 13780  0EC7  084A               	movf	heading@a^(0+256),w
 13781  0EC8  0021               	movlb	1	; select bank1
 13782  0EC9  00B4               	movwf	cos@f^(0+128)
 13783  0ECA  0022               	movlb	2	; select bank2
 13784  0ECB  084B               	movf	(heading@a+1)^(0+256),w
 13785  0ECC  0021               	movlb	1	; select bank1
 13786  0ECD  00B5               	movwf	(cos@f+1)^(0+128)
 13787  0ECE  0022               	movlb	2	; select bank2
 13788  0ECF  084C               	movf	(heading@a+2)^(0+256),w
 13789  0ED0  0021               	movlb	1	; select bank1
 13790  0ED1  00B6               	movwf	(cos@f+2)^(0+128)
 13791  0ED2  31A4  2494  318C   	fcall	_cos
 13792  0ED5  0021               	movlb	1	; select bank1
 13793  0ED6  0834               	movf	?_cos^(0+128),w
 13794  0ED7  0022               	movlb	2	; select bank2
 13795  0ED8  00B2               	movwf	_heading$1905^(0+256)
 13796  0ED9  0021               	movlb	1	; select bank1
 13797  0EDA  0835               	movf	(?_cos+1)^(0+128),w
 13798  0EDB  0022               	movlb	2	; select bank2
 13799  0EDC  00B3               	movwf	(_heading$1905+1)^(0+256)
 13800  0EDD  0021               	movlb	1	; select bank1
 13801  0EDE  0836               	movf	(?_cos+2)^(0+128),w
 13802  0EDF  0022               	movlb	2	; select bank2
 13803  0EE0  00B4               	movwf	(_heading$1905+2)^(0+256)
 13804                           
 13805                           ;GPS_distance.c: 97: else
 13806                           ;GPS_distance.c: 98: {
 13807                           ;GPS_distance.c: 99: double angle = atan2(cos(c) * sin(d - b), sin(c) * cos(a) - sin(a) 
      +                          * cos(c) * cos(d - b));
 13808  0EE1  0853               	movf	heading@c^(0+256),w
 13809  0EE2  0021               	movlb	1	; select bank1
 13810  0EE3  00A6               	movwf	sin@f^(0+128)
 13811  0EE4  0022               	movlb	2	; select bank2
 13812  0EE5  0854               	movf	(heading@c+1)^(0+256),w
 13813  0EE6  0021               	movlb	1	; select bank1
 13814  0EE7  00A7               	movwf	(sin@f+1)^(0+128)
 13815  0EE8  0022               	movlb	2	; select bank2
 13816  0EE9  0855               	movf	(heading@c+2)^(0+256),w
 13817  0EEA  0021               	movlb	1	; select bank1
 13818  0EEB  00A8               	movwf	(sin@f+2)^(0+128)
 13819  0EEC  319C  241C  318C   	fcall	_sin
 13820  0EEF  0021               	movlb	1	; select bank1
 13821  0EF0  0826               	movf	?_sin^(0+128),w
 13822  0EF1  0022               	movlb	2	; select bank2
 13823  0EF2  00B5               	movwf	_heading$1906^(0+256)
 13824  0EF3  0021               	movlb	1	; select bank1
 13825  0EF4  0827               	movf	(?_sin+1)^(0+128),w
 13826  0EF5  0022               	movlb	2	; select bank2
 13827  0EF6  00B6               	movwf	(_heading$1906+1)^(0+256)
 13828  0EF7  0021               	movlb	1	; select bank1
 13829  0EF8  0828               	movf	(?_sin+2)^(0+128),w
 13830  0EF9  0022               	movlb	2	; select bank2
 13831  0EFA  00B7               	movwf	(_heading$1906+2)^(0+256)
 13832                           
 13833                           ;GPS_distance.c: 97: else
 13834                           ;GPS_distance.c: 98: {
 13835                           ;GPS_distance.c: 99: double angle = atan2(cos(c) * sin(d - b), sin(c) * cos(a) - sin(a) 
      +                          * cos(c) * cos(d - b));
 13836  0EFB  0844               	movf	_heading$1898^(0+256),w
 13837  0EFC  0020               	movlb	0	; select bank0
 13838  0EFD  00B6               	movwf	___ftmul@f1
 13839  0EFE  0022               	movlb	2	; select bank2
 13840  0EFF  0845               	movf	(_heading$1898+1)^(0+256),w
 13841  0F00  0020               	movlb	0	; select bank0
 13842  0F01  00B7               	movwf	___ftmul@f1+1
 13843  0F02  0022               	movlb	2	; select bank2
 13844  0F03  0846               	movf	(_heading$1898+2)^(0+256),w
 13845  0F04  0020               	movlb	0	; select bank0
 13846  0F05  00B8               	movwf	___ftmul@f1+2
 13847  0F06  0022               	movlb	2	; select bank2
 13848  0F07  0847               	movf	_heading$1899^(0+256),w
 13849  0F08  0020               	movlb	0	; select bank0
 13850  0F09  00B9               	movwf	___ftmul@f2
 13851  0F0A  0022               	movlb	2	; select bank2
 13852  0F0B  0848               	movf	(_heading$1899+1)^(0+256),w
 13853  0F0C  0020               	movlb	0	; select bank0
 13854  0F0D  00BA               	movwf	___ftmul@f2+1
 13855  0F0E  0022               	movlb	2	; select bank2
 13856  0F0F  0849               	movf	(_heading$1899+2)^(0+256),w
 13857  0F10  0020               	movlb	0	; select bank0
 13858  0F11  00BB               	movwf	___ftmul@f2+2
 13859  0F12  31A7  274C  318C   	fcall	___ftmul
 13860  0F15  0020               	movlb	0	; select bank0
 13861  0F16  0836               	movf	?___ftmul,w
 13862  0F17  0022               	movlb	2	; select bank2
 13863  0F18  00B8               	movwf	_heading$1907^(0+256)
 13864  0F19  0020               	movlb	0	; select bank0
 13865  0F1A  0837               	movf	?___ftmul+1,w
 13866  0F1B  0022               	movlb	2	; select bank2
 13867  0F1C  00B9               	movwf	(_heading$1907+1)^(0+256)
 13868  0F1D  0020               	movlb	0	; select bank0
 13869  0F1E  0838               	movf	?___ftmul+2,w
 13870  0F1F  0022               	movlb	2	; select bank2
 13871  0F20  00BA               	movwf	(_heading$1907+2)^(0+256)
 13872                           
 13873                           ;GPS_distance.c: 97: else
 13874                           ;GPS_distance.c: 98: {
 13875                           ;GPS_distance.c: 99: double angle = atan2(cos(c) * sin(d - b), sin(c) * cos(a) - sin(a) 
      +                          * cos(c) * cos(d - b));
 13876  0F21  082C               	movf	_heading$1903^(0+256),w
 13877  0F22  0020               	movlb	0	; select bank0
 13878  0F23  00B9               	movwf	___ftmul@f2
 13879  0F24  0022               	movlb	2	; select bank2
 13880  0F25  082D               	movf	(_heading$1903+1)^(0+256),w
 13881  0F26  0020               	movlb	0	; select bank0
 13882  0F27  00BA               	movwf	___ftmul@f2+1
 13883  0F28  0022               	movlb	2	; select bank2
 13884  0F29  082E               	movf	(_heading$1903+2)^(0+256),w
 13885  0F2A  0020               	movlb	0	; select bank0
 13886  0F2B  00BB               	movwf	___ftmul@f2+2
 13887  0F2C  0022               	movlb	2	; select bank2
 13888  0F2D  082F               	movf	_heading$1904^(0+256),w
 13889  0F2E  0020               	movlb	0	; select bank0
 13890  0F2F  00B6               	movwf	___ftmul@f1
 13891  0F30  0022               	movlb	2	; select bank2
 13892  0F31  0830               	movf	(_heading$1904+1)^(0+256),w
 13893  0F32  0020               	movlb	0	; select bank0
 13894  0F33  00B7               	movwf	___ftmul@f1+1
 13895  0F34  0022               	movlb	2	; select bank2
 13896  0F35  0831               	movf	(_heading$1904+2)^(0+256),w
 13897  0F36  0020               	movlb	0	; select bank0
 13898  0F37  00B8               	movwf	___ftmul@f1+2
 13899  0F38  31A7  274C  318C   	fcall	___ftmul
 13900  0F3B  0020               	movlb	0	; select bank0
 13901  0F3C  0836               	movf	?___ftmul,w
 13902  0F3D  00A0               	movwf	___ftneg@f1
 13903  0F3E  0837               	movf	?___ftmul+1,w
 13904  0F3F  00A1               	movwf	___ftneg@f1+1
 13905  0F40  0838               	movf	?___ftmul+2,w
 13906  0F41  00A2               	movwf	___ftneg@f1+2
 13907  0F42  3198  2003  318C   	fcall	___ftneg
 13908  0F45  0020               	movlb	0	; select bank0
 13909  0F46  0820               	movf	?___ftneg,w
 13910  0F47  00D9               	movwf	___ftadd@f1
 13911  0F48  0821               	movf	?___ftneg+1,w
 13912  0F49  00DA               	movwf	___ftadd@f1+1
 13913  0F4A  0822               	movf	?___ftneg+2,w
 13914  0F4B  00DB               	movwf	___ftadd@f1+2
 13915  0F4C  0022               	movlb	2	; select bank2
 13916  0F4D  0832               	movf	_heading$1905^(0+256),w
 13917  0F4E  0020               	movlb	0	; select bank0
 13918  0F4F  00B6               	movwf	___ftmul@f1
 13919  0F50  0022               	movlb	2	; select bank2
 13920  0F51  0833               	movf	(_heading$1905+1)^(0+256),w
 13921  0F52  0020               	movlb	0	; select bank0
 13922  0F53  00B7               	movwf	___ftmul@f1+1
 13923  0F54  0022               	movlb	2	; select bank2
 13924  0F55  0834               	movf	(_heading$1905+2)^(0+256),w
 13925  0F56  0020               	movlb	0	; select bank0
 13926  0F57  00B8               	movwf	___ftmul@f1+2
 13927  0F58  0022               	movlb	2	; select bank2
 13928  0F59  0835               	movf	_heading$1906^(0+256),w
 13929  0F5A  0020               	movlb	0	; select bank0
 13930  0F5B  00B9               	movwf	___ftmul@f2
 13931  0F5C  0022               	movlb	2	; select bank2
 13932  0F5D  0836               	movf	(_heading$1906+1)^(0+256),w
 13933  0F5E  0020               	movlb	0	; select bank0
 13934  0F5F  00BA               	movwf	___ftmul@f2+1
 13935  0F60  0022               	movlb	2	; select bank2
 13936  0F61  0837               	movf	(_heading$1906+2)^(0+256),w
 13937  0F62  0020               	movlb	0	; select bank0
 13938  0F63  00BB               	movwf	___ftmul@f2+2
 13939  0F64  31A7  274C  318C   	fcall	___ftmul
 13940  0F67  0020               	movlb	0	; select bank0
 13941  0F68  0836               	movf	?___ftmul,w
 13942  0F69  00DC               	movwf	___ftadd@f2
 13943  0F6A  0837               	movf	?___ftmul+1,w
 13944  0F6B  00DD               	movwf	___ftadd@f2+1
 13945  0F6C  0838               	movf	?___ftmul+2,w
 13946  0F6D  00DE               	movwf	___ftadd@f2+2
 13947  0F6E  3198  20C2  318C   	fcall	___ftadd
 13948  0F71  0020               	movlb	0	; select bank0
 13949  0F72  0859               	movf	?___ftadd,w
 13950  0F73  0022               	movlb	2	; select bank2
 13951  0F74  00BB               	movwf	_heading$1908^(0+256)
 13952  0F75  0020               	movlb	0	; select bank0
 13953  0F76  085A               	movf	?___ftadd+1,w
 13954  0F77  0022               	movlb	2	; select bank2
 13955  0F78  00BC               	movwf	(_heading$1908+1)^(0+256)
 13956  0F79  0020               	movlb	0	; select bank0
 13957  0F7A  085B               	movf	?___ftadd+2,w
 13958  0F7B  0022               	movlb	2	; select bank2
 13959  0F7C  00BD               	movwf	(_heading$1908+2)^(0+256)
 13960                           
 13961                           ;GPS_distance.c: 97: else
 13962                           ;GPS_distance.c: 98: {
 13963                           ;GPS_distance.c: 99: double angle = atan2(cos(c) * sin(d - b), sin(c) * cos(a) - sin(a) 
      +                          * cos(c) * cos(d - b));
 13964  0F7D  0838               	movf	_heading$1907^(0+256),w
 13965  0F7E  0021               	movlb	1	; select bank1
 13966  0F7F  00BA               	movwf	atan2@y^(0+128)
 13967  0F80  0022               	movlb	2	; select bank2
 13968  0F81  0839               	movf	(_heading$1907+1)^(0+256),w
 13969  0F82  0021               	movlb	1	; select bank1
 13970  0F83  00BB               	movwf	(atan2@y+1)^(0+128)
 13971  0F84  0022               	movlb	2	; select bank2
 13972  0F85  083A               	movf	(_heading$1907+2)^(0+256),w
 13973  0F86  0021               	movlb	1	; select bank1
 13974  0F87  00BC               	movwf	(atan2@y+2)^(0+128)
 13975  0F88  0022               	movlb	2	; select bank2
 13976  0F89  083B               	movf	_heading$1908^(0+256),w
 13977  0F8A  0021               	movlb	1	; select bank1
 13978  0F8B  00BD               	movwf	atan2@x^(0+128)
 13979  0F8C  0022               	movlb	2	; select bank2
 13980  0F8D  083C               	movf	(_heading$1908+1)^(0+256),w
 13981  0F8E  0021               	movlb	1	; select bank1
 13982  0F8F  00BE               	movwf	(atan2@x+1)^(0+128)
 13983  0F90  0022               	movlb	2	; select bank2
 13984  0F91  083D               	movf	(_heading$1908+2)^(0+256),w
 13985  0F92  0021               	movlb	1	; select bank1
 13986  0F93  00BF               	movwf	(atan2@x+2)^(0+128)
 13987  0F94  3193  23CC  318C   	fcall	_atan2
 13988  0F97  0021               	movlb	1	; select bank1
 13989  0F98  083A               	movf	?_atan2^(0+128),w
 13990  0F99  0022               	movlb	2	; select bank2
 13991  0F9A  00A0               	movwf	heading@angle^(0+256)
 13992  0F9B  0021               	movlb	1	; select bank1
 13993  0F9C  083B               	movf	(?_atan2+1)^(0+128),w
 13994  0F9D  0022               	movlb	2	; select bank2
 13995  0F9E  00A1               	movwf	(heading@angle+1)^(0+256)
 13996  0F9F  0021               	movlb	1	; select bank1
 13997  0FA0  083C               	movf	(?_atan2+2)^(0+128),w
 13998  0FA1  0022               	movlb	2	; select bank2
 13999  0FA2  00A2               	movwf	(heading@angle+2)^(0+256)
 14000                           
 14001                           ;GPS_distance.c: 100: return fmod( (angle * 180 / 3.14159265358979323846 + 360), 360 );
 14002  0FA3  3000               	movlw	0
 14003  0FA4  0020               	movlb	0	; select bank0
 14004  0FA5  00D9               	movwf	___ftadd@f1
 14005  0FA6  30B4               	movlw	180
 14006  0FA7  00DA               	movwf	___ftadd@f1+1
 14007  0FA8  3043               	movlw	67
 14008  0FA9  00DB               	movwf	___ftadd@f1+2
 14009  0FAA  3010               	movlw	16
 14010  0FAB  00C6               	movwf	___ftdiv@f2
 14011  0FAC  3049               	movlw	73
 14012  0FAD  00C7               	movwf	___ftdiv@f2+1
 14013  0FAE  3040               	movlw	64
 14014  0FAF  00C8               	movwf	___ftdiv@f2+2
 14015  0FB0  3000               	movlw	0
 14016  0FB1  00B6               	movwf	___ftmul@f1
 14017  0FB2  3034               	movlw	52
 14018  0FB3  00B7               	movwf	___ftmul@f1+1
 14019  0FB4  3043               	movlw	67
 14020  0FB5  00B8               	movwf	___ftmul@f1+2
 14021  0FB6  0022               	movlb	2	; select bank2
 14022  0FB7  0820               	movf	heading@angle^(0+256),w
 14023  0FB8  0020               	movlb	0	; select bank0
 14024  0FB9  00B9               	movwf	___ftmul@f2
 14025  0FBA  0022               	movlb	2	; select bank2
 14026  0FBB  0821               	movf	(heading@angle+1)^(0+256),w
 14027  0FBC  0020               	movlb	0	; select bank0
 14028  0FBD  00BA               	movwf	___ftmul@f2+1
 14029  0FBE  0022               	movlb	2	; select bank2
 14030  0FBF  0822               	movf	(heading@angle+2)^(0+256),w
 14031  0FC0  0020               	movlb	0	; select bank0
 14032  0FC1  00BB               	movwf	___ftmul@f2+2
 14033  0FC2  31A7  274C  318C   	fcall	___ftmul
 14034  0FC5  0020               	movlb	0	; select bank0
 14035  0FC6  0836               	movf	?___ftmul,w
 14036  0FC7  00C9               	movwf	___ftdiv@f1
 14037  0FC8  0837               	movf	?___ftmul+1,w
 14038  0FC9  00CA               	movwf	___ftdiv@f1+1
 14039  0FCA  0838               	movf	?___ftmul+2,w
 14040  0FCB  00CB               	movwf	___ftdiv@f1+2
 14041  0FCC  31A6  26A3  318C   	fcall	___ftdiv
 14042  0FCF  0020               	movlb	0	; select bank0
 14043  0FD0  0846               	movf	?___ftdiv,w
 14044  0FD1  00DC               	movwf	___ftadd@f2
 14045  0FD2  0847               	movf	?___ftdiv+1,w
 14046  0FD3  00DD               	movwf	___ftadd@f2+1
 14047  0FD4  0848               	movf	?___ftdiv+2,w
 14048  0FD5  00DE               	movwf	___ftadd@f2+2
 14049  0FD6  3198  20C2  318C   	fcall	___ftadd
 14050  0FD9  0020               	movlb	0	; select bank0
 14051  0FDA  0859               	movf	?___ftadd,w
 14052  0FDB  0022               	movlb	2	; select bank2
 14053  0FDC  00BE               	movwf	_heading$1909^(0+256)
 14054  0FDD  0020               	movlb	0	; select bank0
 14055  0FDE  085A               	movf	?___ftadd+1,w
 14056  0FDF  0022               	movlb	2	; select bank2
 14057  0FE0  00BF               	movwf	(_heading$1909+1)^(0+256)
 14058  0FE1  0020               	movlb	0	; select bank0
 14059  0FE2  085B               	movf	?___ftadd+2,w
 14060  0FE3  0022               	movlb	2	; select bank2
 14061  0FE4  00C0               	movwf	(_heading$1909+2)^(0+256)
 14062                           
 14063                           ;GPS_distance.c: 100: return fmod( (angle * 180 / 3.14159265358979323846 + 360), 360 );
 14064  0FE5  083E               	movf	_heading$1909^(0+256),w
 14065  0FE6  0021               	movlb	1	; select bank1
 14066  0FE7  00A0               	movwf	fmod@x^(0+128)
 14067  0FE8  0022               	movlb	2	; select bank2
 14068  0FE9  083F               	movf	(_heading$1909+1)^(0+256),w
 14069  0FEA  0021               	movlb	1	; select bank1
 14070  0FEB  00A1               	movwf	(fmod@x+1)^(0+128)
 14071  0FEC  0022               	movlb	2	; select bank2
 14072  0FED  0840               	movf	(_heading$1909+2)^(0+256),w
 14073  0FEE  0021               	movlb	1	; select bank1
 14074  0FEF  00A2               	movwf	(fmod@x+2)^(0+128)
 14075  0FF0  3000               	movlw	0
 14076  0FF1  00A3               	movwf	fmod@y^(0+128)
 14077  0FF2  30B4               	movlw	180
 14078  0FF3  00A4               	movwf	(fmod@y+1)^(0+128)
 14079  0FF4  3043               	movlw	67
 14080  0FF5  00A5               	movwf	(fmod@y+2)^(0+128)
 14081  0FF6  31A6  261C         	fcall	_fmod
 14082  0FF8  0021               	movlb	1	; select bank1
 14083  0FF9  0820               	movf	?_fmod^(0+128),w
 14084  0FFA  00CF               	movwf	?_heading^(0+128)
 14085  0FFB  0821               	movf	(?_fmod+1)^(0+128),w
 14086  0FFC  00D0               	movwf	(?_heading+1)^(0+128)
 14087  0FFD  0822               	movf	(?_fmod+2)^(0+128),w
 14088  0FFE  00D1               	movwf	(?_heading+2)^(0+128)
 14089  0FFF  0008               	return
 14090  1000                     __end_of_heading:	
 14091                           
 14092                           	psect	text18
 14093  261C                     __ptext18:	
 14094 ;; *************** function _fmod *****************
 14095 ;; Defined at:
 14096 ;;		line 3 in file "/opt/microchip/xc8/v1.35/sources/common/fmod.c"
 14097 ;; Parameters:    Size  Location     Type
 14098 ;;  x               3    0[BANK1 ] unsigned char 
 14099 ;;  y               3    3[BANK1 ] unsigned char 
 14100 ;; Auto vars:     Size  Location     Type
 14101 ;;  n               3    6[BANK1 ] unsigned char 
 14102 ;; Return value:  Size  Location     Type
 14103 ;;                  3    0[BANK1 ] unsigned char 
 14104 ;; Registers used:
 14105 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14106 ;; Tracked objects:
 14107 ;;		On entry : 0/0
 14108 ;;		On exit  : 0/0
 14109 ;;		Unchanged: 0/0
 14110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14111 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14112 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14114 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14115 ;;Total ram usage:        9 bytes
 14116 ;; Hardware stack levels used:    1
 14117 ;; Hardware stack levels required when called:    8
 14118 ;; This function calls:
 14119 ;;		___ftadd
 14120 ;;		___ftdiv
 14121 ;;		___ftmul
 14122 ;;		___ftneg
 14123 ;;		_trunc
 14124 ;; This function is called by:
 14125 ;;		_heading
 14126 ;; This function uses a non-reentrant model
 14127 ;;
 14128                           
 14129                           
 14130                           ;psect for function _fmod
 14131  261C                     _fmod:	
 14132                           
 14133                           ;incstack = 0
 14134                           ; Regs used in _fmod: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14135  261C  0021               	movlb	1	; select bank1
 14136  261D  0823               	movf	fmod@y^(0+128),w
 14137  261E  0020               	movlb	0	; select bank0
 14138  261F  00C6               	movwf	___ftdiv@f2
 14139  2620  0021               	movlb	1	; select bank1
 14140  2621  0824               	movf	(fmod@y+1)^(0+128),w
 14141  2622  0020               	movlb	0	; select bank0
 14142  2623  00C7               	movwf	___ftdiv@f2+1
 14143  2624  0021               	movlb	1	; select bank1
 14144  2625  0825               	movf	(fmod@y+2)^(0+128),w
 14145  2626  0020               	movlb	0	; select bank0
 14146  2627  00C8               	movwf	___ftdiv@f2+2
 14147  2628  0021               	movlb	1	; select bank1
 14148  2629  0820               	movf	fmod@x^(0+128),w
 14149  262A  0020               	movlb	0	; select bank0
 14150  262B  00C9               	movwf	___ftdiv@f1
 14151  262C  0021               	movlb	1	; select bank1
 14152  262D  0821               	movf	(fmod@x+1)^(0+128),w
 14153  262E  0020               	movlb	0	; select bank0
 14154  262F  00CA               	movwf	___ftdiv@f1+1
 14155  2630  0021               	movlb	1	; select bank1
 14156  2631  0822               	movf	(fmod@x+2)^(0+128),w
 14157  2632  0020               	movlb	0	; select bank0
 14158  2633  00CB               	movwf	___ftdiv@f1+2
 14159  2634  31A6  26A3  31A6   	fcall	___ftdiv
 14160  2637  0020               	movlb	0	; select bank0
 14161  2638  0846               	movf	?___ftdiv,w
 14162  2639  0021               	movlb	1	; select bank1
 14163  263A  00A6               	movwf	fmod@n^(0+128)
 14164  263B  0020               	movlb	0	; select bank0
 14165  263C  0847               	movf	?___ftdiv+1,w
 14166  263D  0021               	movlb	1	; select bank1
 14167  263E  00A7               	movwf	(fmod@n+1)^(0+128)
 14168  263F  0020               	movlb	0	; select bank0
 14169  2640  0848               	movf	?___ftdiv+2,w
 14170  2641  0021               	movlb	1	; select bank1
 14171  2642  00A8               	movwf	(fmod@n+2)^(0+128)
 14172  2643  0826               	movf	fmod@n^(0+128),w
 14173  2644  0020               	movlb	0	; select bank0
 14174  2645  00E5               	movwf	trunc@x
 14175  2646  0021               	movlb	1	; select bank1
 14176  2647  0827               	movf	(fmod@n+1)^(0+128),w
 14177  2648  0020               	movlb	0	; select bank0
 14178  2649  00E6               	movwf	trunc@x+1
 14179  264A  0021               	movlb	1	; select bank1
 14180  264B  0828               	movf	(fmod@n+2)^(0+128),w
 14181  264C  0020               	movlb	0	; select bank0
 14182  264D  00E7               	movwf	trunc@x+2
 14183  264E  31A1  21DD  31A6   	fcall	_trunc
 14184  2651  0020               	movlb	0	; select bank0
 14185  2652  0865               	movf	?_trunc,w
 14186  2653  0021               	movlb	1	; select bank1
 14187  2654  00A6               	movwf	fmod@n^(0+128)
 14188  2655  0020               	movlb	0	; select bank0
 14189  2656  0866               	movf	?_trunc+1,w
 14190  2657  0021               	movlb	1	; select bank1
 14191  2658  00A7               	movwf	(fmod@n+1)^(0+128)
 14192  2659  0020               	movlb	0	; select bank0
 14193  265A  0867               	movf	?_trunc+2,w
 14194  265B  0021               	movlb	1	; select bank1
 14195  265C  00A8               	movwf	(fmod@n+2)^(0+128)
 14196  265D  0820               	movf	fmod@x^(0+128),w
 14197  265E  0020               	movlb	0	; select bank0
 14198  265F  00D9               	movwf	___ftadd@f1
 14199  2660  0021               	movlb	1	; select bank1
 14200  2661  0821               	movf	(fmod@x+1)^(0+128),w
 14201  2662  0020               	movlb	0	; select bank0
 14202  2663  00DA               	movwf	___ftadd@f1+1
 14203  2664  0021               	movlb	1	; select bank1
 14204  2665  0822               	movf	(fmod@x+2)^(0+128),w
 14205  2666  0020               	movlb	0	; select bank0
 14206  2667  00DB               	movwf	___ftadd@f1+2
 14207  2668  0021               	movlb	1	; select bank1
 14208  2669  0826               	movf	fmod@n^(0+128),w
 14209  266A  0020               	movlb	0	; select bank0
 14210  266B  00B9               	movwf	___ftmul@f2
 14211  266C  0021               	movlb	1	; select bank1
 14212  266D  0827               	movf	(fmod@n+1)^(0+128),w
 14213  266E  0020               	movlb	0	; select bank0
 14214  266F  00BA               	movwf	___ftmul@f2+1
 14215  2670  0021               	movlb	1	; select bank1
 14216  2671  0828               	movf	(fmod@n+2)^(0+128),w
 14217  2672  0020               	movlb	0	; select bank0
 14218  2673  00BB               	movwf	___ftmul@f2+2
 14219  2674  0021               	movlb	1	; select bank1
 14220  2675  0823               	movf	fmod@y^(0+128),w
 14221  2676  0020               	movlb	0	; select bank0
 14222  2677  00B6               	movwf	___ftmul@f1
 14223  2678  0021               	movlb	1	; select bank1
 14224  2679  0824               	movf	(fmod@y+1)^(0+128),w
 14225  267A  0020               	movlb	0	; select bank0
 14226  267B  00B7               	movwf	___ftmul@f1+1
 14227  267C  0021               	movlb	1	; select bank1
 14228  267D  0825               	movf	(fmod@y+2)^(0+128),w
 14229  267E  0020               	movlb	0	; select bank0
 14230  267F  00B8               	movwf	___ftmul@f1+2
 14231  2680  31A7  274C  31A6   	fcall	___ftmul
 14232  2683  0020               	movlb	0	; select bank0
 14233  2684  0836               	movf	?___ftmul,w
 14234  2685  00A0               	movwf	___ftneg@f1
 14235  2686  0837               	movf	?___ftmul+1,w
 14236  2687  00A1               	movwf	___ftneg@f1+1
 14237  2688  0838               	movf	?___ftmul+2,w
 14238  2689  00A2               	movwf	___ftneg@f1+2
 14239  268A  3198  2003  31A6   	fcall	___ftneg
 14240  268D  0020               	movlb	0	; select bank0
 14241  268E  0820               	movf	?___ftneg,w
 14242  268F  00DC               	movwf	___ftadd@f2
 14243  2690  0821               	movf	?___ftneg+1,w
 14244  2691  00DD               	movwf	___ftadd@f2+1
 14245  2692  0822               	movf	?___ftneg+2,w
 14246  2693  00DE               	movwf	___ftadd@f2+2
 14247  2694  3198  20C2         	fcall	___ftadd
 14248  2696  0020               	movlb	0	; select bank0
 14249  2697  0859               	movf	?___ftadd,w
 14250  2698  0021               	movlb	1	; select bank1
 14251  2699  00A0               	movwf	?_fmod^(0+128)
 14252  269A  0020               	movlb	0	; select bank0
 14253  269B  085A               	movf	?___ftadd+1,w
 14254  269C  0021               	movlb	1	; select bank1
 14255  269D  00A1               	movwf	(?_fmod+1)^(0+128)
 14256  269E  0020               	movlb	0	; select bank0
 14257  269F  085B               	movf	?___ftadd+2,w
 14258  26A0  0021               	movlb	1	; select bank1
 14259  26A1  00A2               	movwf	(?_fmod+2)^(0+128)
 14260  26A2  0008               	return
 14261  26A3                     __end_of_fmod:	
 14262                           
 14263                           	psect	text19
 14264  21DD                     __ptext19:	
 14265 ;; *************** function _trunc *****************
 14266 ;; Defined at:
 14267 ;;		line 13 in file "/opt/microchip/xc8/v1.35/sources/common/trunc.c"
 14268 ;; Parameters:    Size  Location     Type
 14269 ;;  x               3   69[BANK0 ] unsigned char 
 14270 ;; Auto vars:     Size  Location     Type
 14271 ;;  i               3   73[BANK0 ] unsigned char 
 14272 ;;  expon           2   76[BANK0 ] int 
 14273 ;; Return value:  Size  Location     Type
 14274 ;;                  3   69[BANK0 ] int 
 14275 ;; Registers used:
 14276 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14277 ;; Tracked objects:
 14278 ;;		On entry : 0/0
 14279 ;;		On exit  : 0/0
 14280 ;;		Unchanged: 0/0
 14281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14282 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14283 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14284 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14285 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14286 ;;Total ram usage:        9 bytes
 14287 ;; Hardware stack levels used:    1
 14288 ;; Hardware stack levels required when called:    7
 14289 ;; This function calls:
 14290 ;;		___altoft
 14291 ;;		___fttol
 14292 ;;		_frexp
 14293 ;; This function is called by:
 14294 ;;		_fmod
 14295 ;; This function uses a non-reentrant model
 14296 ;;
 14297                           
 14298                           
 14299                           ;psect for function _trunc
 14300  21DD                     _trunc:	
 14301                           
 14302                           ;incstack = 0
 14303                           ; Regs used in _trunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 14304  21DD  0020               	movlb	0	; select bank0
 14305  21DE  0865               	movf	trunc@x,w
 14306  21DF  00A0               	movwf	frexp@value
 14307  21E0  0866               	movf	trunc@x+1,w
 14308  21E1  00A1               	movwf	frexp@value+1
 14309  21E2  0867               	movf	trunc@x+2,w
 14310  21E3  00A2               	movwf	frexp@value+2
 14311  21E4  306C               	movlw	(low (trunc@expon| 0))& (0+255)
 14312  21E5  00E8               	movwf	??_trunc
 14313  21E6  0868               	movf	??_trunc,w
 14314  21E7  00A3               	movwf	frexp@eptr
 14315  21E8  31AF  271A  31A1   	fcall	_frexp
 14316  21EB  0020               	movlb	0	; select bank0
 14317  21EC  1FED               	btfss	trunc@expon+1,7
 14318  21ED  29F5               	goto	l6176
 14319  21EE  3000               	movlw	0
 14320  21EF  00E5               	movwf	?_trunc
 14321  21F0  3000               	movlw	0
 14322  21F1  00E6               	movwf	?_trunc+1
 14323  21F2  3000               	movlw	0
 14324  21F3  00E7               	movwf	?_trunc+2
 14325  21F4  0008               	return
 14326  21F5                     l6176:	
 14327  21F5  3000               	movlw	0
 14328  21F6  026D               	subwf	trunc@expon+1,w
 14329  21F7  3015               	movlw	21
 14330  21F8  1903               	skipnz
 14331  21F9  026C               	subwf	trunc@expon,w
 14332  21FA  1803               	btfsc	3,0
 14333  21FB  0008               	return
 14334  21FC  0865               	movf	trunc@x,w
 14335  21FD  00CF               	movwf	___fttol@f1
 14336  21FE  0866               	movf	trunc@x+1,w
 14337  21FF  00D0               	movwf	___fttol@f1+1
 14338  2200  0867               	movf	trunc@x+2,w
 14339  2201  00D1               	movwf	___fttol@f1+2
 14340  2202  31A5  2595  31A1   	fcall	___fttol
 14341  2205  0020               	movlb	0	; select bank0
 14342  2206  0852               	movf	?___fttol+3,w
 14343  2207  00E0               	movwf	___altoft@c+3
 14344  2208  0851               	movf	?___fttol+2,w
 14345  2209  00DF               	movwf	___altoft@c+2
 14346  220A  0850               	movf	?___fttol+1,w
 14347  220B  00DE               	movwf	___altoft@c+1
 14348  220C  084F               	movf	?___fttol,w
 14349  220D  00DD               	movwf	___altoft@c
 14350  220E  31A1  2163         	fcall	___altoft
 14351  2210  0020               	movlb	0	; select bank0
 14352  2211  085D               	movf	?___altoft,w
 14353  2212  00E9               	movwf	trunc@i
 14354  2213  085E               	movf	?___altoft+1,w
 14355  2214  00EA               	movwf	trunc@i+1
 14356  2215  085F               	movf	?___altoft+2,w
 14357  2216  00EB               	movwf	trunc@i+2
 14358  2217  0869               	movf	trunc@i,w
 14359  2218  00E5               	movwf	?_trunc
 14360  2219  086A               	movf	trunc@i+1,w
 14361  221A  00E6               	movwf	?_trunc+1
 14362  221B  086B               	movf	trunc@i+2,w
 14363  221C  00E7               	movwf	?_trunc+2
 14364  221D  0008               	return
 14365  221E                     __end_of_trunc:	
 14366                           
 14367                           	psect	text20
 14368  13CC                     __ptext20:	
 14369 ;; *************** function _atan2 *****************
 14370 ;; Defined at:
 14371 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/atan2.c"
 14372 ;; Parameters:    Size  Location     Type
 14373 ;;  y               3   26[BANK1 ] int 
 14374 ;;  x               3   29[BANK1 ] int 
 14375 ;; Auto vars:     Size  Location     Type
 14376 ;;  v               3   44[BANK1 ] int 
 14377 ;; Return value:  Size  Location     Type
 14378 ;;                  3   26[BANK1 ] int 
 14379 ;; Registers used:
 14380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 14381 ;; Tracked objects:
 14382 ;;		On entry : 0/0
 14383 ;;		On exit  : 0/0
 14384 ;;		Unchanged: 0/0
 14385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14386 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14387 ;;      Locals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14389 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14390 ;;Total ram usage:       21 bytes
 14391 ;; Hardware stack levels used:    1
 14392 ;; Hardware stack levels required when called:    9
 14393 ;; This function calls:
 14394 ;;		___ftadd
 14395 ;;		___ftdiv
 14396 ;;		___ftge
 14397 ;;		___ftneg
 14398 ;;		___ftsub
 14399 ;;		_atan
 14400 ;;		_fabs
 14401 ;; This function is called by:
 14402 ;;		_heading
 14403 ;; This function uses a non-reentrant model
 14404 ;;
 14405                           
 14406                           
 14407                           ;psect for function _atan2
 14408  13CC                     _atan2:	
 14409                           
 14410                           ;incstack = 0
 14411                           ; Regs used in _atan2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 14412  13CC  0021               	movlb	1	; select bank1
 14413  13CD  083F               	movf	(atan2@x+2)^(0+128),w
 14414  13CE  043E               	iorwf	(atan2@x+1)^(0+128),w
 14415  13CF  043D               	iorwf	atan2@x^(0+128),w
 14416  13D0  1D03               	skipz
 14417  13D1  2C0C               	goto	l6354
 14418  13D2  083C               	movf	(atan2@y+2)^(0+128),w
 14419  13D3  043B               	iorwf	(atan2@y+1)^(0+128),w
 14420  13D4  043A               	iorwf	atan2@y^(0+128),w
 14421  13D5  1D03               	skipz
 14422  13D6  2BE4               	goto	l6342
 14423  13D7  3021               	movlw	33
 14424  13D8  0022               	movlb	2	; select bank2
 14425  13D9  00E8               	movwf	_errno^(0+256)
 14426  13DA  3000               	movlw	0
 14427  13DB  00E9               	movwf	(_errno^(0+256)+1)
 14428  13DC  3000               	movlw	0
 14429  13DD  0021               	movlb	1	; select bank1
 14430  13DE  00BA               	movwf	?_atan2^(0+128)
 14431  13DF  3000               	movlw	0
 14432  13E0  00BB               	movwf	(?_atan2+1)^(0+128)
 14433  13E1  3000               	movlw	0
 14434  13E2  00BC               	movwf	(?_atan2+2)^(0+128)
 14435  13E3  0008               	return
 14436  13E4                     l6342:	
 14437  13E4  3000               	movlw	0
 14438  13E5  0020               	movlb	0	; select bank0
 14439  13E6  00A0               	movwf	___ftge@ff1
 14440  13E7  3000               	movlw	0
 14441  13E8  00A1               	movwf	___ftge@ff1+1
 14442  13E9  3000               	movlw	0
 14443  13EA  00A2               	movwf	___ftge@ff1+2
 14444  13EB  0021               	movlb	1	; select bank1
 14445  13EC  083A               	movf	atan2@y^(0+128),w
 14446  13ED  0020               	movlb	0	; select bank0
 14447  13EE  00A3               	movwf	___ftge@ff2
 14448  13EF  0021               	movlb	1	; select bank1
 14449  13F0  083B               	movf	(atan2@y+1)^(0+128),w
 14450  13F1  0020               	movlb	0	; select bank0
 14451  13F2  00A4               	movwf	___ftge@ff2+1
 14452  13F3  0021               	movlb	1	; select bank1
 14453  13F4  083C               	movf	(atan2@y+2)^(0+128),w
 14454  13F5  0020               	movlb	0	; select bank0
 14455  13F6  00A5               	movwf	___ftge@ff2+2
 14456  13F7  31AF  27C4  3193   	fcall	___ftge
 14457  13FA  1803               	btfsc	3,0
 14458  13FB  2C04               	goto	l6350
 14459  13FC  3010               	movlw	16
 14460  13FD  0021               	movlb	1	; select bank1
 14461  13FE  00BA               	movwf	?_atan2^(0+128)
 14462  13FF  30C9               	movlw	201
 14463  1400  00BB               	movwf	(?_atan2+1)^(0+128)
 14464  1401  303F               	movlw	63
 14465  1402  00BC               	movwf	(?_atan2+2)^(0+128)
 14466  1403  0008               	return
 14467  1404                     l6350:	
 14468  1404  3010               	movlw	16
 14469  1405  0021               	movlb	1	; select bank1
 14470  1406  00BA               	movwf	?_atan2^(0+128)
 14471  1407  30C9               	movlw	201
 14472  1408  00BB               	movwf	(?_atan2+1)^(0+128)
 14473  1409  30BF               	movlw	191
 14474  140A  00BC               	movwf	(?_atan2+2)^(0+128)
 14475  140B  0008               	return
 14476  140C                     l6354:	
 14477  140C  083C               	movf	(atan2@y+2)^(0+128),w
 14478  140D  043B               	iorwf	(atan2@y+1)^(0+128),w
 14479  140E  043A               	iorwf	atan2@y^(0+128),w
 14480  140F  1D03               	skipz
 14481  1410  2C39               	goto	l6368
 14482  1411  3000               	movlw	0
 14483  1412  0020               	movlb	0	; select bank0
 14484  1413  00A0               	movwf	___ftge@ff1
 14485  1414  3000               	movlw	0
 14486  1415  00A1               	movwf	___ftge@ff1+1
 14487  1416  3000               	movlw	0
 14488  1417  00A2               	movwf	___ftge@ff1+2
 14489  1418  0021               	movlb	1	; select bank1
 14490  1419  083D               	movf	atan2@x^(0+128),w
 14491  141A  0020               	movlb	0	; select bank0
 14492  141B  00A3               	movwf	___ftge@ff2
 14493  141C  0021               	movlb	1	; select bank1
 14494  141D  083E               	movf	(atan2@x+1)^(0+128),w
 14495  141E  0020               	movlb	0	; select bank0
 14496  141F  00A4               	movwf	___ftge@ff2+1
 14497  1420  0021               	movlb	1	; select bank1
 14498  1421  083F               	movf	(atan2@x+2)^(0+128),w
 14499  1422  0020               	movlb	0	; select bank0
 14500  1423  00A5               	movwf	___ftge@ff2+2
 14501  1424  31AF  27C4  3193   	fcall	___ftge
 14502  1427  1803               	btfsc	3,0
 14503  1428  2C31               	goto	l6364
 14504  1429  3000               	movlw	0
 14505  142A  0021               	movlb	1	; select bank1
 14506  142B  00BA               	movwf	?_atan2^(0+128)
 14507  142C  3000               	movlw	0
 14508  142D  00BB               	movwf	(?_atan2+1)^(0+128)
 14509  142E  3000               	movlw	0
 14510  142F  00BC               	movwf	(?_atan2+2)^(0+128)
 14511  1430  0008               	return
 14512  1431                     l6364:	
 14513  1431  3010               	movlw	16
 14514  1432  0021               	movlb	1	; select bank1
 14515  1433  00BA               	movwf	?_atan2^(0+128)
 14516  1434  3049               	movlw	73
 14517  1435  00BB               	movwf	(?_atan2+1)^(0+128)
 14518  1436  3040               	movlw	64
 14519  1437  00BC               	movwf	(?_atan2+2)^(0+128)
 14520  1438  0008               	return
 14521  1439                     l6368:	
 14522  1439  083D               	movf	atan2@x^(0+128),w
 14523  143A  0020               	movlb	0	; select bank0
 14524  143B  00A9               	movwf	fabs@d
 14525  143C  0021               	movlb	1	; select bank1
 14526  143D  083E               	movf	(atan2@x+1)^(0+128),w
 14527  143E  0020               	movlb	0	; select bank0
 14528  143F  00AA               	movwf	fabs@d+1
 14529  1440  0021               	movlb	1	; select bank1
 14530  1441  083F               	movf	(atan2@x+2)^(0+128),w
 14531  1442  0020               	movlb	0	; select bank0
 14532  1443  00AB               	movwf	fabs@d+2
 14533  1444  31AD  2572  3193   	fcall	_fabs
 14534  1447  0020               	movlb	0	; select bank0
 14535  1448  0829               	movf	?_fabs,w
 14536  1449  0021               	movlb	1	; select bank1
 14537  144A  00C0               	movwf	_atan2$1920^(0+128)
 14538  144B  0020               	movlb	0	; select bank0
 14539  144C  082A               	movf	?_fabs+1,w
 14540  144D  0021               	movlb	1	; select bank1
 14541  144E  00C1               	movwf	(_atan2$1920+1)^(0+128)
 14542  144F  0020               	movlb	0	; select bank0
 14543  1450  082B               	movf	?_fabs+2,w
 14544  1451  0021               	movlb	1	; select bank1
 14545  1452  00C2               	movwf	(_atan2$1920+2)^(0+128)
 14546  1453  083A               	movf	atan2@y^(0+128),w
 14547  1454  0020               	movlb	0	; select bank0
 14548  1455  00A9               	movwf	fabs@d
 14549  1456  0021               	movlb	1	; select bank1
 14550  1457  083B               	movf	(atan2@y+1)^(0+128),w
 14551  1458  0020               	movlb	0	; select bank0
 14552  1459  00AA               	movwf	fabs@d+1
 14553  145A  0021               	movlb	1	; select bank1
 14554  145B  083C               	movf	(atan2@y+2)^(0+128),w
 14555  145C  0020               	movlb	0	; select bank0
 14556  145D  00AB               	movwf	fabs@d+2
 14557  145E  31AD  2572  3193   	fcall	_fabs
 14558  1461  0020               	movlb	0	; select bank0
 14559  1462  0829               	movf	?_fabs,w
 14560  1463  0021               	movlb	1	; select bank1
 14561  1464  00C3               	movwf	_atan2$1921^(0+128)
 14562  1465  0020               	movlb	0	; select bank0
 14563  1466  082A               	movf	?_fabs+1,w
 14564  1467  0021               	movlb	1	; select bank1
 14565  1468  00C4               	movwf	(_atan2$1921+1)^(0+128)
 14566  1469  0020               	movlb	0	; select bank0
 14567  146A  082B               	movf	?_fabs+2,w
 14568  146B  0021               	movlb	1	; select bank1
 14569  146C  00C5               	movwf	(_atan2$1921+2)^(0+128)
 14570  146D  0840               	movf	_atan2$1920^(0+128),w
 14571  146E  0020               	movlb	0	; select bank0
 14572  146F  00A0               	movwf	___ftge@ff1
 14573  1470  0021               	movlb	1	; select bank1
 14574  1471  0841               	movf	(_atan2$1920+1)^(0+128),w
 14575  1472  0020               	movlb	0	; select bank0
 14576  1473  00A1               	movwf	___ftge@ff1+1
 14577  1474  0021               	movlb	1	; select bank1
 14578  1475  0842               	movf	(_atan2$1920+2)^(0+128),w
 14579  1476  0020               	movlb	0	; select bank0
 14580  1477  00A2               	movwf	___ftge@ff1+2
 14581  1478  0021               	movlb	1	; select bank1
 14582  1479  0843               	movf	_atan2$1921^(0+128),w
 14583  147A  0020               	movlb	0	; select bank0
 14584  147B  00A3               	movwf	___ftge@ff2
 14585  147C  0021               	movlb	1	; select bank1
 14586  147D  0844               	movf	(_atan2$1921+1)^(0+128),w
 14587  147E  0020               	movlb	0	; select bank0
 14588  147F  00A4               	movwf	___ftge@ff2+1
 14589  1480  0021               	movlb	1	; select bank1
 14590  1481  0845               	movf	(_atan2$1921+2)^(0+128),w
 14591  1482  0020               	movlb	0	; select bank0
 14592  1483  00A5               	movwf	___ftge@ff2+2
 14593  1484  31AF  27C4  3193   	fcall	___ftge
 14594  1487  1C03               	btfss	3,0
 14595  1488  2D2D               	goto	l6386
 14596  1489  0021               	movlb	1	; select bank1
 14597  148A  083D               	movf	atan2@x^(0+128),w
 14598  148B  0020               	movlb	0	; select bank0
 14599  148C  00C6               	movwf	___ftdiv@f2
 14600  148D  0021               	movlb	1	; select bank1
 14601  148E  083E               	movf	(atan2@x+1)^(0+128),w
 14602  148F  0020               	movlb	0	; select bank0
 14603  1490  00C7               	movwf	___ftdiv@f2+1
 14604  1491  0021               	movlb	1	; select bank1
 14605  1492  083F               	movf	(atan2@x+2)^(0+128),w
 14606  1493  0020               	movlb	0	; select bank0
 14607  1494  00C8               	movwf	___ftdiv@f2+2
 14608  1495  0021               	movlb	1	; select bank1
 14609  1496  083A               	movf	atan2@y^(0+128),w
 14610  1497  0020               	movlb	0	; select bank0
 14611  1498  00C9               	movwf	___ftdiv@f1
 14612  1499  0021               	movlb	1	; select bank1
 14613  149A  083B               	movf	(atan2@y+1)^(0+128),w
 14614  149B  0020               	movlb	0	; select bank0
 14615  149C  00CA               	movwf	___ftdiv@f1+1
 14616  149D  0021               	movlb	1	; select bank1
 14617  149E  083C               	movf	(atan2@y+2)^(0+128),w
 14618  149F  0020               	movlb	0	; select bank0
 14619  14A0  00CB               	movwf	___ftdiv@f1+2
 14620  14A1  31A6  26A3  3193   	fcall	___ftdiv
 14621  14A4  0020               	movlb	0	; select bank0
 14622  14A5  0846               	movf	?___ftdiv,w
 14623  14A6  0021               	movlb	1	; select bank1
 14624  14A7  00C9               	movwf	_atan2$1922^(0+128)
 14625  14A8  0020               	movlb	0	; select bank0
 14626  14A9  0847               	movf	?___ftdiv+1,w
 14627  14AA  0021               	movlb	1	; select bank1
 14628  14AB  00CA               	movwf	(_atan2$1922+1)^(0+128)
 14629  14AC  0020               	movlb	0	; select bank0
 14630  14AD  0848               	movf	?___ftdiv+2,w
 14631  14AE  0021               	movlb	1	; select bank1
 14632  14AF  00CB               	movwf	(_atan2$1922+2)^(0+128)
 14633  14B0  0849               	movf	_atan2$1922^(0+128),w
 14634  14B1  00A0               	movwf	atan@f^(0+128)
 14635  14B2  084A               	movf	(_atan2$1922+1)^(0+128),w
 14636  14B3  00A1               	movwf	(atan@f+1)^(0+128)
 14637  14B4  084B               	movf	(_atan2$1922+2)^(0+128),w
 14638  14B5  00A2               	movwf	(atan@f+2)^(0+128)
 14639  14B6  3188  2002  3193   	fcall	_atan
 14640  14B9  0021               	movlb	1	; select bank1
 14641  14BA  0820               	movf	?_atan^(0+128),w
 14642  14BB  00CC               	movwf	atan2@v^(0+128)
 14643  14BC  0821               	movf	(?_atan+1)^(0+128),w
 14644  14BD  00CD               	movwf	(atan2@v+1)^(0+128)
 14645  14BE  0822               	movf	(?_atan+2)^(0+128),w
 14646  14BF  00CE               	movwf	(atan2@v+2)^(0+128)
 14647  14C0  083D               	movf	atan2@x^(0+128),w
 14648  14C1  0020               	movlb	0	; select bank0
 14649  14C2  00A0               	movwf	___ftge@ff1
 14650  14C3  0021               	movlb	1	; select bank1
 14651  14C4  083E               	movf	(atan2@x+1)^(0+128),w
 14652  14C5  0020               	movlb	0	; select bank0
 14653  14C6  00A1               	movwf	___ftge@ff1+1
 14654  14C7  0021               	movlb	1	; select bank1
 14655  14C8  083F               	movf	(atan2@x+2)^(0+128),w
 14656  14C9  0020               	movlb	0	; select bank0
 14657  14CA  00A2               	movwf	___ftge@ff1+2
 14658  14CB  3000               	movlw	0
 14659  14CC  00A3               	movwf	___ftge@ff2
 14660  14CD  3000               	movlw	0
 14661  14CE  00A4               	movwf	___ftge@ff2+1
 14662  14CF  3000               	movlw	0
 14663  14D0  00A5               	movwf	___ftge@ff2+2
 14664  14D1  31AF  27C4  3193   	fcall	___ftge
 14665  14D4  1803               	btfsc	3,0
 14666  14D5  2D25               	goto	l6382
 14667  14D6  0021               	movlb	1	; select bank1
 14668  14D7  083A               	movf	atan2@y^(0+128),w
 14669  14D8  0020               	movlb	0	; select bank0
 14670  14D9  00A0               	movwf	___ftge@ff1
 14671  14DA  0021               	movlb	1	; select bank1
 14672  14DB  083B               	movf	(atan2@y+1)^(0+128),w
 14673  14DC  0020               	movlb	0	; select bank0
 14674  14DD  00A1               	movwf	___ftge@ff1+1
 14675  14DE  0021               	movlb	1	; select bank1
 14676  14DF  083C               	movf	(atan2@y+2)^(0+128),w
 14677  14E0  0020               	movlb	0	; select bank0
 14678  14E1  00A2               	movwf	___ftge@ff1+2
 14679  14E2  3000               	movlw	0
 14680  14E3  00A3               	movwf	___ftge@ff2
 14681  14E4  3000               	movlw	0
 14682  14E5  00A4               	movwf	___ftge@ff2+1
 14683  14E6  3000               	movlw	0
 14684  14E7  00A5               	movwf	___ftge@ff2+2
 14685  14E8  31AF  27C4  3193   	fcall	___ftge
 14686  14EB  1C03               	btfss	3,0
 14687  14EC  2D0F               	goto	l6380
 14688  14ED  3010               	movlw	16
 14689  14EE  0020               	movlb	0	; select bank0
 14690  14EF  00D9               	movwf	___ftadd@f1
 14691  14F0  3049               	movlw	73
 14692  14F1  00DA               	movwf	___ftadd@f1+1
 14693  14F2  3040               	movlw	64
 14694  14F3  00DB               	movwf	___ftadd@f1+2
 14695  14F4  0021               	movlb	1	; select bank1
 14696  14F5  084C               	movf	atan2@v^(0+128),w
 14697  14F6  0020               	movlb	0	; select bank0
 14698  14F7  00DC               	movwf	___ftadd@f2
 14699  14F8  0021               	movlb	1	; select bank1
 14700  14F9  084D               	movf	(atan2@v+1)^(0+128),w
 14701  14FA  0020               	movlb	0	; select bank0
 14702  14FB  00DD               	movwf	___ftadd@f2+1
 14703  14FC  0021               	movlb	1	; select bank1
 14704  14FD  084E               	movf	(atan2@v+2)^(0+128),w
 14705  14FE  0020               	movlb	0	; select bank0
 14706  14FF  00DE               	movwf	___ftadd@f2+2
 14707  1500  3198  20C2  3193   	fcall	___ftadd
 14708  1503  0020               	movlb	0	; select bank0
 14709  1504  0859               	movf	?___ftadd,w
 14710  1505  0021               	movlb	1	; select bank1
 14711  1506  00CC               	movwf	atan2@v^(0+128)
 14712  1507  0020               	movlb	0	; select bank0
 14713  1508  085A               	movf	?___ftadd+1,w
 14714  1509  0021               	movlb	1	; select bank1
 14715  150A  00CD               	movwf	(atan2@v+1)^(0+128)
 14716  150B  0020               	movlb	0	; select bank0
 14717  150C  085B               	movf	?___ftadd+2,w
 14718  150D  0021               	movlb	1	; select bank1
 14719  150E  2D24               	goto	L6
 14720  150F                     l6380:	
 14721  150F  3010               	movlw	16
 14722  1510  0021               	movlb	1	; select bank1
 14723  1511  00A0               	movwf	___ftsub@f2^(0+128)
 14724  1512  3049               	movlw	73
 14725  1513  00A1               	movwf	(___ftsub@f2+1)^(0+128)
 14726  1514  3040               	movlw	64
 14727  1515  00A2               	movwf	(___ftsub@f2+2)^(0+128)
 14728  1516  084C               	movf	atan2@v^(0+128),w
 14729  1517  00A3               	movwf	___ftsub@f1^(0+128)
 14730  1518  084D               	movf	(atan2@v+1)^(0+128),w
 14731  1519  00A4               	movwf	(___ftsub@f1+1)^(0+128)
 14732  151A  084E               	movf	(atan2@v+2)^(0+128),w
 14733  151B  00A5               	movwf	(___ftsub@f1+2)^(0+128)
 14734  151C  31AE  2683         	fcall	___ftsub
 14735  151E  0021               	movlb	1	; select bank1
 14736  151F  0820               	movf	?___ftsub^(0+128),w
 14737  1520  00CC               	movwf	atan2@v^(0+128)
 14738  1521  0821               	movf	(?___ftsub+1)^(0+128),w
 14739  1522  00CD               	movwf	(atan2@v+1)^(0+128)
 14740  1523  0822               	movf	(?___ftsub+2)^(0+128),w
 14741  1524                     L6:	
 14742  1524  00CE               	movwf	(atan2@v+2)^(0+128)
 14743  1525                     l6382:	
 14744  1525  0021               	movlb	1	; select bank1
 14745  1526  084C               	movf	atan2@v^(0+128),w
 14746  1527  00BA               	movwf	?_atan2^(0+128)
 14747  1528  084D               	movf	(atan2@v+1)^(0+128),w
 14748  1529  00BB               	movwf	(?_atan2+1)^(0+128)
 14749  152A  084E               	movf	(atan2@v+2)^(0+128),w
 14750  152B  00BC               	movwf	(?_atan2+2)^(0+128)
 14751  152C  0008               	return
 14752  152D                     l6386:	
 14753  152D  0021               	movlb	1	; select bank1
 14754  152E  083D               	movf	atan2@x^(0+128),w
 14755  152F  0020               	movlb	0	; select bank0
 14756  1530  00C9               	movwf	___ftdiv@f1
 14757  1531  0021               	movlb	1	; select bank1
 14758  1532  083E               	movf	(atan2@x+1)^(0+128),w
 14759  1533  0020               	movlb	0	; select bank0
 14760  1534  00CA               	movwf	___ftdiv@f1+1
 14761  1535  0021               	movlb	1	; select bank1
 14762  1536  083F               	movf	(atan2@x+2)^(0+128),w
 14763  1537  0020               	movlb	0	; select bank0
 14764  1538  00CB               	movwf	___ftdiv@f1+2
 14765  1539  0021               	movlb	1	; select bank1
 14766  153A  083A               	movf	atan2@y^(0+128),w
 14767  153B  0020               	movlb	0	; select bank0
 14768  153C  00C6               	movwf	___ftdiv@f2
 14769  153D  0021               	movlb	1	; select bank1
 14770  153E  083B               	movf	(atan2@y+1)^(0+128),w
 14771  153F  0020               	movlb	0	; select bank0
 14772  1540  00C7               	movwf	___ftdiv@f2+1
 14773  1541  0021               	movlb	1	; select bank1
 14774  1542  083C               	movf	(atan2@y+2)^(0+128),w
 14775  1543  0020               	movlb	0	; select bank0
 14776  1544  00C8               	movwf	___ftdiv@f2+2
 14777  1545  31A6  26A3  3193   	fcall	___ftdiv
 14778  1548  0020               	movlb	0	; select bank0
 14779  1549  0846               	movf	?___ftdiv,w
 14780  154A  0021               	movlb	1	; select bank1
 14781  154B  00C9               	movwf	_atan2$1922^(0+128)
 14782  154C  0020               	movlb	0	; select bank0
 14783  154D  0847               	movf	?___ftdiv+1,w
 14784  154E  0021               	movlb	1	; select bank1
 14785  154F  00CA               	movwf	(_atan2$1922+1)^(0+128)
 14786  1550  0020               	movlb	0	; select bank0
 14787  1551  0848               	movf	?___ftdiv+2,w
 14788  1552  0021               	movlb	1	; select bank1
 14789  1553  00CB               	movwf	(_atan2$1922+2)^(0+128)
 14790  1554  0849               	movf	_atan2$1922^(0+128),w
 14791  1555  00A0               	movwf	atan@f^(0+128)
 14792  1556  084A               	movf	(_atan2$1922+1)^(0+128),w
 14793  1557  00A1               	movwf	(atan@f+1)^(0+128)
 14794  1558  084B               	movf	(_atan2$1922+2)^(0+128),w
 14795  1559  00A2               	movwf	(atan@f+2)^(0+128)
 14796  155A  3188  2002  3193   	fcall	_atan
 14797  155D  0021               	movlb	1	; select bank1
 14798  155E  0820               	movf	?_atan^(0+128),w
 14799  155F  00C6               	movwf	_atan2$1923^(0+128)
 14800  1560  0821               	movf	(?_atan+1)^(0+128),w
 14801  1561  00C7               	movwf	(_atan2$1923+1)^(0+128)
 14802  1562  0822               	movf	(?_atan+2)^(0+128),w
 14803  1563  00C8               	movwf	(_atan2$1923+2)^(0+128)
 14804  1564  0846               	movf	_atan2$1923^(0+128),w
 14805  1565  0020               	movlb	0	; select bank0
 14806  1566  00A0               	movwf	___ftneg@f1
 14807  1567  0021               	movlb	1	; select bank1
 14808  1568  0847               	movf	(_atan2$1923+1)^(0+128),w
 14809  1569  0020               	movlb	0	; select bank0
 14810  156A  00A1               	movwf	___ftneg@f1+1
 14811  156B  0021               	movlb	1	; select bank1
 14812  156C  0848               	movf	(_atan2$1923+2)^(0+128),w
 14813  156D  0020               	movlb	0	; select bank0
 14814  156E  00A2               	movwf	___ftneg@f1+2
 14815  156F  3198  2003  3193   	fcall	___ftneg
 14816  1572  0020               	movlb	0	; select bank0
 14817  1573  0820               	movf	?___ftneg,w
 14818  1574  0021               	movlb	1	; select bank1
 14819  1575  00CC               	movwf	atan2@v^(0+128)
 14820  1576  0020               	movlb	0	; select bank0
 14821  1577  0821               	movf	?___ftneg+1,w
 14822  1578  0021               	movlb	1	; select bank1
 14823  1579  00CD               	movwf	(atan2@v+1)^(0+128)
 14824  157A  0020               	movlb	0	; select bank0
 14825  157B  0822               	movf	?___ftneg+2,w
 14826  157C  0021               	movlb	1	; select bank1
 14827  157D  00CE               	movwf	(atan2@v+2)^(0+128)
 14828  157E  083A               	movf	atan2@y^(0+128),w
 14829  157F  0020               	movlb	0	; select bank0
 14830  1580  00A0               	movwf	___ftge@ff1
 14831  1581  0021               	movlb	1	; select bank1
 14832  1582  083B               	movf	(atan2@y+1)^(0+128),w
 14833  1583  0020               	movlb	0	; select bank0
 14834  1584  00A1               	movwf	___ftge@ff1+1
 14835  1585  0021               	movlb	1	; select bank1
 14836  1586  083C               	movf	(atan2@y+2)^(0+128),w
 14837  1587  0020               	movlb	0	; select bank0
 14838  1588  00A2               	movwf	___ftge@ff1+2
 14839  1589  3000               	movlw	0
 14840  158A  00A3               	movwf	___ftge@ff2
 14841  158B  3000               	movlw	0
 14842  158C  00A4               	movwf	___ftge@ff2+1
 14843  158D  3000               	movlw	0
 14844  158E  00A5               	movwf	___ftge@ff2+2
 14845  158F  31AF  27C4  3193   	fcall	___ftge
 14846  1592  1803               	btfsc	3,0
 14847  1593  2DAB               	goto	l6396
 14848  1594  3010               	movlw	16
 14849  1595  0021               	movlb	1	; select bank1
 14850  1596  00A0               	movwf	___ftsub@f2^(0+128)
 14851  1597  30C9               	movlw	201
 14852  1598  00A1               	movwf	(___ftsub@f2+1)^(0+128)
 14853  1599  303F               	movlw	63
 14854  159A  00A2               	movwf	(___ftsub@f2+2)^(0+128)
 14855  159B  084C               	movf	atan2@v^(0+128),w
 14856  159C  00A3               	movwf	___ftsub@f1^(0+128)
 14857  159D  084D               	movf	(atan2@v+1)^(0+128),w
 14858  159E  00A4               	movwf	(___ftsub@f1+1)^(0+128)
 14859  159F  084E               	movf	(atan2@v+2)^(0+128),w
 14860  15A0  00A5               	movwf	(___ftsub@f1+2)^(0+128)
 14861  15A1  31AE  2683  3193   	fcall	___ftsub
 14862  15A4  0021               	movlb	1	; select bank1
 14863  15A5  0820               	movf	?___ftsub^(0+128),w
 14864  15A6  00CC               	movwf	atan2@v^(0+128)
 14865  15A7  0821               	movf	(?___ftsub+1)^(0+128),w
 14866  15A8  00CD               	movwf	(atan2@v+1)^(0+128)
 14867  15A9  0822               	movf	(?___ftsub+2)^(0+128),w
 14868  15AA  2DCB               	goto	L7
 14869  15AB                     l6396:	
 14870  15AB  3010               	movlw	16
 14871  15AC  0020               	movlb	0	; select bank0
 14872  15AD  00D9               	movwf	___ftadd@f1
 14873  15AE  30C9               	movlw	201
 14874  15AF  00DA               	movwf	___ftadd@f1+1
 14875  15B0  303F               	movlw	63
 14876  15B1  00DB               	movwf	___ftadd@f1+2
 14877  15B2  0021               	movlb	1	; select bank1
 14878  15B3  084C               	movf	atan2@v^(0+128),w
 14879  15B4  0020               	movlb	0	; select bank0
 14880  15B5  00DC               	movwf	___ftadd@f2
 14881  15B6  0021               	movlb	1	; select bank1
 14882  15B7  084D               	movf	(atan2@v+1)^(0+128),w
 14883  15B8  0020               	movlb	0	; select bank0
 14884  15B9  00DD               	movwf	___ftadd@f2+1
 14885  15BA  0021               	movlb	1	; select bank1
 14886  15BB  084E               	movf	(atan2@v+2)^(0+128),w
 14887  15BC  0020               	movlb	0	; select bank0
 14888  15BD  00DE               	movwf	___ftadd@f2+2
 14889  15BE  3198  20C2         	fcall	___ftadd
 14890  15C0  0020               	movlb	0	; select bank0
 14891  15C1  0859               	movf	?___ftadd,w
 14892  15C2  0021               	movlb	1	; select bank1
 14893  15C3  00CC               	movwf	atan2@v^(0+128)
 14894  15C4  0020               	movlb	0	; select bank0
 14895  15C5  085A               	movf	?___ftadd+1,w
 14896  15C6  0021               	movlb	1	; select bank1
 14897  15C7  00CD               	movwf	(atan2@v+1)^(0+128)
 14898  15C8  0020               	movlb	0	; select bank0
 14899  15C9  085B               	movf	?___ftadd+2,w
 14900  15CA  0021               	movlb	1	; select bank1
 14901  15CB                     L7:	
 14902  15CB  00CE               	movwf	(atan2@v+2)^(0+128)
 14903  15CC  084C               	movf	atan2@v^(0+128),w
 14904  15CD  00BA               	movwf	?_atan2^(0+128)
 14905  15CE  084D               	movf	(atan2@v+1)^(0+128),w
 14906  15CF  00BB               	movwf	(?_atan2+1)^(0+128)
 14907  15D0  084E               	movf	(atan2@v+2)^(0+128),w
 14908  15D1  00BC               	movwf	(?_atan2+2)^(0+128)
 14909  15D2  0008               	return
 14910  15D3                     __end_of_atan2:	
 14911                           
 14912                           	psect	text21
 14913  2F50                     __ptext21:	
 14914 ;; *************** function _get_field *****************
 14915 ;; Defined at:
 14916 ;;		line 108 in file "line_parser.c"
 14917 ;; Parameters:    Size  Location     Type
 14918 ;;  field           2    0[BANK0 ] PTR unsigned char 
 14919 ;;		 -> line(100), 
 14920 ;;  N               1    2[BANK0 ] unsigned char 
 14921 ;; Auto vars:     Size  Location     Type
 14922 ;;  i               1    5[BANK0 ] unsigned char 
 14923 ;;  cnt             1    4[BANK0 ] unsigned char 
 14924 ;; Return value:  Size  Location     Type
 14925 ;;                  1    wreg      unsigned char 
 14926 ;; Registers used:
 14927 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14928 ;; Tracked objects:
 14929 ;;		On entry : 0/0
 14930 ;;		On exit  : 0/0
 14931 ;;		Unchanged: 0/0
 14932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 14933 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14934 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14935 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14936 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 14937 ;;Total ram usage:        6 bytes
 14938 ;; Hardware stack levels used:    1
 14939 ;; Hardware stack levels required when called:    5
 14940 ;; This function calls:
 14941 ;;		Nothing
 14942 ;; This function is called by:
 14943 ;;		_main
 14944 ;; This function uses a non-reentrant model
 14945 ;;
 14946                           
 14947                           
 14948                           ;psect for function _get_field
 14949  2F50                     _get_field:	
 14950                           
 14951                           ;line_parser.c: 110: uint8_t i = field_offsets[N - 1];
 14952                           
 14953                           ;incstack = 0
 14954                           ; Regs used in _get_field: [wreg+fsr1l+fsr1h+status,2+status,0]
 14955  2F50  0020               	movlb	0	; select bank0
 14956  2F51  0822               	movf	get_field@N,w
 14957  2F52  3EFF               	addlw	255
 14958  2F53  3EA0               	addlw	(low (_field_offsets| (0+256)))& (0+255)
 14959  2F54  0086               	movwf	6
 14960  2F55  3001               	movlw	1	; select bank3/4
 14961  2F56  0087               	movwf	7
 14962  2F57  0801               	movf	1,w
 14963  2F58  00A3               	movwf	??_get_field
 14964  2F59  0823               	movf	??_get_field,w
 14965  2F5A  00A5               	movwf	get_field@i
 14966                           
 14967                           ;line_parser.c: 111: uint8_t cnt = 0;
 14968  2F5B  01A4               	clrf	get_field@cnt
 14969  2F5C                     l516:	
 14970                           ;line_parser.c: 113: while(i < 100 - 1){
 14971                           
 14972  2F5C  3063               	movlw	99
 14973  2F5D  0225               	subwf	get_field@i,w
 14974  2F5E  1803               	btfsc	3,0
 14975  2F5F  2F84               	goto	l7038
 14976                           
 14977                           ;line_parser.c: 114: *field = line_buf[i];
 14978  2F60  0825               	movf	get_field@i,w
 14979  2F61  3E8C               	addlw	140
 14980  2F62  0086               	movwf	6
 14981  2F63  0187               	clrf	7
 14982  2F64  3027               	movlw	39
 14983  2F65  3D87               	addwfc	7,f
 14984  2F66  0801               	movf	1,w
 14985  2F67  00A3               	movwf	??_get_field
 14986  2F68  0820               	movf	get_field@field,w
 14987  2F69  0086               	movwf	6
 14988  2F6A  0821               	movf	get_field@field+1,w
 14989  2F6B  0087               	movwf	7
 14990  2F6C  0823               	movf	??_get_field,w
 14991  2F6D  0081               	movwf	1
 14992                           
 14993                           ;line_parser.c: 115: if (line_buf[i] == 0x00){
 14994  2F6E  0825               	movf	get_field@i,w
 14995  2F6F  3E8C               	addlw	140
 14996  2F70  0086               	movwf	6
 14997  2F71  0187               	clrf	7
 14998  2F72  3027               	movlw	39
 14999  2F73  3D87               	addwfc	7,f
 15000  2F74  0801               	movf	1,w
 15001  2F75  1903               	btfsc	3,2
 15002  2F76  2F84               	goto	l7038
 15003                           
 15004                           ;line_parser.c: 117: }
 15005                           ;line_parser.c: 118: cnt++;
 15006                           
 15007                           ;line_parser.c: 116: break;
 15008  2F77  3001               	movlw	1
 15009  2F78  00A3               	movwf	??_get_field
 15010  2F79  0823               	movf	??_get_field,w
 15011  2F7A  07A4               	addwf	get_field@cnt,f
 15012                           
 15013                           ;line_parser.c: 119: field++;
 15014  2F7B  3001               	movlw	1
 15015  2F7C  07A0               	addwf	get_field@field,f
 15016  2F7D  3000               	movlw	0
 15017  2F7E  3DA1               	addwfc	get_field@field+1,f
 15018                           
 15019                           ;line_parser.c: 120: i++;
 15020  2F7F  3001               	movlw	1
 15021  2F80  00A3               	movwf	??_get_field
 15022  2F81  0823               	movf	??_get_field,w
 15023  2F82  07A5               	addwf	get_field@i,f
 15024  2F83  2F5C               	goto	l516
 15025  2F84                     l7038:	
 15026                           
 15027                           ;line_parser.c: 121: }
 15028                           ;line_parser.c: 122: *field = 0x00;
 15029  2F84  0820               	movf	get_field@field,w
 15030  2F85  0086               	movwf	6
 15031  2F86  0821               	movf	get_field@field+1,w
 15032  2F87  0087               	movwf	7
 15033  2F88  0181               	clrf	1
 15034  2F89  0008               	return
 15035  2F8A                     __end_of_get_field:	
 15036                           ;line_parser.c: 123: return cnt;
 15037                           ;	Return value of _get_field is never used
 15038                           
 15039                           
 15040                           	psect	text22
 15041  11C5                     __ptext22:	
 15042 ;; *************** function _distance *****************
 15043 ;; Defined at:
 15044 ;;		line 56 in file "GPS_distance.c"
 15045 ;; Parameters:    Size  Location     Type
 15046 ;;  lat1            3    0[BANK2 ] unsigned char 
 15047 ;;  lon1            3    3[BANK2 ] unsigned char 
 15048 ;;  lat2            3    6[BANK2 ] unsigned char 
 15049 ;;  lon2            3    9[BANK2 ] unsigned char 
 15050 ;;  unit            1   12[BANK2 ] unsigned char 
 15051 ;; Auto vars:     Size  Location     Type
 15052 ;;  dist            3   34[BANK2 ] unsigned char 
 15053 ;;  theta           3   13[BANK2 ] unsigned char 
 15054 ;; Return value:  Size  Location     Type
 15055 ;;                  3    0[BANK2 ] unsigned char 
 15056 ;; Registers used:
 15057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15058 ;; Tracked objects:
 15059 ;;		On entry : 0/0
 15060 ;;		On exit  : 0/0
 15061 ;;		Unchanged: 0/0
 15062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15063 ;;      Params:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15064 ;;      Locals:         0       0       0      24       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15066 ;;      Totals:         0       0       0      37       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15067 ;;Total ram usage:       37 bytes
 15068 ;; Hardware stack levels used:    1
 15069 ;; Hardware stack levels required when called:   11
 15070 ;; This function calls:
 15071 ;;		___ftadd
 15072 ;;		___ftmul
 15073 ;;		___ftneg
 15074 ;;		_acos
 15075 ;;		_cos
 15076 ;;		_deg2rad
 15077 ;;		_rad2deg
 15078 ;;		_sin
 15079 ;; This function is called by:
 15080 ;;		_main
 15081 ;; This function uses a non-reentrant model
 15082 ;;
 15083                           
 15084                           
 15085                           ;psect for function _distance
 15086  11C5                     _distance:	
 15087                           
 15088                           ;GPS_distance.c: 57: double theta, dist;
 15089                           ;GPS_distance.c: 58: theta = lon1 - lon2;
 15090                           
 15091                           ;incstack = 0
 15092                           ; Regs used in _distance: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15093  11C5  0022               	movlb	2	; select bank2
 15094  11C6  0823               	movf	distance@lon1^(0+256),w
 15095  11C7  0020               	movlb	0	; select bank0
 15096  11C8  00D9               	movwf	___ftadd@f1
 15097  11C9  0022               	movlb	2	; select bank2
 15098  11CA  0824               	movf	(distance@lon1+1)^(0+256),w
 15099  11CB  0020               	movlb	0	; select bank0
 15100  11CC  00DA               	movwf	___ftadd@f1+1
 15101  11CD  0022               	movlb	2	; select bank2
 15102  11CE  0825               	movf	(distance@lon1+2)^(0+256),w
 15103  11CF  0020               	movlb	0	; select bank0
 15104  11D0  00DB               	movwf	___ftadd@f1+2
 15105  11D1  0022               	movlb	2	; select bank2
 15106  11D2  0829               	movf	distance@lon2^(0+256),w
 15107  11D3  0020               	movlb	0	; select bank0
 15108  11D4  00A0               	movwf	___ftneg@f1
 15109  11D5  0022               	movlb	2	; select bank2
 15110  11D6  082A               	movf	(distance@lon2+1)^(0+256),w
 15111  11D7  0020               	movlb	0	; select bank0
 15112  11D8  00A1               	movwf	___ftneg@f1+1
 15113  11D9  0022               	movlb	2	; select bank2
 15114  11DA  082B               	movf	(distance@lon2+2)^(0+256),w
 15115  11DB  0020               	movlb	0	; select bank0
 15116  11DC  00A2               	movwf	___ftneg@f1+2
 15117  11DD  3198  2003  3191   	fcall	___ftneg
 15118  11E0  0020               	movlb	0	; select bank0
 15119  11E1  0820               	movf	?___ftneg,w
 15120  11E2  00DC               	movwf	___ftadd@f2
 15121  11E3  0821               	movf	?___ftneg+1,w
 15122  11E4  00DD               	movwf	___ftadd@f2+1
 15123  11E5  0822               	movf	?___ftneg+2,w
 15124  11E6  00DE               	movwf	___ftadd@f2+2
 15125  11E7  3198  20C2  3191   	fcall	___ftadd
 15126  11EA  0020               	movlb	0	; select bank0
 15127  11EB  0859               	movf	?___ftadd,w
 15128  11EC  0022               	movlb	2	; select bank2
 15129  11ED  00AD               	movwf	distance@theta^(0+256)
 15130  11EE  0020               	movlb	0	; select bank0
 15131  11EF  085A               	movf	?___ftadd+1,w
 15132  11F0  0022               	movlb	2	; select bank2
 15133  11F1  00AE               	movwf	(distance@theta+1)^(0+256)
 15134  11F2  0020               	movlb	0	; select bank0
 15135  11F3  085B               	movf	?___ftadd+2,w
 15136  11F4  0022               	movlb	2	; select bank2
 15137  11F5  00AF               	movwf	(distance@theta+2)^(0+256)
 15138                           
 15139                           ;GPS_distance.c: 59: dist = sin(deg2rad(lat1)) * sin(deg2rad(lat2)) + cos(deg2rad(lat1))
      +                           * cos(deg2rad(lat2)) * cos(deg2rad(theta));
 15140  11F6  0826               	movf	distance@lat2^(0+256),w
 15141  11F7  0020               	movlb	0	; select bank0
 15142  11F8  00D6               	movwf	deg2rad@deg
 15143  11F9  0022               	movlb	2	; select bank2
 15144  11FA  0827               	movf	(distance@lat2+1)^(0+256),w
 15145  11FB  0020               	movlb	0	; select bank0
 15146  11FC  00D7               	movwf	deg2rad@deg+1
 15147  11FD  0022               	movlb	2	; select bank2
 15148  11FE  0828               	movf	(distance@lat2+2)^(0+256),w
 15149  11FF  0020               	movlb	0	; select bank0
 15150  1200  00D8               	movwf	deg2rad@deg+2
 15151  1201  31AD  25DF  3191   	fcall	_deg2rad
 15152  1204  0020               	movlb	0	; select bank0
 15153  1205  0856               	movf	?_deg2rad,w
 15154  1206  0021               	movlb	1	; select bank1
 15155  1207  00B4               	movwf	cos@f^(0+128)
 15156  1208  0020               	movlb	0	; select bank0
 15157  1209  0857               	movf	?_deg2rad+1,w
 15158  120A  0021               	movlb	1	; select bank1
 15159  120B  00B5               	movwf	(cos@f+1)^(0+128)
 15160  120C  0020               	movlb	0	; select bank0
 15161  120D  0858               	movf	?_deg2rad+2,w
 15162  120E  0021               	movlb	1	; select bank1
 15163  120F  00B6               	movwf	(cos@f+2)^(0+128)
 15164  1210  31A4  2494  3191   	fcall	_cos
 15165  1213  0021               	movlb	1	; select bank1
 15166  1214  0834               	movf	?_cos^(0+128),w
 15167  1215  0022               	movlb	2	; select bank2
 15168  1216  00B0               	movwf	_distance$1891^(0+256)
 15169  1217  0021               	movlb	1	; select bank1
 15170  1218  0835               	movf	(?_cos+1)^(0+128),w
 15171  1219  0022               	movlb	2	; select bank2
 15172  121A  00B1               	movwf	(_distance$1891+1)^(0+256)
 15173  121B  0021               	movlb	1	; select bank1
 15174  121C  0836               	movf	(?_cos+2)^(0+128),w
 15175  121D  0022               	movlb	2	; select bank2
 15176  121E  00B2               	movwf	(_distance$1891+2)^(0+256)
 15177                           
 15178                           ;GPS_distance.c: 59: dist = sin(deg2rad(lat1)) * sin(deg2rad(lat2)) + cos(deg2rad(lat1))
      +                           * cos(deg2rad(lat2)) * cos(deg2rad(theta));
 15179  121F  0820               	movf	distance@lat1^(0+256),w
 15180  1220  0020               	movlb	0	; select bank0
 15181  1221  00D6               	movwf	deg2rad@deg
 15182  1222  0022               	movlb	2	; select bank2
 15183  1223  0821               	movf	(distance@lat1+1)^(0+256),w
 15184  1224  0020               	movlb	0	; select bank0
 15185  1225  00D7               	movwf	deg2rad@deg+1
 15186  1226  0022               	movlb	2	; select bank2
 15187  1227  0822               	movf	(distance@lat1+2)^(0+256),w
 15188  1228  0020               	movlb	0	; select bank0
 15189  1229  00D8               	movwf	deg2rad@deg+2
 15190  122A  31AD  25DF  3191   	fcall	_deg2rad
 15191  122D  0020               	movlb	0	; select bank0
 15192  122E  0856               	movf	?_deg2rad,w
 15193  122F  0021               	movlb	1	; select bank1
 15194  1230  00B4               	movwf	cos@f^(0+128)
 15195  1231  0020               	movlb	0	; select bank0
 15196  1232  0857               	movf	?_deg2rad+1,w
 15197  1233  0021               	movlb	1	; select bank1
 15198  1234  00B5               	movwf	(cos@f+1)^(0+128)
 15199  1235  0020               	movlb	0	; select bank0
 15200  1236  0858               	movf	?_deg2rad+2,w
 15201  1237  0021               	movlb	1	; select bank1
 15202  1238  00B6               	movwf	(cos@f+2)^(0+128)
 15203  1239  31A4  2494  3191   	fcall	_cos
 15204  123C  0021               	movlb	1	; select bank1
 15205  123D  0834               	movf	?_cos^(0+128),w
 15206  123E  0022               	movlb	2	; select bank2
 15207  123F  00B3               	movwf	_distance$1892^(0+256)
 15208  1240  0021               	movlb	1	; select bank1
 15209  1241  0835               	movf	(?_cos+1)^(0+128),w
 15210  1242  0022               	movlb	2	; select bank2
 15211  1243  00B4               	movwf	(_distance$1892+1)^(0+256)
 15212  1244  0021               	movlb	1	; select bank1
 15213  1245  0836               	movf	(?_cos+2)^(0+128),w
 15214  1246  0022               	movlb	2	; select bank2
 15215  1247  00B5               	movwf	(_distance$1892+2)^(0+256)
 15216                           
 15217                           ;GPS_distance.c: 59: dist = sin(deg2rad(lat1)) * sin(deg2rad(lat2)) + cos(deg2rad(lat1))
      +                           * cos(deg2rad(lat2)) * cos(deg2rad(theta));
 15218  1248  082D               	movf	distance@theta^(0+256),w
 15219  1249  0020               	movlb	0	; select bank0
 15220  124A  00D6               	movwf	deg2rad@deg
 15221  124B  0022               	movlb	2	; select bank2
 15222  124C  082E               	movf	(distance@theta+1)^(0+256),w
 15223  124D  0020               	movlb	0	; select bank0
 15224  124E  00D7               	movwf	deg2rad@deg+1
 15225  124F  0022               	movlb	2	; select bank2
 15226  1250  082F               	movf	(distance@theta+2)^(0+256),w
 15227  1251  0020               	movlb	0	; select bank0
 15228  1252  00D8               	movwf	deg2rad@deg+2
 15229  1253  31AD  25DF  3191   	fcall	_deg2rad
 15230  1256  0020               	movlb	0	; select bank0
 15231  1257  0856               	movf	?_deg2rad,w
 15232  1258  0021               	movlb	1	; select bank1
 15233  1259  00B4               	movwf	cos@f^(0+128)
 15234  125A  0020               	movlb	0	; select bank0
 15235  125B  0857               	movf	?_deg2rad+1,w
 15236  125C  0021               	movlb	1	; select bank1
 15237  125D  00B5               	movwf	(cos@f+1)^(0+128)
 15238  125E  0020               	movlb	0	; select bank0
 15239  125F  0858               	movf	?_deg2rad+2,w
 15240  1260  0021               	movlb	1	; select bank1
 15241  1261  00B6               	movwf	(cos@f+2)^(0+128)
 15242  1262  31A4  2494  3191   	fcall	_cos
 15243  1265  0021               	movlb	1	; select bank1
 15244  1266  0834               	movf	?_cos^(0+128),w
 15245  1267  0022               	movlb	2	; select bank2
 15246  1268  00B6               	movwf	_distance$1893^(0+256)
 15247  1269  0021               	movlb	1	; select bank1
 15248  126A  0835               	movf	(?_cos+1)^(0+128),w
 15249  126B  0022               	movlb	2	; select bank2
 15250  126C  00B7               	movwf	(_distance$1893+1)^(0+256)
 15251  126D  0021               	movlb	1	; select bank1
 15252  126E  0836               	movf	(?_cos+2)^(0+128),w
 15253  126F  0022               	movlb	2	; select bank2
 15254  1270  00B8               	movwf	(_distance$1893+2)^(0+256)
 15255                           
 15256                           ;GPS_distance.c: 59: dist = sin(deg2rad(lat1)) * sin(deg2rad(lat2)) + cos(deg2rad(lat1))
      +                           * cos(deg2rad(lat2)) * cos(deg2rad(theta));
 15257  1271  0830               	movf	_distance$1891^(0+256),w
 15258  1272  0020               	movlb	0	; select bank0
 15259  1273  00B6               	movwf	___ftmul@f1
 15260  1274  0022               	movlb	2	; select bank2
 15261  1275  0831               	movf	(_distance$1891+1)^(0+256),w
 15262  1276  0020               	movlb	0	; select bank0
 15263  1277  00B7               	movwf	___ftmul@f1+1
 15264  1278  0022               	movlb	2	; select bank2
 15265  1279  0832               	movf	(_distance$1891+2)^(0+256),w
 15266  127A  0020               	movlb	0	; select bank0
 15267  127B  00B8               	movwf	___ftmul@f1+2
 15268  127C  0022               	movlb	2	; select bank2
 15269  127D  0833               	movf	_distance$1892^(0+256),w
 15270  127E  0020               	movlb	0	; select bank0
 15271  127F  00B9               	movwf	___ftmul@f2
 15272  1280  0022               	movlb	2	; select bank2
 15273  1281  0834               	movf	(_distance$1892+1)^(0+256),w
 15274  1282  0020               	movlb	0	; select bank0
 15275  1283  00BA               	movwf	___ftmul@f2+1
 15276  1284  0022               	movlb	2	; select bank2
 15277  1285  0835               	movf	(_distance$1892+2)^(0+256),w
 15278  1286  0020               	movlb	0	; select bank0
 15279  1287  00BB               	movwf	___ftmul@f2+2
 15280  1288  31A7  274C  3191   	fcall	___ftmul
 15281  128B  0020               	movlb	0	; select bank0
 15282  128C  0836               	movf	?___ftmul,w
 15283  128D  0022               	movlb	2	; select bank2
 15284  128E  00B9               	movwf	_distance$1894^(0+256)
 15285  128F  0020               	movlb	0	; select bank0
 15286  1290  0837               	movf	?___ftmul+1,w
 15287  1291  0022               	movlb	2	; select bank2
 15288  1292  00BA               	movwf	(_distance$1894+1)^(0+256)
 15289  1293  0020               	movlb	0	; select bank0
 15290  1294  0838               	movf	?___ftmul+2,w
 15291  1295  0022               	movlb	2	; select bank2
 15292  1296  00BB               	movwf	(_distance$1894+2)^(0+256)
 15293                           
 15294                           ;GPS_distance.c: 59: dist = sin(deg2rad(lat1)) * sin(deg2rad(lat2)) + cos(deg2rad(lat1))
      +                           * cos(deg2rad(lat2)) * cos(deg2rad(theta));
 15295  1297  0826               	movf	distance@lat2^(0+256),w
 15296  1298  0020               	movlb	0	; select bank0
 15297  1299  00D6               	movwf	deg2rad@deg
 15298  129A  0022               	movlb	2	; select bank2
 15299  129B  0827               	movf	(distance@lat2+1)^(0+256),w
 15300  129C  0020               	movlb	0	; select bank0
 15301  129D  00D7               	movwf	deg2rad@deg+1
 15302  129E  0022               	movlb	2	; select bank2
 15303  129F  0828               	movf	(distance@lat2+2)^(0+256),w
 15304  12A0  0020               	movlb	0	; select bank0
 15305  12A1  00D8               	movwf	deg2rad@deg+2
 15306  12A2  31AD  25DF  3191   	fcall	_deg2rad
 15307  12A5  0020               	movlb	0	; select bank0
 15308  12A6  0856               	movf	?_deg2rad,w
 15309  12A7  0021               	movlb	1	; select bank1
 15310  12A8  00A6               	movwf	sin@f^(0+128)
 15311  12A9  0020               	movlb	0	; select bank0
 15312  12AA  0857               	movf	?_deg2rad+1,w
 15313  12AB  0021               	movlb	1	; select bank1
 15314  12AC  00A7               	movwf	(sin@f+1)^(0+128)
 15315  12AD  0020               	movlb	0	; select bank0
 15316  12AE  0858               	movf	?_deg2rad+2,w
 15317  12AF  0021               	movlb	1	; select bank1
 15318  12B0  00A8               	movwf	(sin@f+2)^(0+128)
 15319  12B1  319C  241C  3191   	fcall	_sin
 15320  12B4  0021               	movlb	1	; select bank1
 15321  12B5  0826               	movf	?_sin^(0+128),w
 15322  12B6  0022               	movlb	2	; select bank2
 15323  12B7  00BC               	movwf	_distance$1895^(0+256)
 15324  12B8  0021               	movlb	1	; select bank1
 15325  12B9  0827               	movf	(?_sin+1)^(0+128),w
 15326  12BA  0022               	movlb	2	; select bank2
 15327  12BB  00BD               	movwf	(_distance$1895+1)^(0+256)
 15328  12BC  0021               	movlb	1	; select bank1
 15329  12BD  0828               	movf	(?_sin+2)^(0+128),w
 15330  12BE  0022               	movlb	2	; select bank2
 15331  12BF  00BE               	movwf	(_distance$1895+2)^(0+256)
 15332                           
 15333                           ;GPS_distance.c: 59: dist = sin(deg2rad(lat1)) * sin(deg2rad(lat2)) + cos(deg2rad(lat1))
      +                           * cos(deg2rad(lat2)) * cos(deg2rad(theta));
 15334  12C0  0820               	movf	distance@lat1^(0+256),w
 15335  12C1  0020               	movlb	0	; select bank0
 15336  12C2  00D6               	movwf	deg2rad@deg
 15337  12C3  0022               	movlb	2	; select bank2
 15338  12C4  0821               	movf	(distance@lat1+1)^(0+256),w
 15339  12C5  0020               	movlb	0	; select bank0
 15340  12C6  00D7               	movwf	deg2rad@deg+1
 15341  12C7  0022               	movlb	2	; select bank2
 15342  12C8  0822               	movf	(distance@lat1+2)^(0+256),w
 15343  12C9  0020               	movlb	0	; select bank0
 15344  12CA  00D8               	movwf	deg2rad@deg+2
 15345  12CB  31AD  25DF  3191   	fcall	_deg2rad
 15346  12CE  0020               	movlb	0	; select bank0
 15347  12CF  0856               	movf	?_deg2rad,w
 15348  12D0  0021               	movlb	1	; select bank1
 15349  12D1  00A6               	movwf	sin@f^(0+128)
 15350  12D2  0020               	movlb	0	; select bank0
 15351  12D3  0857               	movf	?_deg2rad+1,w
 15352  12D4  0021               	movlb	1	; select bank1
 15353  12D5  00A7               	movwf	(sin@f+1)^(0+128)
 15354  12D6  0020               	movlb	0	; select bank0
 15355  12D7  0858               	movf	?_deg2rad+2,w
 15356  12D8  0021               	movlb	1	; select bank1
 15357  12D9  00A8               	movwf	(sin@f+2)^(0+128)
 15358  12DA  319C  241C  3191   	fcall	_sin
 15359  12DD  0021               	movlb	1	; select bank1
 15360  12DE  0826               	movf	?_sin^(0+128),w
 15361  12DF  0022               	movlb	2	; select bank2
 15362  12E0  00BF               	movwf	_distance$1896^(0+256)
 15363  12E1  0021               	movlb	1	; select bank1
 15364  12E2  0827               	movf	(?_sin+1)^(0+128),w
 15365  12E3  0022               	movlb	2	; select bank2
 15366  12E4  00C0               	movwf	(_distance$1896+1)^(0+256)
 15367  12E5  0021               	movlb	1	; select bank1
 15368  12E6  0828               	movf	(?_sin+2)^(0+128),w
 15369  12E7  0022               	movlb	2	; select bank2
 15370  12E8  00C1               	movwf	(_distance$1896+2)^(0+256)
 15371                           
 15372                           ;GPS_distance.c: 59: dist = sin(deg2rad(lat1)) * sin(deg2rad(lat2)) + cos(deg2rad(lat1))
      +                           * cos(deg2rad(lat2)) * cos(deg2rad(theta));
 15373  12E9  0836               	movf	_distance$1893^(0+256),w
 15374  12EA  0020               	movlb	0	; select bank0
 15375  12EB  00B6               	movwf	___ftmul@f1
 15376  12EC  0022               	movlb	2	; select bank2
 15377  12ED  0837               	movf	(_distance$1893+1)^(0+256),w
 15378  12EE  0020               	movlb	0	; select bank0
 15379  12EF  00B7               	movwf	___ftmul@f1+1
 15380  12F0  0022               	movlb	2	; select bank2
 15381  12F1  0838               	movf	(_distance$1893+2)^(0+256),w
 15382  12F2  0020               	movlb	0	; select bank0
 15383  12F3  00B8               	movwf	___ftmul@f1+2
 15384  12F4  0022               	movlb	2	; select bank2
 15385  12F5  0839               	movf	_distance$1894^(0+256),w
 15386  12F6  0020               	movlb	0	; select bank0
 15387  12F7  00B9               	movwf	___ftmul@f2
 15388  12F8  0022               	movlb	2	; select bank2
 15389  12F9  083A               	movf	(_distance$1894+1)^(0+256),w
 15390  12FA  0020               	movlb	0	; select bank0
 15391  12FB  00BA               	movwf	___ftmul@f2+1
 15392  12FC  0022               	movlb	2	; select bank2
 15393  12FD  083B               	movf	(_distance$1894+2)^(0+256),w
 15394  12FE  0020               	movlb	0	; select bank0
 15395  12FF  00BB               	movwf	___ftmul@f2+2
 15396  1300  31A7  274C  3191   	fcall	___ftmul
 15397  1303  0020               	movlb	0	; select bank0
 15398  1304  0836               	movf	?___ftmul,w
 15399  1305  00D9               	movwf	___ftadd@f1
 15400  1306  0837               	movf	?___ftmul+1,w
 15401  1307  00DA               	movwf	___ftadd@f1+1
 15402  1308  0838               	movf	?___ftmul+2,w
 15403  1309  00DB               	movwf	___ftadd@f1+2
 15404  130A  0022               	movlb	2	; select bank2
 15405  130B  083C               	movf	_distance$1895^(0+256),w
 15406  130C  0020               	movlb	0	; select bank0
 15407  130D  00B6               	movwf	___ftmul@f1
 15408  130E  0022               	movlb	2	; select bank2
 15409  130F  083D               	movf	(_distance$1895+1)^(0+256),w
 15410  1310  0020               	movlb	0	; select bank0
 15411  1311  00B7               	movwf	___ftmul@f1+1
 15412  1312  0022               	movlb	2	; select bank2
 15413  1313  083E               	movf	(_distance$1895+2)^(0+256),w
 15414  1314  0020               	movlb	0	; select bank0
 15415  1315  00B8               	movwf	___ftmul@f1+2
 15416  1316  0022               	movlb	2	; select bank2
 15417  1317  083F               	movf	_distance$1896^(0+256),w
 15418  1318  0020               	movlb	0	; select bank0
 15419  1319  00B9               	movwf	___ftmul@f2
 15420  131A  0022               	movlb	2	; select bank2
 15421  131B  0840               	movf	(_distance$1896+1)^(0+256),w
 15422  131C  0020               	movlb	0	; select bank0
 15423  131D  00BA               	movwf	___ftmul@f2+1
 15424  131E  0022               	movlb	2	; select bank2
 15425  131F  0841               	movf	(_distance$1896+2)^(0+256),w
 15426  1320  0020               	movlb	0	; select bank0
 15427  1321  00BB               	movwf	___ftmul@f2+2
 15428  1322  31A7  274C  3191   	fcall	___ftmul
 15429  1325  0020               	movlb	0	; select bank0
 15430  1326  0836               	movf	?___ftmul,w
 15431  1327  00DC               	movwf	___ftadd@f2
 15432  1328  0837               	movf	?___ftmul+1,w
 15433  1329  00DD               	movwf	___ftadd@f2+1
 15434  132A  0838               	movf	?___ftmul+2,w
 15435  132B  00DE               	movwf	___ftadd@f2+2
 15436  132C  3198  20C2  3191   	fcall	___ftadd
 15437  132F  0020               	movlb	0	; select bank0
 15438  1330  0859               	movf	?___ftadd,w
 15439  1331  0022               	movlb	2	; select bank2
 15440  1332  00C2               	movwf	distance@dist^(0+256)
 15441  1333  0020               	movlb	0	; select bank0
 15442  1334  085A               	movf	?___ftadd+1,w
 15443  1335  0022               	movlb	2	; select bank2
 15444  1336  00C3               	movwf	(distance@dist+1)^(0+256)
 15445  1337  0020               	movlb	0	; select bank0
 15446  1338  085B               	movf	?___ftadd+2,w
 15447  1339  0022               	movlb	2	; select bank2
 15448  133A  00C4               	movwf	(distance@dist+2)^(0+256)
 15449                           
 15450                           ;GPS_distance.c: 60: dist = acos(dist);
 15451  133B  0842               	movf	distance@dist^(0+256),w
 15452  133C  0021               	movlb	1	; select bank1
 15453  133D  00D1               	movwf	acos@x^(0+128)
 15454  133E  0022               	movlb	2	; select bank2
 15455  133F  0843               	movf	(distance@dist+1)^(0+256),w
 15456  1340  0021               	movlb	1	; select bank1
 15457  1341  00D2               	movwf	(acos@x+1)^(0+128)
 15458  1342  0022               	movlb	2	; select bank2
 15459  1343  0844               	movf	(distance@dist+2)^(0+256),w
 15460  1344  0021               	movlb	1	; select bank1
 15461  1345  00D3               	movwf	(acos@x+2)^(0+128)
 15462  1346  31A1  21A0  3191   	fcall	_acos
 15463  1349  0021               	movlb	1	; select bank1
 15464  134A  0851               	movf	?_acos^(0+128),w
 15465  134B  0022               	movlb	2	; select bank2
 15466  134C  00C2               	movwf	distance@dist^(0+256)
 15467  134D  0021               	movlb	1	; select bank1
 15468  134E  0852               	movf	(?_acos+1)^(0+128),w
 15469  134F  0022               	movlb	2	; select bank2
 15470  1350  00C3               	movwf	(distance@dist+1)^(0+256)
 15471  1351  0021               	movlb	1	; select bank1
 15472  1352  0853               	movf	(?_acos+2)^(0+128),w
 15473  1353  0022               	movlb	2	; select bank2
 15474  1354  00C4               	movwf	(distance@dist+2)^(0+256)
 15475                           
 15476                           ;GPS_distance.c: 61: dist = rad2deg(dist);
 15477  1355  0842               	movf	distance@dist^(0+256),w
 15478  1356  0020               	movlb	0	; select bank0
 15479  1357  00D6               	movwf	rad2deg@rad
 15480  1358  0022               	movlb	2	; select bank2
 15481  1359  0843               	movf	(distance@dist+1)^(0+256),w
 15482  135A  0020               	movlb	0	; select bank0
 15483  135B  00D7               	movwf	rad2deg@rad+1
 15484  135C  0022               	movlb	2	; select bank2
 15485  135D  0844               	movf	(distance@dist+2)^(0+256),w
 15486  135E  0020               	movlb	0	; select bank0
 15487  135F  00D8               	movwf	rad2deg@rad+2
 15488  1360  31AE  2606  3191   	fcall	_rad2deg
 15489  1363  0020               	movlb	0	; select bank0
 15490  1364  0856               	movf	?_rad2deg,w
 15491  1365  0022               	movlb	2	; select bank2
 15492  1366  00C2               	movwf	distance@dist^(0+256)
 15493  1367  0020               	movlb	0	; select bank0
 15494  1368  0857               	movf	?_rad2deg+1,w
 15495  1369  0022               	movlb	2	; select bank2
 15496  136A  00C3               	movwf	(distance@dist+1)^(0+256)
 15497  136B  0020               	movlb	0	; select bank0
 15498  136C  0858               	movf	?_rad2deg+2,w
 15499  136D  0022               	movlb	2	; select bank2
 15500  136E  00C4               	movwf	(distance@dist+2)^(0+256)
 15501                           
 15502                           ;GPS_distance.c: 62: dist = dist * 60 * 1.1515;
 15503  136F  302E               	movlw	46
 15504  1370  0020               	movlb	0	; select bank0
 15505  1371  00B6               	movwf	___ftmul@f1
 15506  1372  308A               	movlw	138
 15507  1373  00B7               	movwf	___ftmul@f1+1
 15508  1374  3042               	movlw	66
 15509  1375  00B8               	movwf	___ftmul@f1+2
 15510  1376  0022               	movlb	2	; select bank2
 15511  1377  0842               	movf	distance@dist^(0+256),w
 15512  1378  0020               	movlb	0	; select bank0
 15513  1379  00B9               	movwf	___ftmul@f2
 15514  137A  0022               	movlb	2	; select bank2
 15515  137B  0843               	movf	(distance@dist+1)^(0+256),w
 15516  137C  0020               	movlb	0	; select bank0
 15517  137D  00BA               	movwf	___ftmul@f2+1
 15518  137E  0022               	movlb	2	; select bank2
 15519  137F  0844               	movf	(distance@dist+2)^(0+256),w
 15520  1380  0020               	movlb	0	; select bank0
 15521  1381  00BB               	movwf	___ftmul@f2+2
 15522  1382  31A7  274C  3191   	fcall	___ftmul
 15523  1385  0020               	movlb	0	; select bank0
 15524  1386  0836               	movf	?___ftmul,w
 15525  1387  0022               	movlb	2	; select bank2
 15526  1388  00C2               	movwf	distance@dist^(0+256)
 15527  1389  0020               	movlb	0	; select bank0
 15528  138A  0837               	movf	?___ftmul+1,w
 15529  138B  0022               	movlb	2	; select bank2
 15530  138C  00C3               	movwf	(distance@dist+1)^(0+256)
 15531  138D  0020               	movlb	0	; select bank0
 15532  138E  0838               	movf	?___ftmul+2,w
 15533  138F  0022               	movlb	2	; select bank2
 15534  1390  00C4               	movwf	(distance@dist+2)^(0+256)
 15535                           
 15536                           ;GPS_distance.c: 63: switch(unit) {
 15537  1391  2BBA               	goto	l7070
 15538  1392                     l7064:	
 15539                           ;GPS_distance.c: 66: case 'K':
 15540                           
 15541                           ;GPS_distance.c: 65: break;
 15542                           
 15543                           ;GPS_distance.c: 64: case 'M':
 15544                           
 15545                           
 15546                           ;GPS_distance.c: 67: dist = dist * 1.609344;
 15547  1392  30FF               	movlw	255
 15548  1393  0020               	movlb	0	; select bank0
 15549  1394  00B6               	movwf	___ftmul@f1
 15550  1395  30CD               	movlw	205
 15551  1396  2B9B               	goto	L9
 15552  1397                     l7066:	
 15553                           ;GPS_distance.c: 69: case 'N':
 15554                           
 15555                           ;GPS_distance.c: 68: break;
 15556                           
 15557                           
 15558                           ;GPS_distance.c: 70: dist = dist * 0.8684;
 15559  1397  304F               	movlw	79
 15560  1398  0020               	movlb	0	; select bank0
 15561  1399  00B6               	movwf	___ftmul@f1
 15562  139A  305E               	movlw	94
 15563  139B                     L9:	
 15564  139B  00B7               	movwf	___ftmul@f1+1
 15565  139C  303F               	movlw	63
 15566  139D  00B8               	movwf	___ftmul@f1+2
 15567  139E  0022               	movlb	2	; select bank2
 15568  139F  0842               	movf	distance@dist^(0+256),w
 15569  13A0  0020               	movlb	0	; select bank0
 15570  13A1  00B9               	movwf	___ftmul@f2
 15571  13A2  0022               	movlb	2	; select bank2
 15572  13A3  0843               	movf	(distance@dist+1)^(0+256),w
 15573  13A4  0020               	movlb	0	; select bank0
 15574  13A5  00BA               	movwf	___ftmul@f2+1
 15575  13A6  0022               	movlb	2	; select bank2
 15576  13A7  0844               	movf	(distance@dist+2)^(0+256),w
 15577  13A8  0020               	movlb	0	; select bank0
 15578  13A9  00BB               	movwf	___ftmul@f2+2
 15579  13AA  31A7  274C  3191   	fcall	___ftmul
 15580  13AD  0020               	movlb	0	; select bank0
 15581  13AE  0836               	movf	?___ftmul,w
 15582  13AF  0022               	movlb	2	; select bank2
 15583  13B0  00C2               	movwf	distance@dist^(0+256)
 15584  13B1  0020               	movlb	0	; select bank0
 15585  13B2  0837               	movf	?___ftmul+1,w
 15586  13B3  0022               	movlb	2	; select bank2
 15587  13B4  00C3               	movwf	(distance@dist+1)^(0+256)
 15588  13B5  0020               	movlb	0	; select bank0
 15589  13B6  0838               	movf	?___ftmul+2,w
 15590  13B7  0022               	movlb	2	; select bank2
 15591  13B8  00C4               	movwf	(distance@dist+2)^(0+256)
 15592                           
 15593                           ;GPS_distance.c: 72: }
 15594                           
 15595                           ;GPS_distance.c: 71: break;
 15596  13B9  2BC5               	goto	l7072
 15597  13BA                     l7070:	
 15598  13BA  082C               	movf	distance@unit^(0+256),w
 15599                           
 15600                           ; Switch size 1, requested type "space"
 15601                           ; Number of cases is 3, Range of values is 75 to 78
 15602                           ; switch strategies available:
 15603                           ; Name         Instructions Cycles
 15604                           ; simple_byte           10     6 (average)
 15605                           ; direct_byte           17     9 (fixed)
 15606                           ; jumptable            263     9 (fixed)
 15607                           ;	Chosen strategy is simple_byte
 15608  13BB  3A4B               	xorlw	75	; case 75
 15609  13BC  1903               	skipnz
 15610  13BD  2B92               	goto	l7064
 15611  13BE  3A06               	xorlw	6	; case 77
 15612  13BF  1903               	skipnz
 15613  13C0  2BC5               	goto	l7072
 15614  13C1  3A03               	xorlw	3	; case 78
 15615  13C2  1903               	skipnz
 15616  13C3  2B97               	goto	l7066
 15617  13C4  2BC5               	goto	l7072
 15618  13C5                     l7072:	
 15619                           
 15620                           ;GPS_distance.c: 73: return (dist);
 15621  13C5  0842               	movf	distance@dist^(0+256),w
 15622  13C6  00A0               	movwf	?_distance^(0+256)
 15623  13C7  0843               	movf	(distance@dist+1)^(0+256),w
 15624  13C8  00A1               	movwf	(?_distance+1)^(0+256)
 15625  13C9  0844               	movf	(distance@dist+2)^(0+256),w
 15626  13CA  00A2               	movwf	(?_distance+2)^(0+256)
 15627  13CB  0008               	return
 15628  13CC                     __end_of_distance:	
 15629                           
 15630                           	psect	text23
 15631  2E06                     __ptext23:	
 15632 ;; *************** function _rad2deg *****************
 15633 ;; Defined at:
 15634 ;;		line 47 in file "GPS_distance.c"
 15635 ;; Parameters:    Size  Location     Type
 15636 ;;  rad             3   54[BANK0 ] unsigned char 
 15637 ;; Auto vars:     Size  Location     Type
 15638 ;;		None
 15639 ;; Return value:  Size  Location     Type
 15640 ;;                  3   54[BANK0 ] unsigned char 
 15641 ;; Registers used:
 15642 ;;		wreg, status,2, status,0, pclath, cstack
 15643 ;; Tracked objects:
 15644 ;;		On entry : 0/0
 15645 ;;		On exit  : 0/0
 15646 ;;		Unchanged: 0/0
 15647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15648 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15651 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15652 ;;Total ram usage:        3 bytes
 15653 ;; Hardware stack levels used:    1
 15654 ;; Hardware stack levels required when called:    7
 15655 ;; This function calls:
 15656 ;;		___ftdiv
 15657 ;;		___ftmul
 15658 ;; This function is called by:
 15659 ;;		_distance
 15660 ;; This function uses a non-reentrant model
 15661 ;;
 15662                           
 15663                           
 15664                           ;psect for function _rad2deg
 15665  2E06                     _rad2deg:	
 15666                           
 15667                           ;GPS_distance.c: 48: return (rad * 180 / 3.14159265358979323846);
 15668                           
 15669                           ;incstack = 0
 15670                           ; Regs used in _rad2deg: [wreg+status,2+status,0+pclath+cstack]
 15671  2E06  3010               	movlw	16
 15672  2E07  0020               	movlb	0	; select bank0
 15673  2E08  00C6               	movwf	___ftdiv@f2
 15674  2E09  3049               	movlw	73
 15675  2E0A  00C7               	movwf	___ftdiv@f2+1
 15676  2E0B  3040               	movlw	64
 15677  2E0C  00C8               	movwf	___ftdiv@f2+2
 15678  2E0D  3000               	movlw	0
 15679  2E0E  00B6               	movwf	___ftmul@f1
 15680  2E0F  3034               	movlw	52
 15681  2E10  00B7               	movwf	___ftmul@f1+1
 15682  2E11  3043               	movlw	67
 15683  2E12  00B8               	movwf	___ftmul@f1+2
 15684  2E13  0856               	movf	rad2deg@rad,w
 15685  2E14  00B9               	movwf	___ftmul@f2
 15686  2E15  0857               	movf	rad2deg@rad+1,w
 15687  2E16  00BA               	movwf	___ftmul@f2+1
 15688  2E17  0858               	movf	rad2deg@rad+2,w
 15689  2E18  00BB               	movwf	___ftmul@f2+2
 15690  2E19  31A7  274C  31AE   	fcall	___ftmul
 15691  2E1C  0020               	movlb	0	; select bank0
 15692  2E1D  0836               	movf	?___ftmul,w
 15693  2E1E  00C9               	movwf	___ftdiv@f1
 15694  2E1F  0837               	movf	?___ftmul+1,w
 15695  2E20  00CA               	movwf	___ftdiv@f1+1
 15696  2E21  0838               	movf	?___ftmul+2,w
 15697  2E22  00CB               	movwf	___ftdiv@f1+2
 15698  2E23  31A6  26A3         	fcall	___ftdiv
 15699  2E25  0020               	movlb	0	; select bank0
 15700  2E26  0846               	movf	?___ftdiv,w
 15701  2E27  00D6               	movwf	?_rad2deg
 15702  2E28  0847               	movf	?___ftdiv+1,w
 15703  2E29  00D7               	movwf	?_rad2deg+1
 15704  2E2A  0848               	movf	?___ftdiv+2,w
 15705  2E2B  00D8               	movwf	?_rad2deg+2
 15706  2E2C  0008               	return
 15707  2E2D                     __end_of_rad2deg:	
 15708                           
 15709                           	psect	text24
 15710  2DDF                     __ptext24:	
 15711 ;; *************** function _deg2rad *****************
 15712 ;; Defined at:
 15713 ;;		line 40 in file "GPS_distance.c"
 15714 ;; Parameters:    Size  Location     Type
 15715 ;;  deg             3   54[BANK0 ] unsigned char 
 15716 ;; Auto vars:     Size  Location     Type
 15717 ;;		None
 15718 ;; Return value:  Size  Location     Type
 15719 ;;                  3   54[BANK0 ] unsigned char 
 15720 ;; Registers used:
 15721 ;;		wreg, status,2, status,0, pclath, cstack
 15722 ;; Tracked objects:
 15723 ;;		On entry : 0/0
 15724 ;;		On exit  : 0/0
 15725 ;;		Unchanged: 0/0
 15726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15727 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15730 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15731 ;;Total ram usage:        3 bytes
 15732 ;; Hardware stack levels used:    1
 15733 ;; Hardware stack levels required when called:    7
 15734 ;; This function calls:
 15735 ;;		___ftdiv
 15736 ;;		___ftmul
 15737 ;; This function is called by:
 15738 ;;		_distance
 15739 ;;		_heading
 15740 ;; This function uses a non-reentrant model
 15741 ;;
 15742                           
 15743                           
 15744                           ;psect for function _deg2rad
 15745  2DDF                     _deg2rad:	
 15746                           
 15747                           ;GPS_distance.c: 41: return (deg * 3.14159265358979323846 / 180);
 15748                           
 15749                           ;incstack = 0
 15750                           ; Regs used in _deg2rad: [wreg+status,2+status,0+pclath+cstack]
 15751  2DDF  3000               	movlw	0
 15752  2DE0  0020               	movlb	0	; select bank0
 15753  2DE1  00C6               	movwf	___ftdiv@f2
 15754  2DE2  3034               	movlw	52
 15755  2DE3  00C7               	movwf	___ftdiv@f2+1
 15756  2DE4  3043               	movlw	67
 15757  2DE5  00C8               	movwf	___ftdiv@f2+2
 15758  2DE6  3010               	movlw	16
 15759  2DE7  00B6               	movwf	___ftmul@f1
 15760  2DE8  3049               	movlw	73
 15761  2DE9  00B7               	movwf	___ftmul@f1+1
 15762  2DEA  3040               	movlw	64
 15763  2DEB  00B8               	movwf	___ftmul@f1+2
 15764  2DEC  0856               	movf	deg2rad@deg,w
 15765  2DED  00B9               	movwf	___ftmul@f2
 15766  2DEE  0857               	movf	deg2rad@deg+1,w
 15767  2DEF  00BA               	movwf	___ftmul@f2+1
 15768  2DF0  0858               	movf	deg2rad@deg+2,w
 15769  2DF1  00BB               	movwf	___ftmul@f2+2
 15770  2DF2  31A7  274C  31AD   	fcall	___ftmul
 15771  2DF5  0020               	movlb	0	; select bank0
 15772  2DF6  0836               	movf	?___ftmul,w
 15773  2DF7  00C9               	movwf	___ftdiv@f1
 15774  2DF8  0837               	movf	?___ftmul+1,w
 15775  2DF9  00CA               	movwf	___ftdiv@f1+1
 15776  2DFA  0838               	movf	?___ftmul+2,w
 15777  2DFB  00CB               	movwf	___ftdiv@f1+2
 15778  2DFC  31A6  26A3         	fcall	___ftdiv
 15779  2DFE  0020               	movlb	0	; select bank0
 15780  2DFF  0846               	movf	?___ftdiv,w
 15781  2E00  00D6               	movwf	?_deg2rad
 15782  2E01  0847               	movf	?___ftdiv+1,w
 15783  2E02  00D7               	movwf	?_deg2rad+1
 15784  2E03  0848               	movf	?___ftdiv+2,w
 15785  2E04  00D8               	movwf	?_deg2rad+2
 15786  2E05  0008               	return
 15787  2E06                     __end_of_deg2rad:	
 15788                           
 15789                           	psect	text25
 15790  2494                     __ptext25:	
 15791 ;; *************** function _cos *****************
 15792 ;; Defined at:
 15793 ;;		line 13 in file "/opt/microchip/xc8/v1.35/sources/common/cos.c"
 15794 ;; Parameters:    Size  Location     Type
 15795 ;;  f               3   20[BANK1 ] unsigned char 
 15796 ;; Auto vars:     Size  Location     Type
 15797 ;;		None
 15798 ;; Return value:  Size  Location     Type
 15799 ;;                  3   20[BANK1 ] unsigned char 
 15800 ;; Registers used:
 15801 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15802 ;; Tracked objects:
 15803 ;;		On entry : 0/0
 15804 ;;		On exit  : 0/0
 15805 ;;		Unchanged: 0/0
 15806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15807 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15808 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15810 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15811 ;;Total ram usage:        6 bytes
 15812 ;; Hardware stack levels used:    1
 15813 ;; Hardware stack levels required when called:    9
 15814 ;; This function calls:
 15815 ;;		___ftadd
 15816 ;;		___ftge
 15817 ;;		_sin
 15818 ;; This function is called by:
 15819 ;;		_distance
 15820 ;;		_heading
 15821 ;; This function uses a non-reentrant model
 15822 ;;
 15823                           
 15824                           
 15825                           ;psect for function _cos
 15826  2494                     _cos:	
 15827                           
 15828                           ;incstack = 0
 15829                           ; Regs used in _cos: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15830  2494  3010               	movlw	16
 15831  2495  0020               	movlb	0	; select bank0
 15832  2496  00A0               	movwf	___ftge@ff1
 15833  2497  3049               	movlw	73
 15834  2498  00A1               	movwf	___ftge@ff1+1
 15835  2499  3040               	movlw	64
 15836  249A  00A2               	movwf	___ftge@ff1+2
 15837  249B  0021               	movlb	1	; select bank1
 15838  249C  0834               	movf	cos@f^(0+128),w
 15839  249D  0020               	movlb	0	; select bank0
 15840  249E  00A3               	movwf	___ftge@ff2
 15841  249F  0021               	movlb	1	; select bank1
 15842  24A0  0835               	movf	(cos@f+1)^(0+128),w
 15843  24A1  0020               	movlb	0	; select bank0
 15844  24A2  00A4               	movwf	___ftge@ff2+1
 15845  24A3  0021               	movlb	1	; select bank1
 15846  24A4  0836               	movf	(cos@f+2)^(0+128),w
 15847  24A5  0020               	movlb	0	; select bank0
 15848  24A6  00A5               	movwf	___ftge@ff2+2
 15849  24A7  31AF  27C4  31A4   	fcall	___ftge
 15850  24AA  1803               	btfsc	3,0
 15851  24AB  2CDE               	goto	l6322
 15852  24AC  30CC               	movlw	204
 15853  24AD  0020               	movlb	0	; select bank0
 15854  24AE  00D9               	movwf	___ftadd@f1
 15855  24AF  3096               	movlw	150
 15856  24B0  00DA               	movwf	___ftadd@f1+1
 15857  24B1  30C0               	movlw	192
 15858  24B2  00DB               	movwf	___ftadd@f1+2
 15859  24B3  0021               	movlb	1	; select bank1
 15860  24B4  0834               	movf	cos@f^(0+128),w
 15861  24B5  0020               	movlb	0	; select bank0
 15862  24B6  00DC               	movwf	___ftadd@f2
 15863  24B7  0021               	movlb	1	; select bank1
 15864  24B8  0835               	movf	(cos@f+1)^(0+128),w
 15865  24B9  0020               	movlb	0	; select bank0
 15866  24BA  00DD               	movwf	___ftadd@f2+1
 15867  24BB  0021               	movlb	1	; select bank1
 15868  24BC  0836               	movf	(cos@f+2)^(0+128),w
 15869  24BD  0020               	movlb	0	; select bank0
 15870  24BE  00DE               	movwf	___ftadd@f2+2
 15871  24BF  3198  20C2  31A4   	fcall	___ftadd
 15872  24C2  0020               	movlb	0	; select bank0
 15873  24C3  0859               	movf	?___ftadd,w
 15874  24C4  0021               	movlb	1	; select bank1
 15875  24C5  00B7               	movwf	_cos$1924^(0+128)
 15876  24C6  0020               	movlb	0	; select bank0
 15877  24C7  085A               	movf	?___ftadd+1,w
 15878  24C8  0021               	movlb	1	; select bank1
 15879  24C9  00B8               	movwf	(_cos$1924+1)^(0+128)
 15880  24CA  0020               	movlb	0	; select bank0
 15881  24CB  085B               	movf	?___ftadd+2,w
 15882  24CC  0021               	movlb	1	; select bank1
 15883  24CD  00B9               	movwf	(_cos$1924+2)^(0+128)
 15884  24CE  0837               	movf	_cos$1924^(0+128),w
 15885  24CF  00A6               	movwf	sin@f^(0+128)
 15886  24D0  0838               	movf	(_cos$1924+1)^(0+128),w
 15887  24D1  00A7               	movwf	(sin@f+1)^(0+128)
 15888  24D2  0839               	movf	(_cos$1924+2)^(0+128),w
 15889  24D3  00A8               	movwf	(sin@f+2)^(0+128)
 15890  24D4  319C  241C         	fcall	_sin
 15891  24D6  0021               	movlb	1	; select bank1
 15892  24D7  0826               	movf	?_sin^(0+128),w
 15893  24D8  00B4               	movwf	?_cos^(0+128)
 15894  24D9  0827               	movf	(?_sin+1)^(0+128),w
 15895  24DA  00B5               	movwf	(?_cos+1)^(0+128)
 15896  24DB  0828               	movf	(?_sin+2)^(0+128),w
 15897  24DC  00B6               	movwf	(?_cos+2)^(0+128)
 15898  24DD  0008               	return
 15899  24DE                     l6322:	
 15900  24DE  3010               	movlw	16
 15901  24DF  0020               	movlb	0	; select bank0
 15902  24E0  00D9               	movwf	___ftadd@f1
 15903  24E1  30C9               	movlw	201
 15904  24E2  00DA               	movwf	___ftadd@f1+1
 15905  24E3  303F               	movlw	63
 15906  24E4  00DB               	movwf	___ftadd@f1+2
 15907  24E5  0021               	movlb	1	; select bank1
 15908  24E6  0834               	movf	cos@f^(0+128),w
 15909  24E7  0020               	movlb	0	; select bank0
 15910  24E8  00DC               	movwf	___ftadd@f2
 15911  24E9  0021               	movlb	1	; select bank1
 15912  24EA  0835               	movf	(cos@f+1)^(0+128),w
 15913  24EB  0020               	movlb	0	; select bank0
 15914  24EC  00DD               	movwf	___ftadd@f2+1
 15915  24ED  0021               	movlb	1	; select bank1
 15916  24EE  0836               	movf	(cos@f+2)^(0+128),w
 15917  24EF  0020               	movlb	0	; select bank0
 15918  24F0  00DE               	movwf	___ftadd@f2+2
 15919  24F1  3198  20C2  31A4   	fcall	___ftadd
 15920  24F4  0020               	movlb	0	; select bank0
 15921  24F5  0859               	movf	?___ftadd,w
 15922  24F6  0021               	movlb	1	; select bank1
 15923  24F7  00B7               	movwf	_cos$1924^(0+128)
 15924  24F8  0020               	movlb	0	; select bank0
 15925  24F9  085A               	movf	?___ftadd+1,w
 15926  24FA  0021               	movlb	1	; select bank1
 15927  24FB  00B8               	movwf	(_cos$1924+1)^(0+128)
 15928  24FC  0020               	movlb	0	; select bank0
 15929  24FD  085B               	movf	?___ftadd+2,w
 15930  24FE  0021               	movlb	1	; select bank1
 15931  24FF  00B9               	movwf	(_cos$1924+2)^(0+128)
 15932  2500  0837               	movf	_cos$1924^(0+128),w
 15933  2501  00A6               	movwf	sin@f^(0+128)
 15934  2502  0838               	movf	(_cos$1924+1)^(0+128),w
 15935  2503  00A7               	movwf	(sin@f+1)^(0+128)
 15936  2504  0839               	movf	(_cos$1924+2)^(0+128),w
 15937  2505  00A8               	movwf	(sin@f+2)^(0+128)
 15938  2506  319C  241C         	fcall	_sin
 15939  2508  0021               	movlb	1	; select bank1
 15940  2509  0826               	movf	?_sin^(0+128),w
 15941  250A  00B4               	movwf	?_cos^(0+128)
 15942  250B  0827               	movf	(?_sin+1)^(0+128),w
 15943  250C  00B5               	movwf	(?_cos+1)^(0+128)
 15944  250D  0828               	movf	(?_sin+2)^(0+128),w
 15945  250E  00B6               	movwf	(?_cos+2)^(0+128)
 15946  250F  0008               	return
 15947  2510                     __end_of_cos:	
 15948                           
 15949                           	psect	text26
 15950  1C1C                     __ptext26:	
 15951 ;; *************** function _sin *****************
 15952 ;; Defined at:
 15953 ;;		line 13 in file "/opt/microchip/xc8/v1.35/sources/common/sin.c"
 15954 ;; Parameters:    Size  Location     Type
 15955 ;;  f               3    6[BANK1 ] unsigned char 
 15956 ;; Auto vars:     Size  Location     Type
 15957 ;;  x2              3   16[BANK1 ] unsigned char 
 15958 ;;  y               3   10[BANK1 ] unsigned char 
 15959 ;;  sgn             1   19[BANK1 ] unsigned char 
 15960 ;; Return value:  Size  Location     Type
 15961 ;;                  3    6[BANK1 ] unsigned char 
 15962 ;; Registers used:
 15963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15964 ;; Tracked objects:
 15965 ;;		On entry : 0/0
 15966 ;;		On exit  : 0/0
 15967 ;;		Unchanged: 0/0
 15968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 15969 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15970 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15971 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15972 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 15973 ;;Total ram usage:       14 bytes
 15974 ;; Hardware stack levels used:    1
 15975 ;; Hardware stack levels required when called:    8
 15976 ;; This function calls:
 15977 ;;		___ftadd
 15978 ;;		___ftdiv
 15979 ;;		___ftge
 15980 ;;		___ftmul
 15981 ;;		___ftneg
 15982 ;;		___ftsub
 15983 ;;		_eval_poly
 15984 ;;		_floor
 15985 ;; This function is called by:
 15986 ;;		_distance
 15987 ;;		_heading
 15988 ;;		_cos
 15989 ;; This function uses a non-reentrant model
 15990 ;;
 15991                           
 15992                           
 15993                           ;psect for function _sin
 15994  1C1C                     _sin:	
 15995                           
 15996                           ;incstack = 0
 15997                           ; Regs used in _sin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15998  1C1C  0021               	movlb	1	; select bank1
 15999  1C1D  01B3               	clrf	sin@sgn^(0+128)
 16000  1C1E  0826               	movf	sin@f^(0+128),w
 16001  1C1F  0020               	movlb	0	; select bank0
 16002  1C20  00A0               	movwf	___ftge@ff1
 16003  1C21  0021               	movlb	1	; select bank1
 16004  1C22  0827               	movf	(sin@f+1)^(0+128),w
 16005  1C23  0020               	movlb	0	; select bank0
 16006  1C24  00A1               	movwf	___ftge@ff1+1
 16007  1C25  0021               	movlb	1	; select bank1
 16008  1C26  0828               	movf	(sin@f+2)^(0+128),w
 16009  1C27  0020               	movlb	0	; select bank0
 16010  1C28  00A2               	movwf	___ftge@ff1+2
 16011  1C29  3000               	movlw	0
 16012  1C2A  00A3               	movwf	___ftge@ff2
 16013  1C2B  3000               	movlw	0
 16014  1C2C  00A4               	movwf	___ftge@ff2+1
 16015  1C2D  3000               	movlw	0
 16016  1C2E  00A5               	movwf	___ftge@ff2+2
 16017  1C2F  31AF  27C4  319C   	fcall	___ftge
 16018  1C32  1803               	btfsc	3,0
 16019  1C33  2C51               	goto	l5964
 16020  1C34  0021               	movlb	1	; select bank1
 16021  1C35  0826               	movf	sin@f^(0+128),w
 16022  1C36  0020               	movlb	0	; select bank0
 16023  1C37  00A0               	movwf	___ftneg@f1
 16024  1C38  0021               	movlb	1	; select bank1
 16025  1C39  0827               	movf	(sin@f+1)^(0+128),w
 16026  1C3A  0020               	movlb	0	; select bank0
 16027  1C3B  00A1               	movwf	___ftneg@f1+1
 16028  1C3C  0021               	movlb	1	; select bank1
 16029  1C3D  0828               	movf	(sin@f+2)^(0+128),w
 16030  1C3E  0020               	movlb	0	; select bank0
 16031  1C3F  00A2               	movwf	___ftneg@f1+2
 16032  1C40  3198  2003  319C   	fcall	___ftneg
 16033  1C43  0020               	movlb	0	; select bank0
 16034  1C44  0820               	movf	?___ftneg,w
 16035  1C45  0021               	movlb	1	; select bank1
 16036  1C46  00A6               	movwf	sin@f^(0+128)
 16037  1C47  0020               	movlb	0	; select bank0
 16038  1C48  0821               	movf	?___ftneg+1,w
 16039  1C49  0021               	movlb	1	; select bank1
 16040  1C4A  00A7               	movwf	(sin@f+1)^(0+128)
 16041  1C4B  0020               	movlb	0	; select bank0
 16042  1C4C  0822               	movf	?___ftneg+2,w
 16043  1C4D  0021               	movlb	1	; select bank1
 16044  1C4E  00A8               	movwf	(sin@f+2)^(0+128)
 16045  1C4F  01B3               	clrf	sin@sgn^(0+128)
 16046  1C50  0AB3               	incf	sin@sgn^(0+128),f
 16047  1C51                     l5964:	
 16048  1C51  30FA               	movlw	250
 16049  1C52  0020               	movlb	0	; select bank0
 16050  1C53  00B6               	movwf	___ftmul@f1
 16051  1C54  3022               	movlw	34
 16052  1C55  00B7               	movwf	___ftmul@f1+1
 16053  1C56  303E               	movlw	62
 16054  1C57  00B8               	movwf	___ftmul@f1+2
 16055  1C58  0021               	movlb	1	; select bank1
 16056  1C59  0826               	movf	sin@f^(0+128),w
 16057  1C5A  0020               	movlb	0	; select bank0
 16058  1C5B  00B9               	movwf	___ftmul@f2
 16059  1C5C  0021               	movlb	1	; select bank1
 16060  1C5D  0827               	movf	(sin@f+1)^(0+128),w
 16061  1C5E  0020               	movlb	0	; select bank0
 16062  1C5F  00BA               	movwf	___ftmul@f2+1
 16063  1C60  0021               	movlb	1	; select bank1
 16064  1C61  0828               	movf	(sin@f+2)^(0+128),w
 16065  1C62  0020               	movlb	0	; select bank0
 16066  1C63  00BB               	movwf	___ftmul@f2+2
 16067  1C64  31A7  274C  319C   	fcall	___ftmul
 16068  1C67  0020               	movlb	0	; select bank0
 16069  1C68  0836               	movf	?___ftmul,w
 16070  1C69  0021               	movlb	1	; select bank1
 16071  1C6A  00A6               	movwf	sin@f^(0+128)
 16072  1C6B  0020               	movlb	0	; select bank0
 16073  1C6C  0837               	movf	?___ftmul+1,w
 16074  1C6D  0021               	movlb	1	; select bank1
 16075  1C6E  00A7               	movwf	(sin@f+1)^(0+128)
 16076  1C6F  0020               	movlb	0	; select bank0
 16077  1C70  0838               	movf	?___ftmul+2,w
 16078  1C71  0021               	movlb	1	; select bank1
 16079  1C72  00A8               	movwf	(sin@f+2)^(0+128)
 16080  1C73  0826               	movf	sin@f^(0+128),w
 16081  1C74  0020               	movlb	0	; select bank0
 16082  1C75  00E6               	movwf	floor@x
 16083  1C76  0021               	movlb	1	; select bank1
 16084  1C77  0827               	movf	(sin@f+1)^(0+128),w
 16085  1C78  0020               	movlb	0	; select bank0
 16086  1C79  00E7               	movwf	floor@x+1
 16087  1C7A  0021               	movlb	1	; select bank1
 16088  1C7B  0828               	movf	(sin@f+2)^(0+128),w
 16089  1C7C  0020               	movlb	0	; select bank0
 16090  1C7D  00E8               	movwf	floor@x+2
 16091  1C7E  31A5  2510  319C   	fcall	_floor
 16092  1C81  0020               	movlb	0	; select bank0
 16093  1C82  0866               	movf	?_floor,w
 16094  1C83  0021               	movlb	1	; select bank1
 16095  1C84  00A0               	movwf	___ftsub@f2^(0+128)
 16096  1C85  0020               	movlb	0	; select bank0
 16097  1C86  0867               	movf	?_floor+1,w
 16098  1C87  0021               	movlb	1	; select bank1
 16099  1C88  00A1               	movwf	(___ftsub@f2+1)^(0+128)
 16100  1C89  0020               	movlb	0	; select bank0
 16101  1C8A  0868               	movf	?_floor+2,w
 16102  1C8B  0021               	movlb	1	; select bank1
 16103  1C8C  00A2               	movwf	(___ftsub@f2+2)^(0+128)
 16104  1C8D  0826               	movf	sin@f^(0+128),w
 16105  1C8E  00A3               	movwf	___ftsub@f1^(0+128)
 16106  1C8F  0827               	movf	(sin@f+1)^(0+128),w
 16107  1C90  00A4               	movwf	(___ftsub@f1+1)^(0+128)
 16108  1C91  0828               	movf	(sin@f+2)^(0+128),w
 16109  1C92  00A5               	movwf	(___ftsub@f1+2)^(0+128)
 16110  1C93  31AE  2683  319C   	fcall	___ftsub
 16111  1C96  0021               	movlb	1	; select bank1
 16112  1C97  0820               	movf	?___ftsub^(0+128),w
 16113  1C98  00A6               	movwf	sin@f^(0+128)
 16114  1C99  0821               	movf	(?___ftsub+1)^(0+128),w
 16115  1C9A  00A7               	movwf	(sin@f+1)^(0+128)
 16116  1C9B  0822               	movf	(?___ftsub+2)^(0+128),w
 16117  1C9C  00A8               	movwf	(sin@f+2)^(0+128)
 16118  1C9D  3000               	movlw	0
 16119  1C9E  0020               	movlb	0	; select bank0
 16120  1C9F  00B6               	movwf	___ftmul@f1
 16121  1CA0  3080               	movlw	128
 16122  1CA1  00B7               	movwf	___ftmul@f1+1
 16123  1CA2  3040               	movlw	64
 16124  1CA3  00B8               	movwf	___ftmul@f1+2
 16125  1CA4  0021               	movlb	1	; select bank1
 16126  1CA5  0826               	movf	sin@f^(0+128),w
 16127  1CA6  0020               	movlb	0	; select bank0
 16128  1CA7  00B9               	movwf	___ftmul@f2
 16129  1CA8  0021               	movlb	1	; select bank1
 16130  1CA9  0827               	movf	(sin@f+1)^(0+128),w
 16131  1CAA  0020               	movlb	0	; select bank0
 16132  1CAB  00BA               	movwf	___ftmul@f2+1
 16133  1CAC  0021               	movlb	1	; select bank1
 16134  1CAD  0828               	movf	(sin@f+2)^(0+128),w
 16135  1CAE  0020               	movlb	0	; select bank0
 16136  1CAF  00BB               	movwf	___ftmul@f2+2
 16137  1CB0  31A7  274C  319C   	fcall	___ftmul
 16138  1CB3  0020               	movlb	0	; select bank0
 16139  1CB4  0836               	movf	?___ftmul,w
 16140  1CB5  0021               	movlb	1	; select bank1
 16141  1CB6  00A6               	movwf	sin@f^(0+128)
 16142  1CB7  0020               	movlb	0	; select bank0
 16143  1CB8  0837               	movf	?___ftmul+1,w
 16144  1CB9  0021               	movlb	1	; select bank1
 16145  1CBA  00A7               	movwf	(sin@f+1)^(0+128)
 16146  1CBB  0020               	movlb	0	; select bank0
 16147  1CBC  0838               	movf	?___ftmul+2,w
 16148  1CBD  0021               	movlb	1	; select bank1
 16149  1CBE  00A8               	movwf	(sin@f+2)^(0+128)
 16150  1CBF  3000               	movlw	0
 16151  1CC0  0020               	movlb	0	; select bank0
 16152  1CC1  00A0               	movwf	___ftge@ff1
 16153  1CC2  3000               	movlw	0
 16154  1CC3  00A1               	movwf	___ftge@ff1+1
 16155  1CC4  3040               	movlw	64
 16156  1CC5  00A2               	movwf	___ftge@ff1+2
 16157  1CC6  0021               	movlb	1	; select bank1
 16158  1CC7  0826               	movf	sin@f^(0+128),w
 16159  1CC8  0020               	movlb	0	; select bank0
 16160  1CC9  00A3               	movwf	___ftge@ff2
 16161  1CCA  0021               	movlb	1	; select bank1
 16162  1CCB  0827               	movf	(sin@f+1)^(0+128),w
 16163  1CCC  0020               	movlb	0	; select bank0
 16164  1CCD  00A4               	movwf	___ftge@ff2+1
 16165  1CCE  0021               	movlb	1	; select bank1
 16166  1CCF  0828               	movf	(sin@f+2)^(0+128),w
 16167  1CD0  0020               	movlb	0	; select bank0
 16168  1CD1  00A5               	movwf	___ftge@ff2+2
 16169  1CD2  31AF  27C4  319C   	fcall	___ftge
 16170  1CD5  1803               	btfsc	3,0
 16171  1CD6  2CF7               	goto	l5976
 16172  1CD7  3000               	movlw	0
 16173  1CD8  0021               	movlb	1	; select bank1
 16174  1CD9  00A0               	movwf	___ftsub@f2^(0+128)
 16175  1CDA  3000               	movlw	0
 16176  1CDB  00A1               	movwf	(___ftsub@f2+1)^(0+128)
 16177  1CDC  3040               	movlw	64
 16178  1CDD  00A2               	movwf	(___ftsub@f2+2)^(0+128)
 16179  1CDE  0826               	movf	sin@f^(0+128),w
 16180  1CDF  00A3               	movwf	___ftsub@f1^(0+128)
 16181  1CE0  0827               	movf	(sin@f+1)^(0+128),w
 16182  1CE1  00A4               	movwf	(___ftsub@f1+1)^(0+128)
 16183  1CE2  0828               	movf	(sin@f+2)^(0+128),w
 16184  1CE3  00A5               	movwf	(___ftsub@f1+2)^(0+128)
 16185  1CE4  31AE  2683  319C   	fcall	___ftsub
 16186  1CE7  0021               	movlb	1	; select bank1
 16187  1CE8  0820               	movf	?___ftsub^(0+128),w
 16188  1CE9  00A6               	movwf	sin@f^(0+128)
 16189  1CEA  0821               	movf	(?___ftsub+1)^(0+128),w
 16190  1CEB  00A7               	movwf	(sin@f+1)^(0+128)
 16191  1CEC  0822               	movf	(?___ftsub+2)^(0+128),w
 16192  1CED  00A8               	movwf	(sin@f+2)^(0+128)
 16193  1CEE  0833               	movf	sin@sgn^(0+128),w
 16194  1CEF  1D03               	btfss	3,2
 16195  1CF0  2CF3               	goto	u7510
 16196  1CF1  3001               	movlw	1
 16197  1CF2  2CF4               	goto	u7520
 16198  1CF3                     u7510:	
 16199  1CF3  3000               	movlw	0
 16200  1CF4                     u7520:	
 16201  1CF4  00A9               	movwf	??_sin^(0+128)
 16202  1CF5  0829               	movf	??_sin^(0+128),w
 16203  1CF6  00B3               	movwf	sin@sgn^(0+128)
 16204  1CF7                     l5976:	
 16205  1CF7  3000               	movlw	0
 16206  1CF8  0020               	movlb	0	; select bank0
 16207  1CF9  00A0               	movwf	___ftge@ff1
 16208  1CFA  3080               	movlw	128
 16209  1CFB  00A1               	movwf	___ftge@ff1+1
 16210  1CFC  303F               	movlw	63
 16211  1CFD  00A2               	movwf	___ftge@ff1+2
 16212  1CFE  0021               	movlb	1	; select bank1
 16213  1CFF  0826               	movf	sin@f^(0+128),w
 16214  1D00  0020               	movlb	0	; select bank0
 16215  1D01  00A3               	movwf	___ftge@ff2
 16216  1D02  0021               	movlb	1	; select bank1
 16217  1D03  0827               	movf	(sin@f+1)^(0+128),w
 16218  1D04  0020               	movlb	0	; select bank0
 16219  1D05  00A4               	movwf	___ftge@ff2+1
 16220  1D06  0021               	movlb	1	; select bank1
 16221  1D07  0828               	movf	(sin@f+2)^(0+128),w
 16222  1D08  0020               	movlb	0	; select bank0
 16223  1D09  00A5               	movwf	___ftge@ff2+2
 16224  1D0A  31AF  27C4  319C   	fcall	___ftge
 16225  1D0D  1803               	btfsc	3,0
 16226  1D0E  2D3B               	goto	l1403
 16227  1D0F  3000               	movlw	0
 16228  1D10  0020               	movlb	0	; select bank0
 16229  1D11  00D9               	movwf	___ftadd@f1
 16230  1D12  3000               	movlw	0
 16231  1D13  00DA               	movwf	___ftadd@f1+1
 16232  1D14  3040               	movlw	64
 16233  1D15  00DB               	movwf	___ftadd@f1+2
 16234  1D16  0021               	movlb	1	; select bank1
 16235  1D17  0826               	movf	sin@f^(0+128),w
 16236  1D18  0020               	movlb	0	; select bank0
 16237  1D19  00A0               	movwf	___ftneg@f1
 16238  1D1A  0021               	movlb	1	; select bank1
 16239  1D1B  0827               	movf	(sin@f+1)^(0+128),w
 16240  1D1C  0020               	movlb	0	; select bank0
 16241  1D1D  00A1               	movwf	___ftneg@f1+1
 16242  1D1E  0021               	movlb	1	; select bank1
 16243  1D1F  0828               	movf	(sin@f+2)^(0+128),w
 16244  1D20  0020               	movlb	0	; select bank0
 16245  1D21  00A2               	movwf	___ftneg@f1+2
 16246  1D22  3198  2003  319C   	fcall	___ftneg
 16247  1D25  0020               	movlb	0	; select bank0
 16248  1D26  0820               	movf	?___ftneg,w
 16249  1D27  00DC               	movwf	___ftadd@f2
 16250  1D28  0821               	movf	?___ftneg+1,w
 16251  1D29  00DD               	movwf	___ftadd@f2+1
 16252  1D2A  0822               	movf	?___ftneg+2,w
 16253  1D2B  00DE               	movwf	___ftadd@f2+2
 16254  1D2C  3198  20C2  319C   	fcall	___ftadd
 16255  1D2F  0020               	movlb	0	; select bank0
 16256  1D30  0859               	movf	?___ftadd,w
 16257  1D31  0021               	movlb	1	; select bank1
 16258  1D32  00A6               	movwf	sin@f^(0+128)
 16259  1D33  0020               	movlb	0	; select bank0
 16260  1D34  085A               	movf	?___ftadd+1,w
 16261  1D35  0021               	movlb	1	; select bank1
 16262  1D36  00A7               	movwf	(sin@f+1)^(0+128)
 16263  1D37  0020               	movlb	0	; select bank0
 16264  1D38  085B               	movf	?___ftadd+2,w
 16265  1D39  0021               	movlb	1	; select bank1
 16266  1D3A  00A8               	movwf	(sin@f+2)^(0+128)
 16267  1D3B                     l1403:	
 16268  1D3B  0021               	movlb	1	; select bank1
 16269  1D3C  0826               	movf	sin@f^(0+128),w
 16270  1D3D  0020               	movlb	0	; select bank0
 16271  1D3E  00B6               	movwf	___ftmul@f1
 16272  1D3F  0021               	movlb	1	; select bank1
 16273  1D40  0827               	movf	(sin@f+1)^(0+128),w
 16274  1D41  0020               	movlb	0	; select bank0
 16275  1D42  00B7               	movwf	___ftmul@f1+1
 16276  1D43  0021               	movlb	1	; select bank1
 16277  1D44  0828               	movf	(sin@f+2)^(0+128),w
 16278  1D45  0020               	movlb	0	; select bank0
 16279  1D46  00B8               	movwf	___ftmul@f1+2
 16280  1D47  0021               	movlb	1	; select bank1
 16281  1D48  0826               	movf	sin@f^(0+128),w
 16282  1D49  0020               	movlb	0	; select bank0
 16283  1D4A  00B9               	movwf	___ftmul@f2
 16284  1D4B  0021               	movlb	1	; select bank1
 16285  1D4C  0827               	movf	(sin@f+1)^(0+128),w
 16286  1D4D  0020               	movlb	0	; select bank0
 16287  1D4E  00BA               	movwf	___ftmul@f2+1
 16288  1D4F  0021               	movlb	1	; select bank1
 16289  1D50  0828               	movf	(sin@f+2)^(0+128),w
 16290  1D51  0020               	movlb	0	; select bank0
 16291  1D52  00BB               	movwf	___ftmul@f2+2
 16292  1D53  31A7  274C  319C   	fcall	___ftmul
 16293  1D56  0020               	movlb	0	; select bank0
 16294  1D57  0836               	movf	?___ftmul,w
 16295  1D58  0021               	movlb	1	; select bank1
 16296  1D59  00B0               	movwf	sin@x2^(0+128)
 16297  1D5A  0020               	movlb	0	; select bank0
 16298  1D5B  0837               	movf	?___ftmul+1,w
 16299  1D5C  0021               	movlb	1	; select bank1
 16300  1D5D  00B1               	movwf	(sin@x2+1)^(0+128)
 16301  1D5E  0020               	movlb	0	; select bank0
 16302  1D5F  0838               	movf	?___ftmul+2,w
 16303  1D60  0021               	movlb	1	; select bank1
 16304  1D61  00B2               	movwf	(sin@x2+2)^(0+128)
 16305  1D62  0830               	movf	sin@x2^(0+128),w
 16306  1D63  0020               	movlb	0	; select bank0
 16307  1D64  00E6               	movwf	eval_poly@x
 16308  1D65  0021               	movlb	1	; select bank1
 16309  1D66  0831               	movf	(sin@x2+1)^(0+128),w
 16310  1D67  0020               	movlb	0	; select bank0
 16311  1D68  00E7               	movwf	eval_poly@x+1
 16312  1D69  0021               	movlb	1	; select bank1
 16313  1D6A  0832               	movf	(sin@x2+2)^(0+128),w
 16314  1D6B  0020               	movlb	0	; select bank0
 16315  1D6C  00E8               	movwf	eval_poly@x+2
 16316  1D6D  30C6               	movlw	low (sin@coeff_b| (0+32768))
 16317  1D6E  00E9               	movwf	eval_poly@d
 16318  1D6F  30A0               	movlw	high (sin@coeff_b| (0+32768))
 16319  1D70  00EA               	movwf	eval_poly@d+1
 16320  1D71  3003               	movlw	3
 16321  1D72  00EB               	movwf	eval_poly@n
 16322  1D73  3000               	movlw	0
 16323  1D74  00EC               	movwf	eval_poly@n+1
 16324  1D75  31A2  22F9  319C   	fcall	_eval_poly
 16325  1D78  0020               	movlb	0	; select bank0
 16326  1D79  0866               	movf	?_eval_poly,w
 16327  1D7A  0021               	movlb	1	; select bank1
 16328  1D7B  00AA               	movwf	sin@y^(0+128)
 16329  1D7C  0020               	movlb	0	; select bank0
 16330  1D7D  0867               	movf	?_eval_poly+1,w
 16331  1D7E  0021               	movlb	1	; select bank1
 16332  1D7F  00AB               	movwf	(sin@y+1)^(0+128)
 16333  1D80  0020               	movlb	0	; select bank0
 16334  1D81  0868               	movf	?_eval_poly+2,w
 16335  1D82  0021               	movlb	1	; select bank1
 16336  1D83  00AC               	movwf	(sin@y+2)^(0+128)
 16337  1D84  3004               	movlw	4
 16338  1D85  0020               	movlb	0	; select bank0
 16339  1D86  00EB               	movwf	eval_poly@n
 16340  1D87  3000               	movlw	0
 16341  1D88  00EC               	movwf	eval_poly@n+1
 16342  1D89  30B7               	movlw	low (sin@coeff_a| (0+32768))
 16343  1D8A  00E9               	movwf	eval_poly@d
 16344  1D8B  30A0               	movlw	high (sin@coeff_a| (0+32768))
 16345  1D8C  00EA               	movwf	eval_poly@d+1
 16346  1D8D  0021               	movlb	1	; select bank1
 16347  1D8E  0830               	movf	sin@x2^(0+128),w
 16348  1D8F  0020               	movlb	0	; select bank0
 16349  1D90  00E6               	movwf	eval_poly@x
 16350  1D91  0021               	movlb	1	; select bank1
 16351  1D92  0831               	movf	(sin@x2+1)^(0+128),w
 16352  1D93  0020               	movlb	0	; select bank0
 16353  1D94  00E7               	movwf	eval_poly@x+1
 16354  1D95  0021               	movlb	1	; select bank1
 16355  1D96  0832               	movf	(sin@x2+2)^(0+128),w
 16356  1D97  0020               	movlb	0	; select bank0
 16357  1D98  00E8               	movwf	eval_poly@x+2
 16358  1D99  31A2  22F9  319C   	fcall	_eval_poly
 16359  1D9C  0020               	movlb	0	; select bank0
 16360  1D9D  0866               	movf	?_eval_poly,w
 16361  1D9E  00C9               	movwf	___ftdiv@f1
 16362  1D9F  0867               	movf	?_eval_poly+1,w
 16363  1DA0  00CA               	movwf	___ftdiv@f1+1
 16364  1DA1  0868               	movf	?_eval_poly+2,w
 16365  1DA2  00CB               	movwf	___ftdiv@f1+2
 16366  1DA3  0021               	movlb	1	; select bank1
 16367  1DA4  082A               	movf	sin@y^(0+128),w
 16368  1DA5  0020               	movlb	0	; select bank0
 16369  1DA6  00C6               	movwf	___ftdiv@f2
 16370  1DA7  0021               	movlb	1	; select bank1
 16371  1DA8  082B               	movf	(sin@y+1)^(0+128),w
 16372  1DA9  0020               	movlb	0	; select bank0
 16373  1DAA  00C7               	movwf	___ftdiv@f2+1
 16374  1DAB  0021               	movlb	1	; select bank1
 16375  1DAC  082C               	movf	(sin@y+2)^(0+128),w
 16376  1DAD  0020               	movlb	0	; select bank0
 16377  1DAE  00C8               	movwf	___ftdiv@f2+2
 16378  1DAF  31A6  26A3  319C   	fcall	___ftdiv
 16379  1DB2  0020               	movlb	0	; select bank0
 16380  1DB3  0846               	movf	?___ftdiv,w
 16381  1DB4  0021               	movlb	1	; select bank1
 16382  1DB5  00AD               	movwf	_sin$1925^(0+128)
 16383  1DB6  0020               	movlb	0	; select bank0
 16384  1DB7  0847               	movf	?___ftdiv+1,w
 16385  1DB8  0021               	movlb	1	; select bank1
 16386  1DB9  00AE               	movwf	(_sin$1925+1)^(0+128)
 16387  1DBA  0020               	movlb	0	; select bank0
 16388  1DBB  0848               	movf	?___ftdiv+2,w
 16389  1DBC  0021               	movlb	1	; select bank1
 16390  1DBD  00AF               	movwf	(_sin$1925+2)^(0+128)
 16391  1DBE  082D               	movf	_sin$1925^(0+128),w
 16392  1DBF  0020               	movlb	0	; select bank0
 16393  1DC0  00B6               	movwf	___ftmul@f1
 16394  1DC1  0021               	movlb	1	; select bank1
 16395  1DC2  082E               	movf	(_sin$1925+1)^(0+128),w
 16396  1DC3  0020               	movlb	0	; select bank0
 16397  1DC4  00B7               	movwf	___ftmul@f1+1
 16398  1DC5  0021               	movlb	1	; select bank1
 16399  1DC6  082F               	movf	(_sin$1925+2)^(0+128),w
 16400  1DC7  0020               	movlb	0	; select bank0
 16401  1DC8  00B8               	movwf	___ftmul@f1+2
 16402  1DC9  0021               	movlb	1	; select bank1
 16403  1DCA  0826               	movf	sin@f^(0+128),w
 16404  1DCB  0020               	movlb	0	; select bank0
 16405  1DCC  00B9               	movwf	___ftmul@f2
 16406  1DCD  0021               	movlb	1	; select bank1
 16407  1DCE  0827               	movf	(sin@f+1)^(0+128),w
 16408  1DCF  0020               	movlb	0	; select bank0
 16409  1DD0  00BA               	movwf	___ftmul@f2+1
 16410  1DD1  0021               	movlb	1	; select bank1
 16411  1DD2  0828               	movf	(sin@f+2)^(0+128),w
 16412  1DD3  0020               	movlb	0	; select bank0
 16413  1DD4  00BB               	movwf	___ftmul@f2+2
 16414  1DD5  31A7  274C  319C   	fcall	___ftmul
 16415  1DD8  0020               	movlb	0	; select bank0
 16416  1DD9  0836               	movf	?___ftmul,w
 16417  1DDA  0021               	movlb	1	; select bank1
 16418  1DDB  00A6               	movwf	sin@f^(0+128)
 16419  1DDC  0020               	movlb	0	; select bank0
 16420  1DDD  0837               	movf	?___ftmul+1,w
 16421  1DDE  0021               	movlb	1	; select bank1
 16422  1DDF  00A7               	movwf	(sin@f+1)^(0+128)
 16423  1DE0  0020               	movlb	0	; select bank0
 16424  1DE1  0838               	movf	?___ftmul+2,w
 16425  1DE2  0021               	movlb	1	; select bank1
 16426  1DE3  00A8               	movwf	(sin@f+2)^(0+128)
 16427  1DE4  0833               	movf	sin@sgn^(0+128),w
 16428  1DE5  1903               	btfsc	3,2
 16429  1DE6  0008               	return
 16430  1DE7  0826               	movf	sin@f^(0+128),w
 16431  1DE8  0020               	movlb	0	; select bank0
 16432  1DE9  00A0               	movwf	___ftneg@f1
 16433  1DEA  0021               	movlb	1	; select bank1
 16434  1DEB  0827               	movf	(sin@f+1)^(0+128),w
 16435  1DEC  0020               	movlb	0	; select bank0
 16436  1DED  00A1               	movwf	___ftneg@f1+1
 16437  1DEE  0021               	movlb	1	; select bank1
 16438  1DEF  0828               	movf	(sin@f+2)^(0+128),w
 16439  1DF0  0020               	movlb	0	; select bank0
 16440  1DF1  00A2               	movwf	___ftneg@f1+2
 16441  1DF2  3198  2003         	fcall	___ftneg
 16442  1DF4  0020               	movlb	0	; select bank0
 16443  1DF5  0820               	movf	?___ftneg,w
 16444  1DF6  0021               	movlb	1	; select bank1
 16445  1DF7  00A6               	movwf	?_sin^(0+128)
 16446  1DF8  0020               	movlb	0	; select bank0
 16447  1DF9  0821               	movf	?___ftneg+1,w
 16448  1DFA  0021               	movlb	1	; select bank1
 16449  1DFB  00A7               	movwf	(?_sin+1)^(0+128)
 16450  1DFC  0020               	movlb	0	; select bank0
 16451  1DFD  0822               	movf	?___ftneg+2,w
 16452  1DFE  0021               	movlb	1	; select bank1
 16453  1DFF  00A8               	movwf	(?_sin+2)^(0+128)
 16454  1E00  0008               	return
 16455  1E01                     __end_of_sin:	
 16456                           
 16457                           	psect	text27
 16458  2510                     __ptext27:	
 16459 ;; *************** function _floor *****************
 16460 ;; Defined at:
 16461 ;;		line 13 in file "/opt/microchip/xc8/v1.35/sources/common/floor.c"
 16462 ;; Parameters:    Size  Location     Type
 16463 ;;  x               3   70[BANK0 ] unsigned char 
 16464 ;; Auto vars:     Size  Location     Type
 16465 ;;  i               3   74[BANK0 ] unsigned char 
 16466 ;;  expon           2   77[BANK0 ] int 
 16467 ;; Return value:  Size  Location     Type
 16468 ;;                  3   70[BANK0 ] int 
 16469 ;; Registers used:
 16470 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16471 ;; Tracked objects:
 16472 ;;		On entry : 0/0
 16473 ;;		On exit  : 0/0
 16474 ;;		Unchanged: 0/0
 16475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16476 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16477 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16478 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16479 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16480 ;;Total ram usage:        9 bytes
 16481 ;; Hardware stack levels used:    1
 16482 ;; Hardware stack levels required when called:    7
 16483 ;; This function calls:
 16484 ;;		___altoft
 16485 ;;		___ftadd
 16486 ;;		___ftge
 16487 ;;		___fttol
 16488 ;;		_frexp
 16489 ;; This function is called by:
 16490 ;;		_sin
 16491 ;; This function uses a non-reentrant model
 16492 ;;
 16493                           
 16494                           
 16495                           ;psect for function _floor
 16496  2510                     _floor:	
 16497                           
 16498                           ;incstack = 0
 16499                           ; Regs used in _floor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 16500  2510  0020               	movlb	0	; select bank0
 16501  2511  0866               	movf	floor@x,w
 16502  2512  00A0               	movwf	frexp@value
 16503  2513  0867               	movf	floor@x+1,w
 16504  2514  00A1               	movwf	frexp@value+1
 16505  2515  0868               	movf	floor@x+2,w
 16506  2516  00A2               	movwf	frexp@value+2
 16507  2517  306D               	movlw	(low (floor@expon| 0))& (0+255)
 16508  2518  00E9               	movwf	??_floor
 16509  2519  0869               	movf	??_floor,w
 16510  251A  00A3               	movwf	frexp@eptr
 16511  251B  31AF  271A  31A5   	fcall	_frexp
 16512  251E  0020               	movlb	0	; select bank0
 16513  251F  1FEE               	btfss	floor@expon+1,7
 16514  2520  2D42               	goto	l5912
 16515  2521  0866               	movf	floor@x,w
 16516  2522  00A0               	movwf	___ftge@ff1
 16517  2523  0867               	movf	floor@x+1,w
 16518  2524  00A1               	movwf	___ftge@ff1+1
 16519  2525  0868               	movf	floor@x+2,w
 16520  2526  00A2               	movwf	___ftge@ff1+2
 16521  2527  3000               	movlw	0
 16522  2528  00A3               	movwf	___ftge@ff2
 16523  2529  3000               	movlw	0
 16524  252A  00A4               	movwf	___ftge@ff2+1
 16525  252B  3000               	movlw	0
 16526  252C  00A5               	movwf	___ftge@ff2+2
 16527  252D  31AF  27C4  31A5   	fcall	___ftge
 16528  2530  1803               	btfsc	3,0
 16529  2531  2D3A               	goto	l5908
 16530  2532  3000               	movlw	0
 16531  2533  0020               	movlb	0	; select bank0
 16532  2534  00E6               	movwf	?_floor
 16533  2535  3080               	movlw	128
 16534  2536  00E7               	movwf	?_floor+1
 16535  2537  30BF               	movlw	191
 16536  2538  00E8               	movwf	?_floor+2
 16537  2539  0008               	return
 16538  253A                     l5908:	
 16539  253A  3000               	movlw	0
 16540  253B  0020               	movlb	0	; select bank0
 16541  253C  00E6               	movwf	?_floor
 16542  253D  3000               	movlw	0
 16543  253E  00E7               	movwf	?_floor+1
 16544  253F  3000               	movlw	0
 16545  2540  00E8               	movwf	?_floor+2
 16546  2541  0008               	return
 16547  2542                     l5912:	
 16548  2542  3000               	movlw	0
 16549  2543  026E               	subwf	floor@expon+1,w
 16550  2544  3015               	movlw	21
 16551  2545  1903               	skipnz
 16552  2546  026D               	subwf	floor@expon,w
 16553  2547  1803               	btfsc	3,0
 16554  2548  0008               	return
 16555  2549  0866               	movf	floor@x,w
 16556  254A  00CF               	movwf	___fttol@f1
 16557  254B  0867               	movf	floor@x+1,w
 16558  254C  00D0               	movwf	___fttol@f1+1
 16559  254D  0868               	movf	floor@x+2,w
 16560  254E  00D1               	movwf	___fttol@f1+2
 16561  254F  31A5  2595  31A5   	fcall	___fttol
 16562  2552  0020               	movlb	0	; select bank0
 16563  2553  0852               	movf	?___fttol+3,w
 16564  2554  00E0               	movwf	___altoft@c+3
 16565  2555  0851               	movf	?___fttol+2,w
 16566  2556  00DF               	movwf	___altoft@c+2
 16567  2557  0850               	movf	?___fttol+1,w
 16568  2558  00DE               	movwf	___altoft@c+1
 16569  2559  084F               	movf	?___fttol,w
 16570  255A  00DD               	movwf	___altoft@c
 16571  255B  31A1  2163  31A5   	fcall	___altoft
 16572  255E  0020               	movlb	0	; select bank0
 16573  255F  085D               	movf	?___altoft,w
 16574  2560  00EA               	movwf	floor@i
 16575  2561  085E               	movf	?___altoft+1,w
 16576  2562  00EB               	movwf	floor@i+1
 16577  2563  085F               	movf	?___altoft+2,w
 16578  2564  00EC               	movwf	floor@i+2
 16579  2565  0866               	movf	floor@x,w
 16580  2566  00A0               	movwf	___ftge@ff1
 16581  2567  0867               	movf	floor@x+1,w
 16582  2568  00A1               	movwf	___ftge@ff1+1
 16583  2569  0868               	movf	floor@x+2,w
 16584  256A  00A2               	movwf	___ftge@ff1+2
 16585  256B  086A               	movf	floor@i,w
 16586  256C  00A3               	movwf	___ftge@ff2
 16587  256D  086B               	movf	floor@i+1,w
 16588  256E  00A4               	movwf	___ftge@ff2+1
 16589  256F  086C               	movf	floor@i+2,w
 16590  2570  00A5               	movwf	___ftge@ff2+2
 16591  2571  31AF  27C4  31A5   	fcall	___ftge
 16592  2574  1803               	btfsc	3,0
 16593  2575  2D8D               	goto	l5922
 16594  2576  3000               	movlw	0
 16595  2577  0020               	movlb	0	; select bank0
 16596  2578  00D9               	movwf	___ftadd@f1
 16597  2579  3080               	movlw	128
 16598  257A  00DA               	movwf	___ftadd@f1+1
 16599  257B  30BF               	movlw	191
 16600  257C  00DB               	movwf	___ftadd@f1+2
 16601  257D  086A               	movf	floor@i,w
 16602  257E  00DC               	movwf	___ftadd@f2
 16603  257F  086B               	movf	floor@i+1,w
 16604  2580  00DD               	movwf	___ftadd@f2+1
 16605  2581  086C               	movf	floor@i+2,w
 16606  2582  00DE               	movwf	___ftadd@f2+2
 16607  2583  3198  20C2         	fcall	___ftadd
 16608  2585  0020               	movlb	0	; select bank0
 16609  2586  0859               	movf	?___ftadd,w
 16610  2587  00E6               	movwf	?_floor
 16611  2588  085A               	movf	?___ftadd+1,w
 16612  2589  00E7               	movwf	?_floor+1
 16613  258A  085B               	movf	?___ftadd+2,w
 16614  258B  00E8               	movwf	?_floor+2
 16615  258C  0008               	return
 16616  258D                     l5922:	
 16617  258D  0020               	movlb	0	; select bank0
 16618  258E  086A               	movf	floor@i,w
 16619  258F  00E6               	movwf	?_floor
 16620  2590  086B               	movf	floor@i+1,w
 16621  2591  00E7               	movwf	?_floor+1
 16622  2592  086C               	movf	floor@i+2,w
 16623  2593  00E8               	movwf	?_floor+2
 16624  2594  0008               	return
 16625  2595                     __end_of_floor:	
 16626                           
 16627                           	psect	text28
 16628  2F1A                     __ptext28:	
 16629 ;; *************** function _frexp *****************
 16630 ;; Defined at:
 16631 ;;		line 254 in file "/opt/microchip/xc8/v1.35/sources/common/frexp.c"
 16632 ;; Parameters:    Size  Location     Type
 16633 ;;  value           3    0[BANK0 ] int 
 16634 ;;  eptr            1    3[BANK0 ] PTR int 
 16635 ;;		 -> floor@expon(2), trunc@expon(2), 
 16636 ;; Auto vars:     Size  Location     Type
 16637 ;;		None
 16638 ;; Return value:  Size  Location     Type
 16639 ;;                  3    0[BANK0 ] PTR int 
 16640 ;; Registers used:
 16641 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 16642 ;; Tracked objects:
 16643 ;;		On entry : 0/0
 16644 ;;		On exit  : 0/0
 16645 ;;		Unchanged: 0/0
 16646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16647 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16649 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16650 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16651 ;;Total ram usage:        6 bytes
 16652 ;; Hardware stack levels used:    1
 16653 ;; Hardware stack levels required when called:    5
 16654 ;; This function calls:
 16655 ;;		Nothing
 16656 ;; This function is called by:
 16657 ;;		_trunc
 16658 ;;		_floor
 16659 ;; This function uses a non-reentrant model
 16660 ;;
 16661                           
 16662                           
 16663                           ;psect for function _frexp
 16664  2F1A                     _frexp:	
 16665                           
 16666                           ;incstack = 0
 16667                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
 16668  2F1A  0020               	movlb	0	; select bank0
 16669  2F1B  0822               	movf	frexp@value+2,w
 16670  2F1C  0421               	iorwf	frexp@value+1,w
 16671  2F1D  0420               	iorwf	frexp@value,w
 16672  2F1E  1D03               	skipz
 16673  2F1F  2F27               	goto	l5804
 16674  2F20  0823               	movf	frexp@eptr,w
 16675  2F21  0086               	movwf	6
 16676  2F22  0187               	clrf	7
 16677  2F23  3000               	movlw	0
 16678  2F24  3FC0               	movwi [0]fsr1
 16679  2F25  3FC1               	movwi [1]fsr1
 16680                           
 16681                           ;	Return value of _frexp is never used
 16682  2F26  0008               	return
 16683  2F27                     l5804:	
 16684  2F27  0822               	movf	frexp@value+2,w
 16685  2F28  397F               	andlw	127
 16686  2F29  00A4               	movwf	??_frexp
 16687  2F2A  01A5               	clrf	??_frexp+1
 16688  2F2B  35A4               	lslf	??_frexp,f
 16689  2F2C  0DA5               	rlf	??_frexp+1,f
 16690  2F2D  0823               	movf	frexp@eptr,w
 16691  2F2E  0086               	movwf	6
 16692  2F2F  0187               	clrf	7
 16693  2F30  0824               	movf	??_frexp,w
 16694  2F31  3FC0               	movwi [0]fsr1
 16695  2F32  0825               	movf	??_frexp+1,w
 16696  2F33  3FC1               	movwi [1]fsr1
 16697  2F34  0D21               	rlf	frexp@value+1,w
 16698  2F35  0D21               	rlf	frexp@value+1,w
 16699  2F36  3901               	andlw	1
 16700  2F37  00A4               	movwf	??_frexp
 16701  2F38  01A5               	clrf	??_frexp+1
 16702  2F39  0823               	movf	frexp@eptr,w
 16703  2F3A  0086               	movwf	6
 16704  2F3B  0187               	clrf	7
 16705  2F3C  0824               	movf	??_frexp,w
 16706  2F3D  0481               	iorwf	1,f
 16707  2F3E  3141               	addfsr 1,1
 16708  2F3F  0825               	movf	??_frexp+1,w
 16709  2F40  0481               	iorwf	1,f
 16710  2F41  0823               	movf	frexp@eptr,w
 16711  2F42  0086               	movwf	6
 16712  2F43  0187               	clrf	7
 16713  2F44  3082               	movlw	130
 16714  2F45  0781               	addwf	1,f
 16715  2F46  3141               	addfsr 1,1
 16716  2F47  30FF               	movlw	255
 16717  2F48  3D81               	addwfc	1,f
 16718  2F49  317F               	addfsr 1,-1
 16719  2F4A  0822               	movf	frexp@value+2,w
 16720  2F4B  3980               	andlw	-128
 16721  2F4C  383F               	iorlw	63
 16722  2F4D  00A2               	movwf	frexp@value+2
 16723  2F4E  13A1               	bcf	frexp@value+1,7
 16724  2F4F  0008               	return
 16725  2F50                     __end_of_frexp:	
 16726                           ;	Return value of _frexp is never used
 16727                           
 16728                           
 16729                           	psect	text29
 16730  2595                     __ptext29:	
 16731 ;; *************** function ___fttol *****************
 16732 ;; Defined at:
 16733 ;;		line 44 in file "/opt/microchip/xc8/v1.35/sources/common/fttol.c"
 16734 ;; Parameters:    Size  Location     Type
 16735 ;;  f1              3   47[BANK0 ] float 
 16736 ;; Auto vars:     Size  Location     Type
 16737 ;;  lval            4   56[BANK0 ] unsigned long 
 16738 ;;  exp1            1   60[BANK0 ] unsigned char 
 16739 ;;  sign1           1   55[BANK0 ] unsigned char 
 16740 ;; Return value:  Size  Location     Type
 16741 ;;                  4   47[BANK0 ] long 
 16742 ;; Registers used:
 16743 ;;		wreg, status,2, status,0
 16744 ;; Tracked objects:
 16745 ;;		On entry : 0/0
 16746 ;;		On exit  : 0/0
 16747 ;;		Unchanged: 0/0
 16748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16749 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16750 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16751 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16752 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16753 ;;Total ram usage:       14 bytes
 16754 ;; Hardware stack levels used:    1
 16755 ;; Hardware stack levels required when called:    5
 16756 ;; This function calls:
 16757 ;;		Nothing
 16758 ;; This function is called by:
 16759 ;;		_sprintf
 16760 ;;		_trunc
 16761 ;;		_floor
 16762 ;; This function uses a non-reentrant model
 16763 ;;
 16764                           
 16765                           
 16766                           ;psect for function ___fttol
 16767  2595                     ___fttol:	
 16768                           
 16769                           ;incstack = 0
 16770                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 16771  2595  0020               	movlb	0	; select bank0
 16772  2596  084F               	movf	___fttol@f1,w
 16773  2597  00D3               	movwf	??___fttol
 16774  2598  0850               	movf	___fttol@f1+1,w
 16775  2599  00D4               	movwf	??___fttol+1
 16776  259A  0851               	movf	___fttol@f1+2,w
 16777  259B  00D5               	movwf	??___fttol+2
 16778  259C  1003               	clrc
 16779  259D  0D54               	rlf	??___fttol+1,w
 16780  259E  0D55               	rlf	??___fttol+2,w
 16781  259F  00D6               	movwf	??___fttol+3
 16782  25A0  0856               	movf	??___fttol+3,w
 16783  25A1  00DC               	movwf	___fttol@exp1
 16784  25A2  085C               	movf	___fttol@exp1,w
 16785  25A3  1D03               	btfss	3,2
 16786  25A4  2DAE               	goto	l5762
 16787  25A5  3000               	movlw	0
 16788  25A6  00D2               	movwf	?___fttol+3
 16789  25A7  3000               	movlw	0
 16790  25A8  00D1               	movwf	?___fttol+2
 16791  25A9  3000               	movlw	0
 16792  25AA  00D0               	movwf	?___fttol+1
 16793  25AB  3000               	movlw	0
 16794  25AC  00CF               	movwf	?___fttol
 16795  25AD  0008               	return
 16796  25AE                     l5762:	
 16797  25AE  084F               	movf	___fttol@f1,w
 16798  25AF  00D3               	movwf	??___fttol
 16799  25B0  0850               	movf	___fttol@f1+1,w
 16800  25B1  00D4               	movwf	??___fttol+1
 16801  25B2  0851               	movf	___fttol@f1+2,w
 16802  25B3  00D5               	movwf	??___fttol+2
 16803  25B4  3017               	movlw	23
 16804  25B5                     u7115:	
 16805  25B5  36D5               	lsrf	??___fttol+2,f
 16806  25B6  0CD4               	rrf	??___fttol+1,f
 16807  25B7  0CD3               	rrf	??___fttol,f
 16808  25B8  0B89               	decfsz	9,f
 16809  25B9  2DB5               	goto	u7115
 16810  25BA  0853               	movf	??___fttol,w
 16811  25BB  00D6               	movwf	??___fttol+3
 16812  25BC  0856               	movf	??___fttol+3,w
 16813  25BD  00D7               	movwf	___fttol@sign1
 16814  25BE  17D0               	bsf	___fttol@f1+1,7
 16815  25BF  30FF               	movlw	255
 16816  25C0  05CF               	andwf	___fttol@f1,f
 16817  25C1  30FF               	movlw	255
 16818  25C2  05D0               	andwf	___fttol@f1+1,f
 16819  25C3  3000               	movlw	0
 16820  25C4  05D1               	andwf	___fttol@f1+2,f
 16821  25C5  084F               	movf	___fttol@f1,w
 16822  25C6  00D8               	movwf	___fttol@lval
 16823  25C7  0850               	movf	___fttol@f1+1,w
 16824  25C8  00D9               	movwf	___fttol@lval+1
 16825  25C9  0851               	movf	___fttol@f1+2,w
 16826  25CA  00DA               	movwf	___fttol@lval+2
 16827  25CB  01DB               	clrf	___fttol@lval+3
 16828  25CC  308E               	movlw	142
 16829  25CD  02DC               	subwf	___fttol@exp1,f
 16830  25CE  1FDC               	btfss	___fttol@exp1,7
 16831  25CF  2DEC               	goto	l5782
 16832  25D0  085C               	movf	___fttol@exp1,w
 16833  25D1  3A80               	xorlw	128
 16834  25D2  3E8F               	addlw	143
 16835  25D3  1803               	skipnc
 16836  25D4  2DDE               	goto	l5780
 16837  25D5  3000               	movlw	0
 16838  25D6  00D2               	movwf	?___fttol+3
 16839  25D7  3000               	movlw	0
 16840  25D8  00D1               	movwf	?___fttol+2
 16841  25D9  3000               	movlw	0
 16842  25DA  00D0               	movwf	?___fttol+1
 16843  25DB  3000               	movlw	0
 16844  25DC  00CF               	movwf	?___fttol
 16845  25DD  0008               	return
 16846  25DE                     l5780:	
 16847  25DE  3001               	movlw	1
 16848  25DF                     u7145:	
 16849  25DF  36DB               	lsrf	___fttol@lval+3,f
 16850  25E0  0CDA               	rrf	___fttol@lval+2,f
 16851  25E1  0CD9               	rrf	___fttol@lval+1,f
 16852  25E2  0CD8               	rrf	___fttol@lval,f
 16853  25E3  0B89               	decfsz	9,f
 16854  25E4  2DDF               	goto	u7145
 16855  25E5  3001               	movlw	1
 16856  25E6  00D3               	movwf	??___fttol
 16857  25E7  0853               	movf	??___fttol,w
 16858  25E8  07DC               	addwf	___fttol@exp1,f
 16859  25E9  1903               	btfsc	3,2
 16860  25EA  2E05               	goto	l5790
 16861  25EB  2DDE               	goto	l5780
 16862  25EC                     l5782:	
 16863  25EC  3018               	movlw	24
 16864  25ED  025C               	subwf	___fttol@exp1,w
 16865  25EE  1C03               	skipc
 16866  25EF  2E02               	goto	l1274
 16867  25F0  3000               	movlw	0
 16868  25F1  00D2               	movwf	?___fttol+3
 16869  25F2  3000               	movlw	0
 16870  25F3  00D1               	movwf	?___fttol+2
 16871  25F4  3000               	movlw	0
 16872  25F5  00D0               	movwf	?___fttol+1
 16873  25F6  3000               	movlw	0
 16874  25F7  00CF               	movwf	?___fttol
 16875  25F8  0008               	return
 16876  25F9                     l5788:	
 16877  25F9  3001               	movlw	1
 16878  25FA                     u7175:	
 16879  25FA  35D8               	lslf	___fttol@lval,f
 16880  25FB  0DD9               	rlf	___fttol@lval+1,f
 16881  25FC  0DDA               	rlf	___fttol@lval+2,f
 16882  25FD  0DDB               	rlf	___fttol@lval+3,f
 16883  25FE  0B89               	decfsz	9,f
 16884  25FF  2DFA               	goto	u7175
 16885  2600  3001               	movlw	1
 16886  2601  02DC               	subwf	___fttol@exp1,f
 16887  2602                     l1274:	
 16888  2602  085C               	movf	___fttol@exp1,w
 16889  2603  1D03               	btfss	3,2
 16890  2604  2DF9               	goto	l5788
 16891  2605                     l5790:	
 16892  2605  0857               	movf	___fttol@sign1,w
 16893  2606  1903               	btfsc	3,2
 16894  2607  2E13               	goto	l5794
 16895  2608  09D8               	comf	___fttol@lval,f
 16896  2609  09D9               	comf	___fttol@lval+1,f
 16897  260A  09DA               	comf	___fttol@lval+2,f
 16898  260B  09DB               	comf	___fttol@lval+3,f
 16899  260C  0AD8               	incf	___fttol@lval,f
 16900  260D  1903               	skipnz
 16901  260E  0AD9               	incf	___fttol@lval+1,f
 16902  260F  1903               	skipnz
 16903  2610  0ADA               	incf	___fttol@lval+2,f
 16904  2611  1903               	skipnz
 16905  2612  0ADB               	incf	___fttol@lval+3,f
 16906  2613                     l5794:	
 16907  2613  085B               	movf	___fttol@lval+3,w
 16908  2614  00D2               	movwf	?___fttol+3
 16909  2615  085A               	movf	___fttol@lval+2,w
 16910  2616  00D1               	movwf	?___fttol+2
 16911  2617  0859               	movf	___fttol@lval+1,w
 16912  2618  00D0               	movwf	?___fttol+1
 16913  2619  0858               	movf	___fttol@lval,w
 16914  261A  00CF               	movwf	?___fttol
 16915  261B  0008               	return
 16916  261C                     __end_of___fttol:	
 16917                           
 16918                           	psect	text30
 16919  21A0                     __ptext30:	
 16920 ;; *************** function _acos *****************
 16921 ;; Defined at:
 16922 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/acos.c"
 16923 ;; Parameters:    Size  Location     Type
 16924 ;;  x               3   49[BANK1 ] long 
 16925 ;; Auto vars:     Size  Location     Type
 16926 ;;		None
 16927 ;; Return value:  Size  Location     Type
 16928 ;;                  3   49[BANK1 ] long 
 16929 ;; Registers used:
 16930 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16931 ;; Tracked objects:
 16932 ;;		On entry : 0/0
 16933 ;;		On exit  : 0/0
 16934 ;;		Unchanged: 0/0
 16935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 16936 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16937 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16939 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 16940 ;;Total ram usage:        6 bytes
 16941 ;; Hardware stack levels used:    1
 16942 ;; Hardware stack levels required when called:   10
 16943 ;; This function calls:
 16944 ;;		___ftadd
 16945 ;;		___ftneg
 16946 ;;		_asin
 16947 ;; This function is called by:
 16948 ;;		_distance
 16949 ;; This function uses a non-reentrant model
 16950 ;;
 16951                           
 16952                           
 16953                           ;psect for function _acos
 16954  21A0                     _acos:	
 16955                           
 16956                           ;incstack = 0
 16957                           ; Regs used in _acos: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16958  21A0  0021               	movlb	1	; select bank1
 16959  21A1  0851               	movf	acos@x^(0+128),w
 16960  21A2  00B9               	movwf	asin@x^(0+128)
 16961  21A3  0852               	movf	(acos@x+1)^(0+128),w
 16962  21A4  00BA               	movwf	(asin@x+1)^(0+128)
 16963  21A5  0853               	movf	(acos@x+2)^(0+128),w
 16964  21A6  00BB               	movwf	(asin@x+2)^(0+128)
 16965  21A7  319E  2601  31A1   	fcall	_asin
 16966  21AA  0021               	movlb	1	; select bank1
 16967  21AB  0839               	movf	?_asin^(0+128),w
 16968  21AC  00D4               	movwf	_acos$1914^(0+128)
 16969  21AD  083A               	movf	(?_asin+1)^(0+128),w
 16970  21AE  00D5               	movwf	(_acos$1914+1)^(0+128)
 16971  21AF  083B               	movf	(?_asin+2)^(0+128),w
 16972  21B0  00D6               	movwf	(_acos$1914+2)^(0+128)
 16973  21B1  3010               	movlw	16
 16974  21B2  0020               	movlb	0	; select bank0
 16975  21B3  00D9               	movwf	___ftadd@f1
 16976  21B4  30C9               	movlw	201
 16977  21B5  00DA               	movwf	___ftadd@f1+1
 16978  21B6  303F               	movlw	63
 16979  21B7  00DB               	movwf	___ftadd@f1+2
 16980  21B8  0021               	movlb	1	; select bank1
 16981  21B9  0854               	movf	_acos$1914^(0+128),w
 16982  21BA  0020               	movlb	0	; select bank0
 16983  21BB  00A0               	movwf	___ftneg@f1
 16984  21BC  0021               	movlb	1	; select bank1
 16985  21BD  0855               	movf	(_acos$1914+1)^(0+128),w
 16986  21BE  0020               	movlb	0	; select bank0
 16987  21BF  00A1               	movwf	___ftneg@f1+1
 16988  21C0  0021               	movlb	1	; select bank1
 16989  21C1  0856               	movf	(_acos$1914+2)^(0+128),w
 16990  21C2  0020               	movlb	0	; select bank0
 16991  21C3  00A2               	movwf	___ftneg@f1+2
 16992  21C4  3198  2003  31A1   	fcall	___ftneg
 16993  21C7  0020               	movlb	0	; select bank0
 16994  21C8  0820               	movf	?___ftneg,w
 16995  21C9  00DC               	movwf	___ftadd@f2
 16996  21CA  0821               	movf	?___ftneg+1,w
 16997  21CB  00DD               	movwf	___ftadd@f2+1
 16998  21CC  0822               	movf	?___ftneg+2,w
 16999  21CD  00DE               	movwf	___ftadd@f2+2
 17000  21CE  3198  20C2         	fcall	___ftadd
 17001  21D0  0020               	movlb	0	; select bank0
 17002  21D1  0859               	movf	?___ftadd,w
 17003  21D2  0021               	movlb	1	; select bank1
 17004  21D3  00D1               	movwf	?_acos^(0+128)
 17005  21D4  0020               	movlb	0	; select bank0
 17006  21D5  085A               	movf	?___ftadd+1,w
 17007  21D6  0021               	movlb	1	; select bank1
 17008  21D7  00D2               	movwf	(?_acos+1)^(0+128)
 17009  21D8  0020               	movlb	0	; select bank0
 17010  21D9  085B               	movf	?___ftadd+2,w
 17011  21DA  0021               	movlb	1	; select bank1
 17012  21DB  00D3               	movwf	(?_acos+2)^(0+128)
 17013  21DC  0008               	return
 17014  21DD                     __end_of_acos:	
 17015                           
 17016                           	psect	text31
 17017  1E01                     __ptext31:	
 17018 ;; *************** function _asin *****************
 17019 ;; Defined at:
 17020 ;;		line 9 in file "/opt/microchip/xc8/v1.35/sources/common/asin.c"
 17021 ;; Parameters:    Size  Location     Type
 17022 ;;  x               3   25[BANK1 ] long 
 17023 ;; Auto vars:     Size  Location     Type
 17024 ;;  y               3   43[BANK1 ] long 
 17025 ;;  sgn             3   28[BANK1 ] long 
 17026 ;; Return value:  Size  Location     Type
 17027 ;;                  3   25[BANK1 ] long 
 17028 ;; Registers used:
 17029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 17030 ;; Tracked objects:
 17031 ;;		On entry : 0/0
 17032 ;;		On exit  : 0/0
 17033 ;;		Unchanged: 0/0
 17034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17035 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17036 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17038 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17039 ;;Total ram usage:       24 bytes
 17040 ;; Hardware stack levels used:    1
 17041 ;; Hardware stack levels required when called:    9
 17042 ;; This function calls:
 17043 ;;		___ftadd
 17044 ;;		___ftdiv
 17045 ;;		___ftge
 17046 ;;		___ftmul
 17047 ;;		___ftneg
 17048 ;;		_atan
 17049 ;;		_fabs
 17050 ;;		_sqrt
 17051 ;; This function is called by:
 17052 ;;		_acos
 17053 ;; This function uses a non-reentrant model
 17054 ;;
 17055                           
 17056                           
 17057                           ;psect for function _asin
 17058  1E01                     _asin:	
 17059                           
 17060                           ;incstack = 0
 17061                           ; Regs used in _asin: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 17062  1E01  0021               	movlb	1	; select bank1
 17063  1E02  0839               	movf	asin@x^(0+128),w
 17064  1E03  0020               	movlb	0	; select bank0
 17065  1E04  00A9               	movwf	fabs@d
 17066  1E05  0021               	movlb	1	; select bank1
 17067  1E06  083A               	movf	(asin@x+1)^(0+128),w
 17068  1E07  0020               	movlb	0	; select bank0
 17069  1E08  00AA               	movwf	fabs@d+1
 17070  1E09  0021               	movlb	1	; select bank1
 17071  1E0A  083B               	movf	(asin@x+2)^(0+128),w
 17072  1E0B  0020               	movlb	0	; select bank0
 17073  1E0C  00AB               	movwf	fabs@d+2
 17074  1E0D  31AD  2572  319E   	fcall	_fabs
 17075  1E10  0020               	movlb	0	; select bank0
 17076  1E11  0829               	movf	?_fabs,w
 17077  1E12  0021               	movlb	1	; select bank1
 17078  1E13  00C5               	movwf	_asin$1915^(0+128)
 17079  1E14  0020               	movlb	0	; select bank0
 17080  1E15  082A               	movf	?_fabs+1,w
 17081  1E16  0021               	movlb	1	; select bank1
 17082  1E17  00C6               	movwf	(_asin$1915+1)^(0+128)
 17083  1E18  0020               	movlb	0	; select bank0
 17084  1E19  082B               	movf	?_fabs+2,w
 17085  1E1A  0021               	movlb	1	; select bank1
 17086  1E1B  00C7               	movwf	(_asin$1915+2)^(0+128)
 17087  1E1C  3000               	movlw	0
 17088  1E1D  0020               	movlb	0	; select bank0
 17089  1E1E  00A0               	movwf	___ftge@ff1
 17090  1E1F  3080               	movlw	128
 17091  1E20  00A1               	movwf	___ftge@ff1+1
 17092  1E21  303F               	movlw	63
 17093  1E22  00A2               	movwf	___ftge@ff1+2
 17094  1E23  0021               	movlb	1	; select bank1
 17095  1E24  0845               	movf	_asin$1915^(0+128),w
 17096  1E25  0020               	movlb	0	; select bank0
 17097  1E26  00A3               	movwf	___ftge@ff2
 17098  1E27  0021               	movlb	1	; select bank1
 17099  1E28  0846               	movf	(_asin$1915+1)^(0+128),w
 17100  1E29  0020               	movlb	0	; select bank0
 17101  1E2A  00A4               	movwf	___ftge@ff2+1
 17102  1E2B  0021               	movlb	1	; select bank1
 17103  1E2C  0847               	movf	(_asin$1915+2)^(0+128),w
 17104  1E2D  0020               	movlb	0	; select bank0
 17105  1E2E  00A5               	movwf	___ftge@ff2+2
 17106  1E2F  31AF  27C4  319E   	fcall	___ftge
 17107  1E32  1803               	btfsc	3,0
 17108  1E33  2E41               	goto	l6024
 17109  1E34  3021               	movlw	33
 17110  1E35  0022               	movlb	2	; select bank2
 17111  1E36  00E8               	movwf	_errno^(0+256)
 17112  1E37  3000               	movlw	0
 17113  1E38  00E9               	movwf	(_errno^(0+256)+1)
 17114  1E39  3000               	movlw	0
 17115  1E3A  0021               	movlb	1	; select bank1
 17116  1E3B  00B9               	movwf	?_asin^(0+128)
 17117  1E3C  3000               	movlw	0
 17118  1E3D  00BA               	movwf	(?_asin+1)^(0+128)
 17119  1E3E  3000               	movlw	0
 17120  1E3F  00BB               	movwf	(?_asin+2)^(0+128)
 17121  1E40  0008               	return
 17122  1E41                     l6024:	
 17123  1E41  3000               	movlw	0
 17124  1E42  0021               	movlb	1	; select bank1
 17125  1E43  00BC               	movwf	asin@sgn^(0+128)
 17126  1E44  3080               	movlw	128
 17127  1E45  00BD               	movwf	(asin@sgn+1)^(0+128)
 17128  1E46  303F               	movlw	63
 17129  1E47  00BE               	movwf	(asin@sgn+2)^(0+128)
 17130  1E48  3000               	movlw	0
 17131  1E49  0020               	movlb	0	; select bank0
 17132  1E4A  00D9               	movwf	___ftadd@f1
 17133  1E4B  3080               	movlw	128
 17134  1E4C  00DA               	movwf	___ftadd@f1+1
 17135  1E4D  303F               	movlw	63
 17136  1E4E  00DB               	movwf	___ftadd@f1+2
 17137  1E4F  0021               	movlb	1	; select bank1
 17138  1E50  0839               	movf	asin@x^(0+128),w
 17139  1E51  0020               	movlb	0	; select bank0
 17140  1E52  00B9               	movwf	___ftmul@f2
 17141  1E53  0021               	movlb	1	; select bank1
 17142  1E54  083A               	movf	(asin@x+1)^(0+128),w
 17143  1E55  0020               	movlb	0	; select bank0
 17144  1E56  00BA               	movwf	___ftmul@f2+1
 17145  1E57  0021               	movlb	1	; select bank1
 17146  1E58  083B               	movf	(asin@x+2)^(0+128),w
 17147  1E59  0020               	movlb	0	; select bank0
 17148  1E5A  00BB               	movwf	___ftmul@f2+2
 17149  1E5B  0021               	movlb	1	; select bank1
 17150  1E5C  0839               	movf	asin@x^(0+128),w
 17151  1E5D  0020               	movlb	0	; select bank0
 17152  1E5E  00B6               	movwf	___ftmul@f1
 17153  1E5F  0021               	movlb	1	; select bank1
 17154  1E60  083A               	movf	(asin@x+1)^(0+128),w
 17155  1E61  0020               	movlb	0	; select bank0
 17156  1E62  00B7               	movwf	___ftmul@f1+1
 17157  1E63  0021               	movlb	1	; select bank1
 17158  1E64  083B               	movf	(asin@x+2)^(0+128),w
 17159  1E65  0020               	movlb	0	; select bank0
 17160  1E66  00B8               	movwf	___ftmul@f1+2
 17161  1E67  31A7  274C  319E   	fcall	___ftmul
 17162  1E6A  0020               	movlb	0	; select bank0
 17163  1E6B  0836               	movf	?___ftmul,w
 17164  1E6C  00A0               	movwf	___ftneg@f1
 17165  1E6D  0837               	movf	?___ftmul+1,w
 17166  1E6E  00A1               	movwf	___ftneg@f1+1
 17167  1E6F  0838               	movf	?___ftmul+2,w
 17168  1E70  00A2               	movwf	___ftneg@f1+2
 17169  1E71  3198  2003  319E   	fcall	___ftneg
 17170  1E74  0020               	movlb	0	; select bank0
 17171  1E75  0820               	movf	?___ftneg,w
 17172  1E76  00DC               	movwf	___ftadd@f2
 17173  1E77  0821               	movf	?___ftneg+1,w
 17174  1E78  00DD               	movwf	___ftadd@f2+1
 17175  1E79  0822               	movf	?___ftneg+2,w
 17176  1E7A  00DE               	movwf	___ftadd@f2+2
 17177  1E7B  3198  20C2  319E   	fcall	___ftadd
 17178  1E7E  0020               	movlb	0	; select bank0
 17179  1E7F  0859               	movf	?___ftadd,w
 17180  1E80  0021               	movlb	1	; select bank1
 17181  1E81  00BF               	movwf	_asin$1916^(0+128)
 17182  1E82  0020               	movlb	0	; select bank0
 17183  1E83  085A               	movf	?___ftadd+1,w
 17184  1E84  0021               	movlb	1	; select bank1
 17185  1E85  00C0               	movwf	(_asin$1916+1)^(0+128)
 17186  1E86  0020               	movlb	0	; select bank0
 17187  1E87  085B               	movf	?___ftadd+2,w
 17188  1E88  0021               	movlb	1	; select bank1
 17189  1E89  00C1               	movwf	(_asin$1916+2)^(0+128)
 17190  1E8A  083F               	movf	_asin$1916^(0+128),w
 17191  1E8B  00A6               	movwf	sqrt@a^(0+128)
 17192  1E8C  0840               	movf	(_asin$1916+1)^(0+128),w
 17193  1E8D  00A7               	movwf	(sqrt@a+1)^(0+128)
 17194  1E8E  0841               	movf	(_asin$1916+2)^(0+128),w
 17195  1E8F  00A8               	movwf	(sqrt@a+2)^(0+128)
 17196  1E90  319A  22D5  319E   	fcall	_sqrt
 17197  1E93  0021               	movlb	1	; select bank1
 17198  1E94  0826               	movf	?_sqrt^(0+128),w
 17199  1E95  00CB               	movwf	asin@y^(0+128)
 17200  1E96  0827               	movf	(?_sqrt+1)^(0+128),w
 17201  1E97  00CC               	movwf	(asin@y+1)^(0+128)
 17202  1E98  0828               	movf	(?_sqrt+2)^(0+128),w
 17203  1E99  00CD               	movwf	(asin@y+2)^(0+128)
 17204  1E9A  0839               	movf	asin@x^(0+128),w
 17205  1E9B  0020               	movlb	0	; select bank0
 17206  1E9C  00A9               	movwf	fabs@d
 17207  1E9D  0021               	movlb	1	; select bank1
 17208  1E9E  083A               	movf	(asin@x+1)^(0+128),w
 17209  1E9F  0020               	movlb	0	; select bank0
 17210  1EA0  00AA               	movwf	fabs@d+1
 17211  1EA1  0021               	movlb	1	; select bank1
 17212  1EA2  083B               	movf	(asin@x+2)^(0+128),w
 17213  1EA3  0020               	movlb	0	; select bank0
 17214  1EA4  00AB               	movwf	fabs@d+2
 17215  1EA5  31AD  2572  319E   	fcall	_fabs
 17216  1EA8  0020               	movlb	0	; select bank0
 17217  1EA9  0829               	movf	?_fabs,w
 17218  1EAA  0021               	movlb	1	; select bank1
 17219  1EAB  00C5               	movwf	_asin$1915^(0+128)
 17220  1EAC  0020               	movlb	0	; select bank0
 17221  1EAD  082A               	movf	?_fabs+1,w
 17222  1EAE  0021               	movlb	1	; select bank1
 17223  1EAF  00C6               	movwf	(_asin$1915+1)^(0+128)
 17224  1EB0  0020               	movlb	0	; select bank0
 17225  1EB1  082B               	movf	?_fabs+2,w
 17226  1EB2  0021               	movlb	1	; select bank1
 17227  1EB3  00C7               	movwf	(_asin$1915+2)^(0+128)
 17228  1EB4  0845               	movf	_asin$1915^(0+128),w
 17229  1EB5  0020               	movlb	0	; select bank0
 17230  1EB6  00A0               	movwf	___ftge@ff1
 17231  1EB7  0021               	movlb	1	; select bank1
 17232  1EB8  0846               	movf	(_asin$1915+1)^(0+128),w
 17233  1EB9  0020               	movlb	0	; select bank0
 17234  1EBA  00A1               	movwf	___ftge@ff1+1
 17235  1EBB  0021               	movlb	1	; select bank1
 17236  1EBC  0847               	movf	(_asin$1915+2)^(0+128),w
 17237  1EBD  0020               	movlb	0	; select bank0
 17238  1EBE  00A2               	movwf	___ftge@ff1+2
 17239  1EBF  30C3               	movlw	195
 17240  1EC0  00A3               	movwf	___ftge@ff2
 17241  1EC1  3035               	movlw	53
 17242  1EC2  00A4               	movwf	___ftge@ff2+1
 17243  1EC3  303F               	movlw	63
 17244  1EC4  00A5               	movwf	___ftge@ff2+2
 17245  1EC5  31AF  27C4  319E   	fcall	___ftge
 17246  1EC8  1803               	btfsc	3,0
 17247  1EC9  2F01               	goto	l6040
 17248  1ECA  0021               	movlb	1	; select bank1
 17249  1ECB  084B               	movf	asin@y^(0+128),w
 17250  1ECC  0020               	movlb	0	; select bank0
 17251  1ECD  00C6               	movwf	___ftdiv@f2
 17252  1ECE  0021               	movlb	1	; select bank1
 17253  1ECF  084C               	movf	(asin@y+1)^(0+128),w
 17254  1ED0  0020               	movlb	0	; select bank0
 17255  1ED1  00C7               	movwf	___ftdiv@f2+1
 17256  1ED2  0021               	movlb	1	; select bank1
 17257  1ED3  084D               	movf	(asin@y+2)^(0+128),w
 17258  1ED4  0020               	movlb	0	; select bank0
 17259  1ED5  00C8               	movwf	___ftdiv@f2+2
 17260  1ED6  0021               	movlb	1	; select bank1
 17261  1ED7  0839               	movf	asin@x^(0+128),w
 17262  1ED8  0020               	movlb	0	; select bank0
 17263  1ED9  00C9               	movwf	___ftdiv@f1
 17264  1EDA  0021               	movlb	1	; select bank1
 17265  1EDB  083A               	movf	(asin@x+1)^(0+128),w
 17266  1EDC  0020               	movlb	0	; select bank0
 17267  1EDD  00CA               	movwf	___ftdiv@f1+1
 17268  1EDE  0021               	movlb	1	; select bank1
 17269  1EDF  083B               	movf	(asin@x+2)^(0+128),w
 17270  1EE0  0020               	movlb	0	; select bank0
 17271  1EE1  00CB               	movwf	___ftdiv@f1+2
 17272  1EE2  31A6  26A3  319E   	fcall	___ftdiv
 17273  1EE5  0020               	movlb	0	; select bank0
 17274  1EE6  0846               	movf	?___ftdiv,w
 17275  1EE7  0021               	movlb	1	; select bank1
 17276  1EE8  00CE               	movwf	_asin$1917^(0+128)
 17277  1EE9  0020               	movlb	0	; select bank0
 17278  1EEA  0847               	movf	?___ftdiv+1,w
 17279  1EEB  0021               	movlb	1	; select bank1
 17280  1EEC  00CF               	movwf	(_asin$1917+1)^(0+128)
 17281  1EED  0020               	movlb	0	; select bank0
 17282  1EEE  0848               	movf	?___ftdiv+2,w
 17283  1EEF  0021               	movlb	1	; select bank1
 17284  1EF0  00D0               	movwf	(_asin$1917+2)^(0+128)
 17285  1EF1  084E               	movf	_asin$1917^(0+128),w
 17286  1EF2  00A0               	movwf	atan@f^(0+128)
 17287  1EF3  084F               	movf	(_asin$1917+1)^(0+128),w
 17288  1EF4  00A1               	movwf	(atan@f+1)^(0+128)
 17289  1EF5  0850               	movf	(_asin$1917+2)^(0+128),w
 17290  1EF6  00A2               	movwf	(atan@f+2)^(0+128)
 17291  1EF7  3188  2002         	fcall	_atan
 17292  1EF9  0021               	movlb	1	; select bank1
 17293  1EFA  0820               	movf	?_atan^(0+128),w
 17294  1EFB  00B9               	movwf	?_asin^(0+128)
 17295  1EFC  0821               	movf	(?_atan+1)^(0+128),w
 17296  1EFD  00BA               	movwf	(?_asin+1)^(0+128)
 17297  1EFE  0822               	movf	(?_atan+2)^(0+128),w
 17298  1EFF  00BB               	movwf	(?_asin+2)^(0+128)
 17299  1F00  0008               	return
 17300  1F01                     l6040:	
 17301  1F01  0021               	movlb	1	; select bank1
 17302  1F02  0839               	movf	asin@x^(0+128),w
 17303  1F03  0020               	movlb	0	; select bank0
 17304  1F04  00A0               	movwf	___ftge@ff1
 17305  1F05  0021               	movlb	1	; select bank1
 17306  1F06  083A               	movf	(asin@x+1)^(0+128),w
 17307  1F07  0020               	movlb	0	; select bank0
 17308  1F08  00A1               	movwf	___ftge@ff1+1
 17309  1F09  0021               	movlb	1	; select bank1
 17310  1F0A  083B               	movf	(asin@x+2)^(0+128),w
 17311  1F0B  0020               	movlb	0	; select bank0
 17312  1F0C  00A2               	movwf	___ftge@ff1+2
 17313  1F0D  3000               	movlw	0
 17314  1F0E  00A3               	movwf	___ftge@ff2
 17315  1F0F  3000               	movlw	0
 17316  1F10  00A4               	movwf	___ftge@ff2+1
 17317  1F11  3000               	movlw	0
 17318  1F12  00A5               	movwf	___ftge@ff2+2
 17319  1F13  31AF  27C4  319E   	fcall	___ftge
 17320  1F16  1803               	btfsc	3,0
 17321  1F17  2F9D               	goto	l6052
 17322  1F18  0021               	movlb	1	; select bank1
 17323  1F19  084B               	movf	asin@y^(0+128),w
 17324  1F1A  0020               	movlb	0	; select bank0
 17325  1F1B  00A0               	movwf	___ftneg@f1
 17326  1F1C  0021               	movlb	1	; select bank1
 17327  1F1D  084C               	movf	(asin@y+1)^(0+128),w
 17328  1F1E  0020               	movlb	0	; select bank0
 17329  1F1F  00A1               	movwf	___ftneg@f1+1
 17330  1F20  0021               	movlb	1	; select bank1
 17331  1F21  084D               	movf	(asin@y+2)^(0+128),w
 17332  1F22  0020               	movlb	0	; select bank0
 17333  1F23  00A2               	movwf	___ftneg@f1+2
 17334  1F24  3198  2003  319E   	fcall	___ftneg
 17335  1F27  0020               	movlb	0	; select bank0
 17336  1F28  0820               	movf	?___ftneg,w
 17337  1F29  00C9               	movwf	___ftdiv@f1
 17338  1F2A  0821               	movf	?___ftneg+1,w
 17339  1F2B  00CA               	movwf	___ftdiv@f1+1
 17340  1F2C  0822               	movf	?___ftneg+2,w
 17341  1F2D  00CB               	movwf	___ftdiv@f1+2
 17342  1F2E  0021               	movlb	1	; select bank1
 17343  1F2F  0839               	movf	asin@x^(0+128),w
 17344  1F30  0020               	movlb	0	; select bank0
 17345  1F31  00C6               	movwf	___ftdiv@f2
 17346  1F32  0021               	movlb	1	; select bank1
 17347  1F33  083A               	movf	(asin@x+1)^(0+128),w
 17348  1F34  0020               	movlb	0	; select bank0
 17349  1F35  00C7               	movwf	___ftdiv@f2+1
 17350  1F36  0021               	movlb	1	; select bank1
 17351  1F37  083B               	movf	(asin@x+2)^(0+128),w
 17352  1F38  0020               	movlb	0	; select bank0
 17353  1F39  00C8               	movwf	___ftdiv@f2+2
 17354  1F3A  31A6  26A3  319E   	fcall	___ftdiv
 17355  1F3D  0020               	movlb	0	; select bank0
 17356  1F3E  0846               	movf	?___ftdiv,w
 17357  1F3F  0021               	movlb	1	; select bank1
 17358  1F40  00CE               	movwf	_asin$1917^(0+128)
 17359  1F41  0020               	movlb	0	; select bank0
 17360  1F42  0847               	movf	?___ftdiv+1,w
 17361  1F43  0021               	movlb	1	; select bank1
 17362  1F44  00CF               	movwf	(_asin$1917+1)^(0+128)
 17363  1F45  0020               	movlb	0	; select bank0
 17364  1F46  0848               	movf	?___ftdiv+2,w
 17365  1F47  0021               	movlb	1	; select bank1
 17366  1F48  00D0               	movwf	(_asin$1917+2)^(0+128)
 17367  1F49  084E               	movf	_asin$1917^(0+128),w
 17368  1F4A  00A0               	movwf	atan@f^(0+128)
 17369  1F4B  084F               	movf	(_asin$1917+1)^(0+128),w
 17370  1F4C  00A1               	movwf	(atan@f+1)^(0+128)
 17371  1F4D  0850               	movf	(_asin$1917+2)^(0+128),w
 17372  1F4E  00A2               	movwf	(atan@f+2)^(0+128)
 17373  1F4F  3188  2002  319E   	fcall	_atan
 17374  1F52  0021               	movlb	1	; select bank1
 17375  1F53  0820               	movf	?_atan^(0+128),w
 17376  1F54  00C8               	movwf	_asin$1918^(0+128)
 17377  1F55  0821               	movf	(?_atan+1)^(0+128),w
 17378  1F56  00C9               	movwf	(_asin$1918+1)^(0+128)
 17379  1F57  0822               	movf	(?_atan+2)^(0+128),w
 17380  1F58  00CA               	movwf	(_asin$1918+2)^(0+128)
 17381  1F59  0848               	movf	_asin$1918^(0+128),w
 17382  1F5A  0020               	movlb	0	; select bank0
 17383  1F5B  00A0               	movwf	___ftneg@f1
 17384  1F5C  0021               	movlb	1	; select bank1
 17385  1F5D  0849               	movf	(_asin$1918+1)^(0+128),w
 17386  1F5E  0020               	movlb	0	; select bank0
 17387  1F5F  00A1               	movwf	___ftneg@f1+1
 17388  1F60  0021               	movlb	1	; select bank1
 17389  1F61  084A               	movf	(_asin$1918+2)^(0+128),w
 17390  1F62  0020               	movlb	0	; select bank0
 17391  1F63  00A2               	movwf	___ftneg@f1+2
 17392  1F64  3198  2003  319E   	fcall	___ftneg
 17393  1F67  0020               	movlb	0	; select bank0
 17394  1F68  0820               	movf	?___ftneg,w
 17395  1F69  00DC               	movwf	___ftadd@f2
 17396  1F6A  0821               	movf	?___ftneg+1,w
 17397  1F6B  00DD               	movwf	___ftadd@f2+1
 17398  1F6C  0822               	movf	?___ftneg+2,w
 17399  1F6D  00DE               	movwf	___ftadd@f2+2
 17400  1F6E  3010               	movlw	16
 17401  1F6F  00D9               	movwf	___ftadd@f1
 17402  1F70  30C9               	movlw	201
 17403  1F71  00DA               	movwf	___ftadd@f1+1
 17404  1F72  303F               	movlw	63
 17405  1F73  00DB               	movwf	___ftadd@f1+2
 17406  1F74  3198  20C2  319E   	fcall	___ftadd
 17407  1F77  0020               	movlb	0	; select bank0
 17408  1F78  0859               	movf	?___ftadd,w
 17409  1F79  0021               	movlb	1	; select bank1
 17410  1F7A  00C2               	movwf	_asin$1919^(0+128)
 17411  1F7B  0020               	movlb	0	; select bank0
 17412  1F7C  085A               	movf	?___ftadd+1,w
 17413  1F7D  0021               	movlb	1	; select bank1
 17414  1F7E  00C3               	movwf	(_asin$1919+1)^(0+128)
 17415  1F7F  0020               	movlb	0	; select bank0
 17416  1F80  085B               	movf	?___ftadd+2,w
 17417  1F81  0021               	movlb	1	; select bank1
 17418  1F82  00C4               	movwf	(_asin$1919+2)^(0+128)
 17419  1F83  0842               	movf	_asin$1919^(0+128),w
 17420  1F84  0020               	movlb	0	; select bank0
 17421  1F85  00A0               	movwf	___ftneg@f1
 17422  1F86  0021               	movlb	1	; select bank1
 17423  1F87  0843               	movf	(_asin$1919+1)^(0+128),w
 17424  1F88  0020               	movlb	0	; select bank0
 17425  1F89  00A1               	movwf	___ftneg@f1+1
 17426  1F8A  0021               	movlb	1	; select bank1
 17427  1F8B  0844               	movf	(_asin$1919+2)^(0+128),w
 17428  1F8C  0020               	movlb	0	; select bank0
 17429  1F8D  00A2               	movwf	___ftneg@f1+2
 17430  1F8E  3198  2003         	fcall	___ftneg
 17431  1F90  0020               	movlb	0	; select bank0
 17432  1F91  0820               	movf	?___ftneg,w
 17433  1F92  0021               	movlb	1	; select bank1
 17434  1F93  00B9               	movwf	?_asin^(0+128)
 17435  1F94  0020               	movlb	0	; select bank0
 17436  1F95  0821               	movf	?___ftneg+1,w
 17437  1F96  0021               	movlb	1	; select bank1
 17438  1F97  00BA               	movwf	(?_asin+1)^(0+128)
 17439  1F98  0020               	movlb	0	; select bank0
 17440  1F99  0822               	movf	?___ftneg+2,w
 17441  1F9A  0021               	movlb	1	; select bank1
 17442  1F9B  00BB               	movwf	(?_asin+2)^(0+128)
 17443  1F9C  0008               	return
 17444  1F9D                     l6052:	
 17445  1F9D  0021               	movlb	1	; select bank1
 17446  1F9E  084B               	movf	asin@y^(0+128),w
 17447  1F9F  0020               	movlb	0	; select bank0
 17448  1FA0  00C9               	movwf	___ftdiv@f1
 17449  1FA1  0021               	movlb	1	; select bank1
 17450  1FA2  084C               	movf	(asin@y+1)^(0+128),w
 17451  1FA3  0020               	movlb	0	; select bank0
 17452  1FA4  00CA               	movwf	___ftdiv@f1+1
 17453  1FA5  0021               	movlb	1	; select bank1
 17454  1FA6  084D               	movf	(asin@y+2)^(0+128),w
 17455  1FA7  0020               	movlb	0	; select bank0
 17456  1FA8  00CB               	movwf	___ftdiv@f1+2
 17457  1FA9  0021               	movlb	1	; select bank1
 17458  1FAA  0839               	movf	asin@x^(0+128),w
 17459  1FAB  0020               	movlb	0	; select bank0
 17460  1FAC  00C6               	movwf	___ftdiv@f2
 17461  1FAD  0021               	movlb	1	; select bank1
 17462  1FAE  083A               	movf	(asin@x+1)^(0+128),w
 17463  1FAF  0020               	movlb	0	; select bank0
 17464  1FB0  00C7               	movwf	___ftdiv@f2+1
 17465  1FB1  0021               	movlb	1	; select bank1
 17466  1FB2  083B               	movf	(asin@x+2)^(0+128),w
 17467  1FB3  0020               	movlb	0	; select bank0
 17468  1FB4  00C8               	movwf	___ftdiv@f2+2
 17469  1FB5  31A6  26A3  319E   	fcall	___ftdiv
 17470  1FB8  0020               	movlb	0	; select bank0
 17471  1FB9  0846               	movf	?___ftdiv,w
 17472  1FBA  0021               	movlb	1	; select bank1
 17473  1FBB  00CE               	movwf	_asin$1917^(0+128)
 17474  1FBC  0020               	movlb	0	; select bank0
 17475  1FBD  0847               	movf	?___ftdiv+1,w
 17476  1FBE  0021               	movlb	1	; select bank1
 17477  1FBF  00CF               	movwf	(_asin$1917+1)^(0+128)
 17478  1FC0  0020               	movlb	0	; select bank0
 17479  1FC1  0848               	movf	?___ftdiv+2,w
 17480  1FC2  0021               	movlb	1	; select bank1
 17481  1FC3  00D0               	movwf	(_asin$1917+2)^(0+128)
 17482  1FC4  084E               	movf	_asin$1917^(0+128),w
 17483  1FC5  00A0               	movwf	atan@f^(0+128)
 17484  1FC6  084F               	movf	(_asin$1917+1)^(0+128),w
 17485  1FC7  00A1               	movwf	(atan@f+1)^(0+128)
 17486  1FC8  0850               	movf	(_asin$1917+2)^(0+128),w
 17487  1FC9  00A2               	movwf	(atan@f+2)^(0+128)
 17488  1FCA  3188  2002  319E   	fcall	_atan
 17489  1FCD  0021               	movlb	1	; select bank1
 17490  1FCE  0820               	movf	?_atan^(0+128),w
 17491  1FCF  00C8               	movwf	_asin$1918^(0+128)
 17492  1FD0  0821               	movf	(?_atan+1)^(0+128),w
 17493  1FD1  00C9               	movwf	(_asin$1918+1)^(0+128)
 17494  1FD2  0822               	movf	(?_atan+2)^(0+128),w
 17495  1FD3  00CA               	movwf	(_asin$1918+2)^(0+128)
 17496  1FD4  3010               	movlw	16
 17497  1FD5  0020               	movlb	0	; select bank0
 17498  1FD6  00D9               	movwf	___ftadd@f1
 17499  1FD7  30C9               	movlw	201
 17500  1FD8  00DA               	movwf	___ftadd@f1+1
 17501  1FD9  303F               	movlw	63
 17502  1FDA  00DB               	movwf	___ftadd@f1+2
 17503  1FDB  0021               	movlb	1	; select bank1
 17504  1FDC  0848               	movf	_asin$1918^(0+128),w
 17505  1FDD  0020               	movlb	0	; select bank0
 17506  1FDE  00A0               	movwf	___ftneg@f1
 17507  1FDF  0021               	movlb	1	; select bank1
 17508  1FE0  0849               	movf	(_asin$1918+1)^(0+128),w
 17509  1FE1  0020               	movlb	0	; select bank0
 17510  1FE2  00A1               	movwf	___ftneg@f1+1
 17511  1FE3  0021               	movlb	1	; select bank1
 17512  1FE4  084A               	movf	(_asin$1918+2)^(0+128),w
 17513  1FE5  0020               	movlb	0	; select bank0
 17514  1FE6  00A2               	movwf	___ftneg@f1+2
 17515  1FE7  3198  2003  319E   	fcall	___ftneg
 17516  1FEA  0020               	movlb	0	; select bank0
 17517  1FEB  0820               	movf	?___ftneg,w
 17518  1FEC  00DC               	movwf	___ftadd@f2
 17519  1FED  0821               	movf	?___ftneg+1,w
 17520  1FEE  00DD               	movwf	___ftadd@f2+1
 17521  1FEF  0822               	movf	?___ftneg+2,w
 17522  1FF0  00DE               	movwf	___ftadd@f2+2
 17523  1FF1  3198  20C2         	fcall	___ftadd
 17524  1FF3  0020               	movlb	0	; select bank0
 17525  1FF4  0859               	movf	?___ftadd,w
 17526  1FF5  0021               	movlb	1	; select bank1
 17527  1FF6  00B9               	movwf	?_asin^(0+128)
 17528  1FF7  0020               	movlb	0	; select bank0
 17529  1FF8  085A               	movf	?___ftadd+1,w
 17530  1FF9  0021               	movlb	1	; select bank1
 17531  1FFA  00BA               	movwf	(?_asin+1)^(0+128)
 17532  1FFB  0020               	movlb	0	; select bank0
 17533  1FFC  085B               	movf	?___ftadd+2,w
 17534  1FFD  0021               	movlb	1	; select bank1
 17535  1FFE  00BB               	movwf	(?_asin+2)^(0+128)
 17536  1FFF  0008               	return
 17537  2000                     __end_of_asin:	
 17538                           
 17539                           	psect	text32
 17540  1AD5                     __ptext32:	
 17541 ;; *************** function _sqrt *****************
 17542 ;; Defined at:
 17543 ;;		line 9 in file "/opt/microchip/xc8/v1.35/sources/common/sprcsqrt.c"
 17544 ;; Parameters:    Size  Location     Type
 17545 ;;  a               3    6[BANK1 ] long 
 17546 ;; Auto vars:     Size  Location     Type
 17547 ;;  x               3   22[BANK1 ] long 
 17548 ;;  q               3   19[BANK1 ] long 
 17549 ;;  z               3   15[BANK1 ] long 
 17550 ;;  og              3   12[BANK1 ] long 
 17551 ;;  i               1   18[BANK1 ] unsigned char 
 17552 ;; Return value:  Size  Location     Type
 17553 ;;                  3    6[BANK1 ] unsigned char 
 17554 ;; Registers used:
 17555 ;;		wreg, status,2, status,0, pclath, cstack
 17556 ;; Tracked objects:
 17557 ;;		On entry : 0/0
 17558 ;;		On exit  : 0/0
 17559 ;;		Unchanged: 0/0
 17560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17561 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17562 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17563 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17564 ;;      Totals:         0       0      19       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17565 ;;Total ram usage:       19 bytes
 17566 ;; Hardware stack levels used:    1
 17567 ;; Hardware stack levels required when called:    8
 17568 ;; This function calls:
 17569 ;;		___ftge
 17570 ;;		___ftmul
 17571 ;;		___ftsub
 17572 ;; This function is called by:
 17573 ;;		_asin
 17574 ;; This function uses a non-reentrant model
 17575 ;;
 17576                           
 17577                           
 17578                           ;psect for function _sqrt
 17579  1AD5                     _sqrt:	
 17580                           
 17581                           ;incstack = 0
 17582                           ; Regs used in _sqrt: [wreg+status,2+status,0+pclath+cstack]
 17583  1AD5  3000               	movlw	0
 17584  1AD6  0020               	movlb	0	; select bank0
 17585  1AD7  00A0               	movwf	___ftge@ff1
 17586  1AD8  3000               	movlw	0
 17587  1AD9  00A1               	movwf	___ftge@ff1+1
 17588  1ADA  3000               	movlw	0
 17589  1ADB  00A2               	movwf	___ftge@ff1+2
 17590  1ADC  0021               	movlb	1	; select bank1
 17591  1ADD  0826               	movf	sqrt@a^(0+128),w
 17592  1ADE  0020               	movlb	0	; select bank0
 17593  1ADF  00A3               	movwf	___ftge@ff2
 17594  1AE0  0021               	movlb	1	; select bank1
 17595  1AE1  0827               	movf	(sqrt@a+1)^(0+128),w
 17596  1AE2  0020               	movlb	0	; select bank0
 17597  1AE3  00A4               	movwf	___ftge@ff2+1
 17598  1AE4  0021               	movlb	1	; select bank1
 17599  1AE5  0828               	movf	(sqrt@a+2)^(0+128),w
 17600  1AE6  0020               	movlb	0	; select bank0
 17601  1AE7  00A5               	movwf	___ftge@ff2+2
 17602  1AE8  31AF  27C4  319A   	fcall	___ftge
 17603  1AEB  1C03               	btfss	3,0
 17604  1AEC  2B11               	goto	l5852
 17605  1AED  0021               	movlb	1	; select bank1
 17606  1AEE  0826               	movf	sqrt@a^(0+128),w
 17607  1AEF  0020               	movlb	0	; select bank0
 17608  1AF0  00A0               	movwf	___ftge@ff1
 17609  1AF1  0021               	movlb	1	; select bank1
 17610  1AF2  0827               	movf	(sqrt@a+1)^(0+128),w
 17611  1AF3  0020               	movlb	0	; select bank0
 17612  1AF4  00A1               	movwf	___ftge@ff1+1
 17613  1AF5  0021               	movlb	1	; select bank1
 17614  1AF6  0828               	movf	(sqrt@a+2)^(0+128),w
 17615  1AF7  0020               	movlb	0	; select bank0
 17616  1AF8  00A2               	movwf	___ftge@ff1+2
 17617  1AF9  3000               	movlw	0
 17618  1AFA  00A3               	movwf	___ftge@ff2
 17619  1AFB  3000               	movlw	0
 17620  1AFC  00A4               	movwf	___ftge@ff2+1
 17621  1AFD  3000               	movlw	0
 17622  1AFE  00A5               	movwf	___ftge@ff2+2
 17623  1AFF  31AF  27C4  319A   	fcall	___ftge
 17624  1B02  1803               	btfsc	3,0
 17625  1B03  2B09               	goto	l1411
 17626  1B04  3021               	movlw	33
 17627  1B05  0022               	movlb	2	; select bank2
 17628  1B06  00E8               	movwf	_errno^(0+256)
 17629  1B07  3000               	movlw	0
 17630  1B08  00E9               	movwf	(_errno^(0+256)+1)
 17631  1B09                     l1411:	
 17632  1B09  3000               	movlw	0
 17633  1B0A  0021               	movlb	1	; select bank1
 17634  1B0B  00A6               	movwf	?_sqrt^(0+128)
 17635  1B0C  3000               	movlw	0
 17636  1B0D  00A7               	movwf	(?_sqrt+1)^(0+128)
 17637  1B0E  3000               	movlw	0
 17638  1B0F  00A8               	movwf	(?_sqrt+2)^(0+128)
 17639  1B10  0008               	return
 17640  1B11                     l5852:	
 17641  1B11  0021               	movlb	1	; select bank1
 17642  1B12  0826               	movf	sqrt@a^(0+128),w
 17643  1B13  00AF               	movwf	sqrt@z^(0+128)
 17644  1B14  0827               	movf	(sqrt@a+1)^(0+128),w
 17645  1B15  00B0               	movwf	(sqrt@z+1)^(0+128)
 17646  1B16  0828               	movf	(sqrt@a+2)^(0+128),w
 17647  1B17  00B1               	movwf	(sqrt@z+2)^(0+128)
 17648  1B18  0926               	comf	sqrt@a^(0+128),w
 17649  1B19  00A9               	movwf	??_sqrt^(0+128)
 17650  1B1A  0927               	comf	(sqrt@a+1)^(0+128),w
 17651  1B1B  00AA               	movwf	(??_sqrt^(0+128)+1)
 17652  1B1C  0928               	comf	(sqrt@a+2)^(0+128),w
 17653  1B1D  00AB               	movwf	(??_sqrt^(0+128)+2)
 17654  1B1E  0AA9               	incf	??_sqrt^(0+128),f
 17655  1B1F  1903               	skipnz
 17656  1B20  0AAA               	incf	(??_sqrt^(0+128)+1),f
 17657  1B21  1903               	skipnz
 17658  1B22  0AAB               	incf	(??_sqrt^(0+128)+2),f
 17659  1B23  30C8               	movlw	200
 17660  1B24  0729               	addwf	??_sqrt^(0+128),w
 17661  1B25  00B6               	movwf	sqrt@x^(0+128)
 17662  1B26  306E               	movlw	110
 17663  1B27  3D2A               	addwfc	(??_sqrt+1)^(0+128),w
 17664  1B28  00B7               	movwf	(sqrt@x+1)^(0+128)
 17665  1B29  30BE               	movlw	190
 17666  1B2A  3D2B               	addwfc	(??_sqrt+2)^(0+128),w
 17667  1B2B  00B8               	movwf	(sqrt@x+2)^(0+128)
 17668  1B2C  3001               	movlw	1
 17669  1B2D                     u7295:	
 17670  1B2D  36B8               	lsrf	(sqrt@x+2)^(0+128),f
 17671  1B2E  0CB7               	rrf	(sqrt@x+1)^(0+128),f
 17672  1B2F  0CB6               	rrf	sqrt@x^(0+128),f
 17673  1B30  0B89               	decfsz	9,f
 17674  1B31  2B2D               	goto	u7295
 17675  1B32  3000               	movlw	0
 17676  1B33  00A9               	movwf	??_sqrt^(0+128)
 17677  1B34  3080               	movlw	128
 17678  1B35  00AA               	movwf	(??_sqrt^(0+128)+1)
 17679  1B36  3000               	movlw	0
 17680  1B37  00AB               	movwf	(??_sqrt^(0+128)+2)
 17681  1B38  0829               	movf	??_sqrt^(0+128),w
 17682  1B39  02AF               	subwf	sqrt@z^(0+128),f
 17683  1B3A  082A               	movf	(??_sqrt+1)^(0+128),w
 17684  1B3B  3BB0               	subwfb	(sqrt@z+1)^(0+128),f
 17685  1B3C  082B               	movf	(??_sqrt+2)^(0+128),w
 17686  1B3D  3BB1               	subwfb	(sqrt@z+2)^(0+128),f
 17687  1B3E  3004               	movlw	4
 17688  1B3F  00A9               	movwf	??_sqrt^(0+128)
 17689  1B40  0829               	movf	??_sqrt^(0+128),w
 17690  1B41  00B2               	movwf	sqrt@i^(0+128)
 17691  1B42                     l1413:	
 17692  1B42  0836               	movf	sqrt@x^(0+128),w
 17693  1B43  00AC               	movwf	sqrt@og^(0+128)
 17694  1B44  0837               	movf	(sqrt@x+1)^(0+128),w
 17695  1B45  00AD               	movwf	(sqrt@og+1)^(0+128)
 17696  1B46  0838               	movf	(sqrt@x+2)^(0+128),w
 17697  1B47  00AE               	movwf	(sqrt@og+2)^(0+128)
 17698  1B48  082F               	movf	sqrt@z^(0+128),w
 17699  1B49  0020               	movlb	0	; select bank0
 17700  1B4A  00B6               	movwf	___ftmul@f1
 17701  1B4B  0021               	movlb	1	; select bank1
 17702  1B4C  0830               	movf	(sqrt@z+1)^(0+128),w
 17703  1B4D  0020               	movlb	0	; select bank0
 17704  1B4E  00B7               	movwf	___ftmul@f1+1
 17705  1B4F  0021               	movlb	1	; select bank1
 17706  1B50  0831               	movf	(sqrt@z+2)^(0+128),w
 17707  1B51  0020               	movlb	0	; select bank0
 17708  1B52  00B8               	movwf	___ftmul@f1+2
 17709  1B53  0021               	movlb	1	; select bank1
 17710  1B54  0836               	movf	sqrt@x^(0+128),w
 17711  1B55  0020               	movlb	0	; select bank0
 17712  1B56  00B9               	movwf	___ftmul@f2
 17713  1B57  0021               	movlb	1	; select bank1
 17714  1B58  0837               	movf	(sqrt@x+1)^(0+128),w
 17715  1B59  0020               	movlb	0	; select bank0
 17716  1B5A  00BA               	movwf	___ftmul@f2+1
 17717  1B5B  0021               	movlb	1	; select bank1
 17718  1B5C  0838               	movf	(sqrt@x+2)^(0+128),w
 17719  1B5D  0020               	movlb	0	; select bank0
 17720  1B5E  00BB               	movwf	___ftmul@f2+2
 17721  1B5F  31A7  274C  319A   	fcall	___ftmul
 17722  1B62  0020               	movlb	0	; select bank0
 17723  1B63  0836               	movf	?___ftmul,w
 17724  1B64  0021               	movlb	1	; select bank1
 17725  1B65  00B3               	movwf	sqrt@q^(0+128)
 17726  1B66  0020               	movlb	0	; select bank0
 17727  1B67  0837               	movf	?___ftmul+1,w
 17728  1B68  0021               	movlb	1	; select bank1
 17729  1B69  00B4               	movwf	(sqrt@q+1)^(0+128)
 17730  1B6A  0020               	movlb	0	; select bank0
 17731  1B6B  0838               	movf	?___ftmul+2,w
 17732  1B6C  0021               	movlb	1	; select bank1
 17733  1B6D  00B5               	movwf	(sqrt@q+2)^(0+128)
 17734  1B6E  0836               	movf	sqrt@x^(0+128),w
 17735  1B6F  0020               	movlb	0	; select bank0
 17736  1B70  00B6               	movwf	___ftmul@f1
 17737  1B71  0021               	movlb	1	; select bank1
 17738  1B72  0837               	movf	(sqrt@x+1)^(0+128),w
 17739  1B73  0020               	movlb	0	; select bank0
 17740  1B74  00B7               	movwf	___ftmul@f1+1
 17741  1B75  0021               	movlb	1	; select bank1
 17742  1B76  0838               	movf	(sqrt@x+2)^(0+128),w
 17743  1B77  0020               	movlb	0	; select bank0
 17744  1B78  00B8               	movwf	___ftmul@f1+2
 17745  1B79  0021               	movlb	1	; select bank1
 17746  1B7A  0833               	movf	sqrt@q^(0+128),w
 17747  1B7B  0020               	movlb	0	; select bank0
 17748  1B7C  00B9               	movwf	___ftmul@f2
 17749  1B7D  0021               	movlb	1	; select bank1
 17750  1B7E  0834               	movf	(sqrt@q+1)^(0+128),w
 17751  1B7F  0020               	movlb	0	; select bank0
 17752  1B80  00BA               	movwf	___ftmul@f2+1
 17753  1B81  0021               	movlb	1	; select bank1
 17754  1B82  0835               	movf	(sqrt@q+2)^(0+128),w
 17755  1B83  0020               	movlb	0	; select bank0
 17756  1B84  00BB               	movwf	___ftmul@f2+2
 17757  1B85  31A7  274C  319A   	fcall	___ftmul
 17758  1B88  0020               	movlb	0	; select bank0
 17759  1B89  0836               	movf	?___ftmul,w
 17760  1B8A  0021               	movlb	1	; select bank1
 17761  1B8B  00B3               	movwf	sqrt@q^(0+128)
 17762  1B8C  0020               	movlb	0	; select bank0
 17763  1B8D  0837               	movf	?___ftmul+1,w
 17764  1B8E  0021               	movlb	1	; select bank1
 17765  1B8F  00B4               	movwf	(sqrt@q+1)^(0+128)
 17766  1B90  0020               	movlb	0	; select bank0
 17767  1B91  0838               	movf	?___ftmul+2,w
 17768  1B92  0021               	movlb	1	; select bank1
 17769  1B93  00B5               	movwf	(sqrt@q+2)^(0+128)
 17770  1B94  0836               	movf	sqrt@x^(0+128),w
 17771  1B95  0020               	movlb	0	; select bank0
 17772  1B96  00B6               	movwf	___ftmul@f1
 17773  1B97  0021               	movlb	1	; select bank1
 17774  1B98  0837               	movf	(sqrt@x+1)^(0+128),w
 17775  1B99  0020               	movlb	0	; select bank0
 17776  1B9A  00B7               	movwf	___ftmul@f1+1
 17777  1B9B  0021               	movlb	1	; select bank1
 17778  1B9C  0838               	movf	(sqrt@x+2)^(0+128),w
 17779  1B9D  0020               	movlb	0	; select bank0
 17780  1B9E  00B8               	movwf	___ftmul@f1+2
 17781  1B9F  0021               	movlb	1	; select bank1
 17782  1BA0  0833               	movf	sqrt@q^(0+128),w
 17783  1BA1  0020               	movlb	0	; select bank0
 17784  1BA2  00B9               	movwf	___ftmul@f2
 17785  1BA3  0021               	movlb	1	; select bank1
 17786  1BA4  0834               	movf	(sqrt@q+1)^(0+128),w
 17787  1BA5  0020               	movlb	0	; select bank0
 17788  1BA6  00BA               	movwf	___ftmul@f2+1
 17789  1BA7  0021               	movlb	1	; select bank1
 17790  1BA8  0835               	movf	(sqrt@q+2)^(0+128),w
 17791  1BA9  0020               	movlb	0	; select bank0
 17792  1BAA  00BB               	movwf	___ftmul@f2+2
 17793  1BAB  31A7  274C  319A   	fcall	___ftmul
 17794  1BAE  0020               	movlb	0	; select bank0
 17795  1BAF  0836               	movf	?___ftmul,w
 17796  1BB0  0021               	movlb	1	; select bank1
 17797  1BB1  00B3               	movwf	sqrt@q^(0+128)
 17798  1BB2  0020               	movlb	0	; select bank0
 17799  1BB3  0837               	movf	?___ftmul+1,w
 17800  1BB4  0021               	movlb	1	; select bank1
 17801  1BB5  00B4               	movwf	(sqrt@q+1)^(0+128)
 17802  1BB6  0020               	movlb	0	; select bank0
 17803  1BB7  0838               	movf	?___ftmul+2,w
 17804  1BB8  0021               	movlb	1	; select bank1
 17805  1BB9  00B5               	movwf	(sqrt@q+2)^(0+128)
 17806  1BBA  3000               	movlw	0
 17807  1BBB  0020               	movlb	0	; select bank0
 17808  1BBC  00B6               	movwf	___ftmul@f1
 17809  1BBD  30C0               	movlw	192
 17810  1BBE  00B7               	movwf	___ftmul@f1+1
 17811  1BBF  303F               	movlw	63
 17812  1BC0  00B8               	movwf	___ftmul@f1+2
 17813  1BC1  0021               	movlb	1	; select bank1
 17814  1BC2  0836               	movf	sqrt@x^(0+128),w
 17815  1BC3  0020               	movlb	0	; select bank0
 17816  1BC4  00B9               	movwf	___ftmul@f2
 17817  1BC5  0021               	movlb	1	; select bank1
 17818  1BC6  0837               	movf	(sqrt@x+1)^(0+128),w
 17819  1BC7  0020               	movlb	0	; select bank0
 17820  1BC8  00BA               	movwf	___ftmul@f2+1
 17821  1BC9  0021               	movlb	1	; select bank1
 17822  1BCA  0838               	movf	(sqrt@x+2)^(0+128),w
 17823  1BCB  0020               	movlb	0	; select bank0
 17824  1BCC  00BB               	movwf	___ftmul@f2+2
 17825  1BCD  31A7  274C  319A   	fcall	___ftmul
 17826  1BD0  0020               	movlb	0	; select bank0
 17827  1BD1  0836               	movf	?___ftmul,w
 17828  1BD2  0021               	movlb	1	; select bank1
 17829  1BD3  00B6               	movwf	sqrt@x^(0+128)
 17830  1BD4  0020               	movlb	0	; select bank0
 17831  1BD5  0837               	movf	?___ftmul+1,w
 17832  1BD6  0021               	movlb	1	; select bank1
 17833  1BD7  00B7               	movwf	(sqrt@x+1)^(0+128)
 17834  1BD8  0020               	movlb	0	; select bank0
 17835  1BD9  0838               	movf	?___ftmul+2,w
 17836  1BDA  0021               	movlb	1	; select bank1
 17837  1BDB  00B8               	movwf	(sqrt@x+2)^(0+128)
 17838  1BDC  0833               	movf	sqrt@q^(0+128),w
 17839  1BDD  00A0               	movwf	___ftsub@f2^(0+128)
 17840  1BDE  0834               	movf	(sqrt@q+1)^(0+128),w
 17841  1BDF  00A1               	movwf	(___ftsub@f2+1)^(0+128)
 17842  1BE0  0835               	movf	(sqrt@q+2)^(0+128),w
 17843  1BE1  00A2               	movwf	(___ftsub@f2+2)^(0+128)
 17844  1BE2  0836               	movf	sqrt@x^(0+128),w
 17845  1BE3  00A3               	movwf	___ftsub@f1^(0+128)
 17846  1BE4  0837               	movf	(sqrt@x+1)^(0+128),w
 17847  1BE5  00A4               	movwf	(___ftsub@f1+1)^(0+128)
 17848  1BE6  0838               	movf	(sqrt@x+2)^(0+128),w
 17849  1BE7  00A5               	movwf	(___ftsub@f1+2)^(0+128)
 17850  1BE8  31AE  2683  319A   	fcall	___ftsub
 17851  1BEB  0021               	movlb	1	; select bank1
 17852  1BEC  0820               	movf	?___ftsub^(0+128),w
 17853  1BED  00B6               	movwf	sqrt@x^(0+128)
 17854  1BEE  0821               	movf	(?___ftsub+1)^(0+128),w
 17855  1BEF  00B7               	movwf	(sqrt@x+1)^(0+128)
 17856  1BF0  0822               	movf	(?___ftsub+2)^(0+128),w
 17857  1BF1  00B8               	movwf	(sqrt@x+2)^(0+128)
 17858  1BF2  3001               	movlw	1
 17859  1BF3  02B2               	subwf	sqrt@i^(0+128),f
 17860  1BF4  1D03               	btfss	3,2
 17861  1BF5  2B42               	goto	l1413
 17862  1BF6  0826               	movf	sqrt@a^(0+128),w
 17863  1BF7  0020               	movlb	0	; select bank0
 17864  1BF8  00B6               	movwf	___ftmul@f1
 17865  1BF9  0021               	movlb	1	; select bank1
 17866  1BFA  0827               	movf	(sqrt@a+1)^(0+128),w
 17867  1BFB  0020               	movlb	0	; select bank0
 17868  1BFC  00B7               	movwf	___ftmul@f1+1
 17869  1BFD  0021               	movlb	1	; select bank1
 17870  1BFE  0828               	movf	(sqrt@a+2)^(0+128),w
 17871  1BFF  0020               	movlb	0	; select bank0
 17872  1C00  00B8               	movwf	___ftmul@f1+2
 17873  1C01  0021               	movlb	1	; select bank1
 17874  1C02  0836               	movf	sqrt@x^(0+128),w
 17875  1C03  0020               	movlb	0	; select bank0
 17876  1C04  00B9               	movwf	___ftmul@f2
 17877  1C05  0021               	movlb	1	; select bank1
 17878  1C06  0837               	movf	(sqrt@x+1)^(0+128),w
 17879  1C07  0020               	movlb	0	; select bank0
 17880  1C08  00BA               	movwf	___ftmul@f2+1
 17881  1C09  0021               	movlb	1	; select bank1
 17882  1C0A  0838               	movf	(sqrt@x+2)^(0+128),w
 17883  1C0B  0020               	movlb	0	; select bank0
 17884  1C0C  00BB               	movwf	___ftmul@f2+2
 17885  1C0D  31A7  274C         	fcall	___ftmul
 17886  1C0F  0020               	movlb	0	; select bank0
 17887  1C10  0836               	movf	?___ftmul,w
 17888  1C11  0021               	movlb	1	; select bank1
 17889  1C12  00A6               	movwf	?_sqrt^(0+128)
 17890  1C13  0020               	movlb	0	; select bank0
 17891  1C14  0837               	movf	?___ftmul+1,w
 17892  1C15  0021               	movlb	1	; select bank1
 17893  1C16  00A7               	movwf	(?_sqrt+1)^(0+128)
 17894  1C17  0020               	movlb	0	; select bank0
 17895  1C18  0838               	movf	?___ftmul+2,w
 17896  1C19  0021               	movlb	1	; select bank1
 17897  1C1A  00A8               	movwf	(?_sqrt+2)^(0+128)
 17898  1C1B  0008               	return
 17899  1C1C                     __end_of_sqrt:	
 17900                           
 17901                           	psect	text33
 17902  2E83                     __ptext33:	
 17903 ;; *************** function ___ftsub *****************
 17904 ;; Defined at:
 17905 ;;		line 18 in file "/opt/microchip/xc8/v1.35/sources/common/ftsub.c"
 17906 ;; Parameters:    Size  Location     Type
 17907 ;;  f2              3    0[BANK1 ] float 
 17908 ;;  f1              3    3[BANK1 ] float 
 17909 ;; Auto vars:     Size  Location     Type
 17910 ;;		None
 17911 ;; Return value:  Size  Location     Type
 17912 ;;                  3    0[BANK1 ] float 
 17913 ;; Registers used:
 17914 ;;		wreg, status,2, status,0, pclath, cstack
 17915 ;; Tracked objects:
 17916 ;;		On entry : 0/0
 17917 ;;		On exit  : 0/0
 17918 ;;		Unchanged: 0/0
 17919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 17920 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17923 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 17924 ;;Total ram usage:        6 bytes
 17925 ;; Hardware stack levels used:    1
 17926 ;; Hardware stack levels required when called:    7
 17927 ;; This function calls:
 17928 ;;		___ftadd
 17929 ;; This function is called by:
 17930 ;;		_sprintf
 17931 ;;		_atan2
 17932 ;;		_sin
 17933 ;;		_sqrt
 17934 ;; This function uses a non-reentrant model
 17935 ;;
 17936                           
 17937                           
 17938                           ;psect for function ___ftsub
 17939  2E83                     ___ftsub:	
 17940                           
 17941                           ;incstack = 0
 17942                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
 17943  2E83  0021               	movlb	1	; select bank1
 17944  2E84  0822               	movf	(___ftsub@f2+2)^(0+128),w
 17945  2E85  0421               	iorwf	(___ftsub@f2+1)^(0+128),w
 17946  2E86  0420               	iorwf	___ftsub@f2^(0+128),w
 17947  2E87  1903               	skipnz
 17948  2E88  2E8B               	goto	l5752
 17949  2E89  3080               	movlw	128
 17950  2E8A  06A2               	xorwf	(___ftsub@f2+2)^(0+128),f
 17951  2E8B                     l5752:	
 17952  2E8B  0823               	movf	___ftsub@f1^(0+128),w
 17953  2E8C  0020               	movlb	0	; select bank0
 17954  2E8D  00D9               	movwf	___ftadd@f1
 17955  2E8E  0021               	movlb	1	; select bank1
 17956  2E8F  0824               	movf	(___ftsub@f1+1)^(0+128),w
 17957  2E90  0020               	movlb	0	; select bank0
 17958  2E91  00DA               	movwf	___ftadd@f1+1
 17959  2E92  0021               	movlb	1	; select bank1
 17960  2E93  0825               	movf	(___ftsub@f1+2)^(0+128),w
 17961  2E94  0020               	movlb	0	; select bank0
 17962  2E95  00DB               	movwf	___ftadd@f1+2
 17963  2E96  0021               	movlb	1	; select bank1
 17964  2E97  0820               	movf	___ftsub@f2^(0+128),w
 17965  2E98  0020               	movlb	0	; select bank0
 17966  2E99  00DC               	movwf	___ftadd@f2
 17967  2E9A  0021               	movlb	1	; select bank1
 17968  2E9B  0821               	movf	(___ftsub@f2+1)^(0+128),w
 17969  2E9C  0020               	movlb	0	; select bank0
 17970  2E9D  00DD               	movwf	___ftadd@f2+1
 17971  2E9E  0021               	movlb	1	; select bank1
 17972  2E9F  0822               	movf	(___ftsub@f2+2)^(0+128),w
 17973  2EA0  0020               	movlb	0	; select bank0
 17974  2EA1  00DE               	movwf	___ftadd@f2+2
 17975  2EA2  3198  20C2         	fcall	___ftadd
 17976  2EA4  0020               	movlb	0	; select bank0
 17977  2EA5  0859               	movf	?___ftadd,w
 17978  2EA6  0021               	movlb	1	; select bank1
 17979  2EA7  00A0               	movwf	?___ftsub^(0+128)
 17980  2EA8  0020               	movlb	0	; select bank0
 17981  2EA9  085A               	movf	?___ftadd+1,w
 17982  2EAA  0021               	movlb	1	; select bank1
 17983  2EAB  00A1               	movwf	(?___ftsub+1)^(0+128)
 17984  2EAC  0020               	movlb	0	; select bank0
 17985  2EAD  085B               	movf	?___ftadd+2,w
 17986  2EAE  0021               	movlb	1	; select bank1
 17987  2EAF  00A2               	movwf	(?___ftsub+2)^(0+128)
 17988  2EB0  0008               	return
 17989  2EB1                     __end_of___ftsub:	
 17990                           
 17991                           	psect	text34
 17992  0802                     __ptext34:	
 17993 ;; *************** function _atan *****************
 17994 ;; Defined at:
 17995 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/atan.c"
 17996 ;; Parameters:    Size  Location     Type
 17997 ;;  f               3    0[BANK1 ] float 
 17998 ;; Auto vars:     Size  Location     Type
 17999 ;;  val             3   14[BANK1 ] float 
 18000 ;;  val_squared     3   11[BANK1 ] float 
 18001 ;;  x               3    7[BANK1 ] float 
 18002 ;;  y               3    4[BANK1 ] float 
 18003 ;;  recip           1   10[BANK1 ] unsigned char 
 18004 ;; Return value:  Size  Location     Type
 18005 ;;                  3    0[BANK1 ] unsigned char 
 18006 ;; Registers used:
 18007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18008 ;; Tracked objects:
 18009 ;;		On entry : 0/0
 18010 ;;		On exit  : 0/0
 18011 ;;		Unchanged: 0/0
 18012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18013 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18014 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18015 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18016 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18017 ;;Total ram usage:       17 bytes
 18018 ;; Hardware stack levels used:    1
 18019 ;; Hardware stack levels required when called:    8
 18020 ;; This function calls:
 18021 ;;		___ftadd
 18022 ;;		___ftdiv
 18023 ;;		___ftge
 18024 ;;		___ftmul
 18025 ;;		___ftneg
 18026 ;;		_eval_poly
 18027 ;;		_fabs
 18028 ;; This function is called by:
 18029 ;;		_asin
 18030 ;;		_atan2
 18031 ;; This function uses a non-reentrant model
 18032 ;;
 18033                           
 18034                           
 18035                           ;psect for function _atan
 18036  0802                     _atan:	
 18037                           
 18038                           ;incstack = 0
 18039                           ; Regs used in _atan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18040  0802  0021               	movlb	1	; select bank1
 18041  0803  0820               	movf	atan@f^(0+128),w
 18042  0804  0020               	movlb	0	; select bank0
 18043  0805  00A9               	movwf	fabs@d
 18044  0806  0021               	movlb	1	; select bank1
 18045  0807  0821               	movf	(atan@f+1)^(0+128),w
 18046  0808  0020               	movlb	0	; select bank0
 18047  0809  00AA               	movwf	fabs@d+1
 18048  080A  0021               	movlb	1	; select bank1
 18049  080B  0822               	movf	(atan@f+2)^(0+128),w
 18050  080C  0020               	movlb	0	; select bank0
 18051  080D  00AB               	movwf	fabs@d+2
 18052  080E  31AD  2572  3188   	fcall	_fabs
 18053  0811  0020               	movlb	0	; select bank0
 18054  0812  0829               	movf	?_fabs,w
 18055  0813  0021               	movlb	1	; select bank1
 18056  0814  00AE               	movwf	atan@val^(0+128)
 18057  0815  0020               	movlb	0	; select bank0
 18058  0816  082A               	movf	?_fabs+1,w
 18059  0817  0021               	movlb	1	; select bank1
 18060  0818  00AF               	movwf	(atan@val+1)^(0+128)
 18061  0819  0020               	movlb	0	; select bank0
 18062  081A  082B               	movf	?_fabs+2,w
 18063  081B  0021               	movlb	1	; select bank1
 18064  081C  00B0               	movwf	(atan@val+2)^(0+128)
 18065  081D  0830               	movf	(atan@val+2)^(0+128),w
 18066  081E  042F               	iorwf	(atan@val+1)^(0+128),w
 18067  081F  042E               	iorwf	atan@val^(0+128),w
 18068  0820  1D03               	skipz
 18069  0821  2829               	goto	l5880
 18070  0822  3000               	movlw	0
 18071  0823  00A0               	movwf	?_atan^(0+128)
 18072  0824  3000               	movlw	0
 18073  0825  00A1               	movwf	(?_atan+1)^(0+128)
 18074  0826  3000               	movlw	0
 18075  0827  00A2               	movwf	(?_atan+2)^(0+128)
 18076  0828  0008               	return
 18077  0829                     l5880:	
 18078  0829  3000               	movlw	0
 18079  082A  0020               	movlb	0	; select bank0
 18080  082B  00A0               	movwf	___ftge@ff1
 18081  082C  3080               	movlw	128
 18082  082D  00A1               	movwf	___ftge@ff1+1
 18083  082E  303F               	movlw	63
 18084  082F  00A2               	movwf	___ftge@ff1+2
 18085  0830  0021               	movlb	1	; select bank1
 18086  0831  082E               	movf	atan@val^(0+128),w
 18087  0832  0020               	movlb	0	; select bank0
 18088  0833  00A3               	movwf	___ftge@ff2
 18089  0834  0021               	movlb	1	; select bank1
 18090  0835  082F               	movf	(atan@val+1)^(0+128),w
 18091  0836  0020               	movlb	0	; select bank0
 18092  0837  00A4               	movwf	___ftge@ff2+1
 18093  0838  0021               	movlb	1	; select bank1
 18094  0839  0830               	movf	(atan@val+2)^(0+128),w
 18095  083A  0020               	movlb	0	; select bank0
 18096  083B  00A5               	movwf	___ftge@ff2+2
 18097  083C  31AF  27C4  3188   	fcall	___ftge
 18098  083F  1803               	btfsc	3,0
 18099  0840  2843               	goto	u7320
 18100  0841  3001               	movlw	1
 18101  0842  2844               	goto	u7330
 18102  0843                     u7320:	
 18103  0843  3000               	movlw	0
 18104  0844                     u7330:	
 18105  0844  0021               	movlb	1	; select bank1
 18106  0845  00A3               	movwf	??_atan^(0+128)
 18107  0846  0823               	movf	??_atan^(0+128),w
 18108  0847  00AA               	movwf	atan@recip^(0+128)
 18109  0848  082A               	movf	atan@recip^(0+128),w
 18110  0849  1903               	btfsc	3,2
 18111  084A  286B               	goto	l936
 18112  084B  082E               	movf	atan@val^(0+128),w
 18113  084C  0020               	movlb	0	; select bank0
 18114  084D  00C6               	movwf	___ftdiv@f2
 18115  084E  0021               	movlb	1	; select bank1
 18116  084F  082F               	movf	(atan@val+1)^(0+128),w
 18117  0850  0020               	movlb	0	; select bank0
 18118  0851  00C7               	movwf	___ftdiv@f2+1
 18119  0852  0021               	movlb	1	; select bank1
 18120  0853  0830               	movf	(atan@val+2)^(0+128),w
 18121  0854  0020               	movlb	0	; select bank0
 18122  0855  00C8               	movwf	___ftdiv@f2+2
 18123  0856  3000               	movlw	0
 18124  0857  00C9               	movwf	___ftdiv@f1
 18125  0858  3080               	movlw	128
 18126  0859  00CA               	movwf	___ftdiv@f1+1
 18127  085A  303F               	movlw	63
 18128  085B  00CB               	movwf	___ftdiv@f1+2
 18129  085C  31A6  26A3  3188   	fcall	___ftdiv
 18130  085F  0020               	movlb	0	; select bank0
 18131  0860  0846               	movf	?___ftdiv,w
 18132  0861  0021               	movlb	1	; select bank1
 18133  0862  00AE               	movwf	atan@val^(0+128)
 18134  0863  0020               	movlb	0	; select bank0
 18135  0864  0847               	movf	?___ftdiv+1,w
 18136  0865  0021               	movlb	1	; select bank1
 18137  0866  00AF               	movwf	(atan@val+1)^(0+128)
 18138  0867  0020               	movlb	0	; select bank0
 18139  0868  0848               	movf	?___ftdiv+2,w
 18140  0869  0021               	movlb	1	; select bank1
 18141  086A  00B0               	movwf	(atan@val+2)^(0+128)
 18142  086B                     l936:	
 18143  086B  082E               	movf	atan@val^(0+128),w
 18144  086C  0020               	movlb	0	; select bank0
 18145  086D  00B6               	movwf	___ftmul@f1
 18146  086E  0021               	movlb	1	; select bank1
 18147  086F  082F               	movf	(atan@val+1)^(0+128),w
 18148  0870  0020               	movlb	0	; select bank0
 18149  0871  00B7               	movwf	___ftmul@f1+1
 18150  0872  0021               	movlb	1	; select bank1
 18151  0873  0830               	movf	(atan@val+2)^(0+128),w
 18152  0874  0020               	movlb	0	; select bank0
 18153  0875  00B8               	movwf	___ftmul@f1+2
 18154  0876  0021               	movlb	1	; select bank1
 18155  0877  082E               	movf	atan@val^(0+128),w
 18156  0878  0020               	movlb	0	; select bank0
 18157  0879  00B9               	movwf	___ftmul@f2
 18158  087A  0021               	movlb	1	; select bank1
 18159  087B  082F               	movf	(atan@val+1)^(0+128),w
 18160  087C  0020               	movlb	0	; select bank0
 18161  087D  00BA               	movwf	___ftmul@f2+1
 18162  087E  0021               	movlb	1	; select bank1
 18163  087F  0830               	movf	(atan@val+2)^(0+128),w
 18164  0880  0020               	movlb	0	; select bank0
 18165  0881  00BB               	movwf	___ftmul@f2+2
 18166  0882  31A7  274C  3188   	fcall	___ftmul
 18167  0885  0020               	movlb	0	; select bank0
 18168  0886  0836               	movf	?___ftmul,w
 18169  0887  0021               	movlb	1	; select bank1
 18170  0888  00AB               	movwf	atan@val_squared^(0+128)
 18171  0889  0020               	movlb	0	; select bank0
 18172  088A  0837               	movf	?___ftmul+1,w
 18173  088B  0021               	movlb	1	; select bank1
 18174  088C  00AC               	movwf	(atan@val_squared+1)^(0+128)
 18175  088D  0020               	movlb	0	; select bank0
 18176  088E  0838               	movf	?___ftmul+2,w
 18177  088F  0021               	movlb	1	; select bank1
 18178  0890  00AD               	movwf	(atan@val_squared+2)^(0+128)
 18179  0891  082B               	movf	atan@val_squared^(0+128),w
 18180  0892  0020               	movlb	0	; select bank0
 18181  0893  00E6               	movwf	eval_poly@x
 18182  0894  0021               	movlb	1	; select bank1
 18183  0895  082C               	movf	(atan@val_squared+1)^(0+128),w
 18184  0896  0020               	movlb	0	; select bank0
 18185  0897  00E7               	movwf	eval_poly@x+1
 18186  0898  0021               	movlb	1	; select bank1
 18187  0899  082D               	movf	(atan@val_squared+2)^(0+128),w
 18188  089A  0020               	movlb	0	; select bank0
 18189  089B  00E8               	movwf	eval_poly@x+2
 18190  089C  30A8               	movlw	low (atan@coeff_b| (0+32768))
 18191  089D  00E9               	movwf	eval_poly@d
 18192  089E  30A0               	movlw	high (atan@coeff_b| (0+32768))
 18193  089F  00EA               	movwf	eval_poly@d+1
 18194  08A0  3004               	movlw	4
 18195  08A1  00EB               	movwf	eval_poly@n
 18196  08A2  3000               	movlw	0
 18197  08A3  00EC               	movwf	eval_poly@n+1
 18198  08A4  31A2  22F9  3188   	fcall	_eval_poly
 18199  08A7  0020               	movlb	0	; select bank0
 18200  08A8  0866               	movf	?_eval_poly,w
 18201  08A9  0021               	movlb	1	; select bank1
 18202  08AA  00A4               	movwf	atan@y^(0+128)
 18203  08AB  0020               	movlb	0	; select bank0
 18204  08AC  0867               	movf	?_eval_poly+1,w
 18205  08AD  0021               	movlb	1	; select bank1
 18206  08AE  00A5               	movwf	(atan@y+1)^(0+128)
 18207  08AF  0020               	movlb	0	; select bank0
 18208  08B0  0868               	movf	?_eval_poly+2,w
 18209  08B1  0021               	movlb	1	; select bank1
 18210  08B2  00A6               	movwf	(atan@y+2)^(0+128)
 18211  08B3  082B               	movf	atan@val_squared^(0+128),w
 18212  08B4  0020               	movlb	0	; select bank0
 18213  08B5  00E6               	movwf	eval_poly@x
 18214  08B6  0021               	movlb	1	; select bank1
 18215  08B7  082C               	movf	(atan@val_squared+1)^(0+128),w
 18216  08B8  0020               	movlb	0	; select bank0
 18217  08B9  00E7               	movwf	eval_poly@x+1
 18218  08BA  0021               	movlb	1	; select bank1
 18219  08BB  082D               	movf	(atan@val_squared+2)^(0+128),w
 18220  08BC  0020               	movlb	0	; select bank0
 18221  08BD  00E8               	movwf	eval_poly@x+2
 18222  08BE  3096               	movlw	low (atan@coeff_a| (0+32768))
 18223  08BF  00E9               	movwf	eval_poly@d
 18224  08C0  30A0               	movlw	high (atan@coeff_a| (0+32768))
 18225  08C1  00EA               	movwf	eval_poly@d+1
 18226  08C2  3005               	movlw	5
 18227  08C3  00EB               	movwf	eval_poly@n
 18228  08C4  3000               	movlw	0
 18229  08C5  00EC               	movwf	eval_poly@n+1
 18230  08C6  31A2  22F9  3188   	fcall	_eval_poly
 18231  08C9  0020               	movlb	0	; select bank0
 18232  08CA  0866               	movf	?_eval_poly,w
 18233  08CB  0021               	movlb	1	; select bank1
 18234  08CC  00A7               	movwf	atan@x^(0+128)
 18235  08CD  0020               	movlb	0	; select bank0
 18236  08CE  0867               	movf	?_eval_poly+1,w
 18237  08CF  0021               	movlb	1	; select bank1
 18238  08D0  00A8               	movwf	(atan@x+1)^(0+128)
 18239  08D1  0020               	movlb	0	; select bank0
 18240  08D2  0868               	movf	?_eval_poly+2,w
 18241  08D3  0021               	movlb	1	; select bank1
 18242  08D4  00A9               	movwf	(atan@x+2)^(0+128)
 18243  08D5  0827               	movf	atan@x^(0+128),w
 18244  08D6  0020               	movlb	0	; select bank0
 18245  08D7  00C9               	movwf	___ftdiv@f1
 18246  08D8  0021               	movlb	1	; select bank1
 18247  08D9  0828               	movf	(atan@x+1)^(0+128),w
 18248  08DA  0020               	movlb	0	; select bank0
 18249  08DB  00CA               	movwf	___ftdiv@f1+1
 18250  08DC  0021               	movlb	1	; select bank1
 18251  08DD  0829               	movf	(atan@x+2)^(0+128),w
 18252  08DE  0020               	movlb	0	; select bank0
 18253  08DF  00CB               	movwf	___ftdiv@f1+2
 18254  08E0  0021               	movlb	1	; select bank1
 18255  08E1  0824               	movf	atan@y^(0+128),w
 18256  08E2  0020               	movlb	0	; select bank0
 18257  08E3  00C6               	movwf	___ftdiv@f2
 18258  08E4  0021               	movlb	1	; select bank1
 18259  08E5  0825               	movf	(atan@y+1)^(0+128),w
 18260  08E6  0020               	movlb	0	; select bank0
 18261  08E7  00C7               	movwf	___ftdiv@f2+1
 18262  08E8  0021               	movlb	1	; select bank1
 18263  08E9  0826               	movf	(atan@y+2)^(0+128),w
 18264  08EA  0020               	movlb	0	; select bank0
 18265  08EB  00C8               	movwf	___ftdiv@f2+2
 18266  08EC  31A6  26A3  3188   	fcall	___ftdiv
 18267  08EF  0020               	movlb	0	; select bank0
 18268  08F0  0846               	movf	?___ftdiv,w
 18269  08F1  00B6               	movwf	___ftmul@f1
 18270  08F2  0847               	movf	?___ftdiv+1,w
 18271  08F3  00B7               	movwf	___ftmul@f1+1
 18272  08F4  0848               	movf	?___ftdiv+2,w
 18273  08F5  00B8               	movwf	___ftmul@f1+2
 18274  08F6  0021               	movlb	1	; select bank1
 18275  08F7  082E               	movf	atan@val^(0+128),w
 18276  08F8  0020               	movlb	0	; select bank0
 18277  08F9  00B9               	movwf	___ftmul@f2
 18278  08FA  0021               	movlb	1	; select bank1
 18279  08FB  082F               	movf	(atan@val+1)^(0+128),w
 18280  08FC  0020               	movlb	0	; select bank0
 18281  08FD  00BA               	movwf	___ftmul@f2+1
 18282  08FE  0021               	movlb	1	; select bank1
 18283  08FF  0830               	movf	(atan@val+2)^(0+128),w
 18284  0900  0020               	movlb	0	; select bank0
 18285  0901  00BB               	movwf	___ftmul@f2+2
 18286  0902  31A7  274C  3188   	fcall	___ftmul
 18287  0905  0020               	movlb	0	; select bank0
 18288  0906  0836               	movf	?___ftmul,w
 18289  0907  0021               	movlb	1	; select bank1
 18290  0908  00AE               	movwf	atan@val^(0+128)
 18291  0909  0020               	movlb	0	; select bank0
 18292  090A  0837               	movf	?___ftmul+1,w
 18293  090B  0021               	movlb	1	; select bank1
 18294  090C  00AF               	movwf	(atan@val+1)^(0+128)
 18295  090D  0020               	movlb	0	; select bank0
 18296  090E  0838               	movf	?___ftmul+2,w
 18297  090F  0021               	movlb	1	; select bank1
 18298  0910  00B0               	movwf	(atan@val+2)^(0+128)
 18299  0911  082A               	movf	atan@recip^(0+128),w
 18300  0912  1903               	btfsc	3,2
 18301  0913  2940               	goto	l937
 18302  0914  3010               	movlw	16
 18303  0915  0020               	movlb	0	; select bank0
 18304  0916  00D9               	movwf	___ftadd@f1
 18305  0917  30C9               	movlw	201
 18306  0918  00DA               	movwf	___ftadd@f1+1
 18307  0919  303F               	movlw	63
 18308  091A  00DB               	movwf	___ftadd@f1+2
 18309  091B  0021               	movlb	1	; select bank1
 18310  091C  082E               	movf	atan@val^(0+128),w
 18311  091D  0020               	movlb	0	; select bank0
 18312  091E  00A0               	movwf	___ftneg@f1
 18313  091F  0021               	movlb	1	; select bank1
 18314  0920  082F               	movf	(atan@val+1)^(0+128),w
 18315  0921  0020               	movlb	0	; select bank0
 18316  0922  00A1               	movwf	___ftneg@f1+1
 18317  0923  0021               	movlb	1	; select bank1
 18318  0924  0830               	movf	(atan@val+2)^(0+128),w
 18319  0925  0020               	movlb	0	; select bank0
 18320  0926  00A2               	movwf	___ftneg@f1+2
 18321  0927  3198  2003  3188   	fcall	___ftneg
 18322  092A  0020               	movlb	0	; select bank0
 18323  092B  0820               	movf	?___ftneg,w
 18324  092C  00DC               	movwf	___ftadd@f2
 18325  092D  0821               	movf	?___ftneg+1,w
 18326  092E  00DD               	movwf	___ftadd@f2+1
 18327  092F  0822               	movf	?___ftneg+2,w
 18328  0930  00DE               	movwf	___ftadd@f2+2
 18329  0931  3198  20C2  3188   	fcall	___ftadd
 18330  0934  0020               	movlb	0	; select bank0
 18331  0935  0859               	movf	?___ftadd,w
 18332  0936  0021               	movlb	1	; select bank1
 18333  0937  00AE               	movwf	atan@val^(0+128)
 18334  0938  0020               	movlb	0	; select bank0
 18335  0939  085A               	movf	?___ftadd+1,w
 18336  093A  0021               	movlb	1	; select bank1
 18337  093B  00AF               	movwf	(atan@val+1)^(0+128)
 18338  093C  0020               	movlb	0	; select bank0
 18339  093D  085B               	movf	?___ftadd+2,w
 18340  093E  0021               	movlb	1	; select bank1
 18341  093F  00B0               	movwf	(atan@val+2)^(0+128)
 18342  0940                     l937:	
 18343  0940  0820               	movf	atan@f^(0+128),w
 18344  0941  0020               	movlb	0	; select bank0
 18345  0942  00A0               	movwf	___ftge@ff1
 18346  0943  0021               	movlb	1	; select bank1
 18347  0944  0821               	movf	(atan@f+1)^(0+128),w
 18348  0945  0020               	movlb	0	; select bank0
 18349  0946  00A1               	movwf	___ftge@ff1+1
 18350  0947  0021               	movlb	1	; select bank1
 18351  0948  0822               	movf	(atan@f+2)^(0+128),w
 18352  0949  0020               	movlb	0	; select bank0
 18353  094A  00A2               	movwf	___ftge@ff1+2
 18354  094B  3000               	movlw	0
 18355  094C  00A3               	movwf	___ftge@ff2
 18356  094D  3000               	movlw	0
 18357  094E  00A4               	movwf	___ftge@ff2+1
 18358  094F  3000               	movlw	0
 18359  0950  00A5               	movwf	___ftge@ff2+2
 18360  0951  31AF  27C4  3188   	fcall	___ftge
 18361  0954  1C03               	btfss	3,0
 18362  0955  295E               	goto	l5894
 18363  0956  0021               	movlb	1	; select bank1
 18364  0957  082E               	movf	atan@val^(0+128),w
 18365  0958  00A0               	movwf	?_atan^(0+128)
 18366  0959  082F               	movf	(atan@val+1)^(0+128),w
 18367  095A  00A1               	movwf	(?_atan+1)^(0+128)
 18368  095B  0830               	movf	(atan@val+2)^(0+128),w
 18369  095C  00A2               	movwf	(?_atan+2)^(0+128)
 18370  095D  0008               	return
 18371  095E                     l5894:	
 18372  095E  0021               	movlb	1	; select bank1
 18373  095F  082E               	movf	atan@val^(0+128),w
 18374  0960  0020               	movlb	0	; select bank0
 18375  0961  00A0               	movwf	___ftneg@f1
 18376  0962  0021               	movlb	1	; select bank1
 18377  0963  082F               	movf	(atan@val+1)^(0+128),w
 18378  0964  0020               	movlb	0	; select bank0
 18379  0965  00A1               	movwf	___ftneg@f1+1
 18380  0966  0021               	movlb	1	; select bank1
 18381  0967  0830               	movf	(atan@val+2)^(0+128),w
 18382  0968  0020               	movlb	0	; select bank0
 18383  0969  00A2               	movwf	___ftneg@f1+2
 18384  096A  3198  2003         	fcall	___ftneg
 18385  096C  0020               	movlb	0	; select bank0
 18386  096D  0820               	movf	?___ftneg,w
 18387  096E  0021               	movlb	1	; select bank1
 18388  096F  00A0               	movwf	?_atan^(0+128)
 18389  0970  0020               	movlb	0	; select bank0
 18390  0971  0821               	movf	?___ftneg+1,w
 18391  0972  0021               	movlb	1	; select bank1
 18392  0973  00A1               	movwf	(?_atan+1)^(0+128)
 18393  0974  0020               	movlb	0	; select bank0
 18394  0975  0822               	movf	?___ftneg+2,w
 18395  0976  0021               	movlb	1	; select bank1
 18396  0977  00A2               	movwf	(?_atan+2)^(0+128)
 18397  0978  0008               	return
 18398  0979                     __end_of_atan:	
 18399                           
 18400                           	psect	text35
 18401  2D72                     __ptext35:	
 18402 ;; *************** function _fabs *****************
 18403 ;; Defined at:
 18404 ;;		line 4 in file "/opt/microchip/xc8/v1.35/sources/common/fabs.c"
 18405 ;; Parameters:    Size  Location     Type
 18406 ;;  d               3    9[BANK0 ] unsigned char 
 18407 ;; Auto vars:     Size  Location     Type
 18408 ;;		None
 18409 ;; Return value:  Size  Location     Type
 18410 ;;                  3    9[BANK0 ] unsigned char 
 18411 ;; Registers used:
 18412 ;;		wreg, status,2, status,0, pclath, cstack
 18413 ;; Tracked objects:
 18414 ;;		On entry : 0/0
 18415 ;;		On exit  : 0/0
 18416 ;;		Unchanged: 0/0
 18417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18418 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18421 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18422 ;;Total ram usage:        3 bytes
 18423 ;; Hardware stack levels used:    1
 18424 ;; Hardware stack levels required when called:    6
 18425 ;; This function calls:
 18426 ;;		___ftge
 18427 ;;		___ftneg
 18428 ;; This function is called by:
 18429 ;;		_asin
 18430 ;;		_atan
 18431 ;;		_atan2
 18432 ;; This function uses a non-reentrant model
 18433 ;;
 18434                           
 18435                           
 18436                           ;psect for function _fabs
 18437  2D72                     _fabs:	
 18438                           
 18439                           ;incstack = 0
 18440                           ; Regs used in _fabs: [wreg+status,2+status,0+pclath+cstack]
 18441  2D72  0020               	movlb	0	; select bank0
 18442  2D73  0829               	movf	fabs@d,w
 18443  2D74  00A0               	movwf	___ftge@ff1
 18444  2D75  082A               	movf	fabs@d+1,w
 18445  2D76  00A1               	movwf	___ftge@ff1+1
 18446  2D77  082B               	movf	fabs@d+2,w
 18447  2D78  00A2               	movwf	___ftge@ff1+2
 18448  2D79  3000               	movlw	0
 18449  2D7A  00A3               	movwf	___ftge@ff2
 18450  2D7B  3000               	movlw	0
 18451  2D7C  00A4               	movwf	___ftge@ff2+1
 18452  2D7D  3000               	movlw	0
 18453  2D7E  00A5               	movwf	___ftge@ff2+2
 18454  2D7F  31AF  27C4  31AD   	fcall	___ftge
 18455  2D82  1803               	btfsc	3,0
 18456  2D83  0008               	return
 18457  2D84  0020               	movlb	0	; select bank0
 18458  2D85  0829               	movf	fabs@d,w
 18459  2D86  00A0               	movwf	___ftneg@f1
 18460  2D87  082A               	movf	fabs@d+1,w
 18461  2D88  00A1               	movwf	___ftneg@f1+1
 18462  2D89  082B               	movf	fabs@d+2,w
 18463  2D8A  00A2               	movwf	___ftneg@f1+2
 18464  2D8B  3198  2003         	fcall	___ftneg
 18465  2D8D  0020               	movlb	0	; select bank0
 18466  2D8E  0820               	movf	?___ftneg,w
 18467  2D8F  00A9               	movwf	?_fabs
 18468  2D90  0821               	movf	?___ftneg+1,w
 18469  2D91  00AA               	movwf	?_fabs+1
 18470  2D92  0822               	movf	?___ftneg+2,w
 18471  2D93  00AB               	movwf	?_fabs+2
 18472  2D94  0008               	return
 18473  2D95                     __end_of_fabs:	
 18474                           
 18475                           	psect	text36
 18476  22F9                     __ptext36:	
 18477 ;; *************** function _eval_poly *****************
 18478 ;; Defined at:
 18479 ;;		line 4 in file "/opt/microchip/xc8/v1.35/sources/common/evalpoly.c"
 18480 ;; Parameters:    Size  Location     Type
 18481 ;;  x               3   70[BANK0 ] unsigned char 
 18482 ;;  d               2   73[BANK0 ] PTR const 
 18483 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), atan@coeff_a(18), atan@coeff_b(15), 
 18484 ;;  n               2   75[BANK0 ] int 
 18485 ;; Auto vars:     Size  Location     Type
 18486 ;;  res             3   77[BANK0 ] int 
 18487 ;; Return value:  Size  Location     Type
 18488 ;;                  3   70[BANK0 ] int 
 18489 ;; Registers used:
 18490 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18491 ;; Tracked objects:
 18492 ;;		On entry : 0/0
 18493 ;;		On exit  : 0/0
 18494 ;;		Unchanged: 0/0
 18495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18496 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18497 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18499 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18500 ;;Total ram usage:       10 bytes
 18501 ;; Hardware stack levels used:    1
 18502 ;; Hardware stack levels required when called:    7
 18503 ;; This function calls:
 18504 ;;		___ftadd
 18505 ;;		___ftmul
 18506 ;;		___wmul
 18507 ;; This function is called by:
 18508 ;;		_atan
 18509 ;;		_sin
 18510 ;; This function uses a non-reentrant model
 18511 ;;
 18512                           
 18513                           
 18514                           ;psect for function _eval_poly
 18515  22F9                     _eval_poly:	
 18516                           
 18517                           ;incstack = 0
 18518                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18519  22F9  0020               	movlb	0	; select bank0
 18520  22FA  086C               	movf	eval_poly@n+1,w
 18521  22FB  00B1               	movwf	___wmul@multiplier+1
 18522  22FC  086B               	movf	eval_poly@n,w
 18523  22FD  00B0               	movwf	___wmul@multiplier
 18524  22FE  3003               	movlw	3
 18525  22FF  00B2               	movwf	___wmul@multiplicand
 18526  2300  3000               	movlw	0
 18527  2301  00B3               	movwf	___wmul@multiplicand+1
 18528  2302  31AC  24B9  31A2   	fcall	___wmul
 18529  2305  0020               	movlb	0	; select bank0
 18530  2306  0869               	movf	eval_poly@d,w
 18531  2307  0730               	addwf	?___wmul,w
 18532  2308  0084               	movwf	4
 18533  2309  086A               	movf	eval_poly@d+1,w
 18534  230A  3D31               	addwfc	?___wmul+1,w
 18535  230B  0085               	movwf	5
 18536  230C  3F00               	moviw [0]fsr0
 18537  230D  00ED               	movwf	eval_poly@res
 18538  230E  3F01               	moviw [1]fsr0
 18539  230F  00EE               	movwf	eval_poly@res+1
 18540  2310  3F02               	moviw [2]fsr0
 18541  2311                     L10:	
 18542  2311  00EF               	movwf	eval_poly@res+2
 18543  2312  086B               	movf	eval_poly@n,w
 18544  2313  046C               	iorwf	eval_poly@n+1,w
 18545  2314  1903               	btfsc	3,2
 18546  2315  2B52               	goto	l5702
 18547  2316  30FF               	movlw	255
 18548  2317  07EB               	addwf	eval_poly@n,f
 18549  2318  30FF               	movlw	255
 18550  2319  3DEC               	addwfc	eval_poly@n+1,f
 18551  231A  086C               	movf	eval_poly@n+1,w
 18552  231B  00B1               	movwf	___wmul@multiplier+1
 18553  231C  086B               	movf	eval_poly@n,w
 18554  231D  00B0               	movwf	___wmul@multiplier
 18555  231E  3003               	movlw	3
 18556  231F  00B2               	movwf	___wmul@multiplicand
 18557  2320  3000               	movlw	0
 18558  2321  00B3               	movwf	___wmul@multiplicand+1
 18559  2322  31AC  24B9  31A2   	fcall	___wmul
 18560  2325  0020               	movlb	0	; select bank0
 18561  2326  0869               	movf	eval_poly@d,w
 18562  2327  0730               	addwf	?___wmul,w
 18563  2328  0084               	movwf	4
 18564  2329  086A               	movf	eval_poly@d+1,w
 18565  232A  3D31               	addwfc	?___wmul+1,w
 18566  232B  0085               	movwf	5
 18567  232C  3F00               	moviw [0]fsr0
 18568  232D  00D9               	movwf	___ftadd@f1
 18569  232E  3F01               	moviw [1]fsr0
 18570  232F  00DA               	movwf	___ftadd@f1+1
 18571  2330  3F02               	moviw [2]fsr0
 18572  2331  00DB               	movwf	___ftadd@f1+2
 18573  2332  086D               	movf	eval_poly@res,w
 18574  2333  00B6               	movwf	___ftmul@f1
 18575  2334  086E               	movf	eval_poly@res+1,w
 18576  2335  00B7               	movwf	___ftmul@f1+1
 18577  2336  086F               	movf	eval_poly@res+2,w
 18578  2337  00B8               	movwf	___ftmul@f1+2
 18579  2338  0866               	movf	eval_poly@x,w
 18580  2339  00B9               	movwf	___ftmul@f2
 18581  233A  0867               	movf	eval_poly@x+1,w
 18582  233B  00BA               	movwf	___ftmul@f2+1
 18583  233C  0868               	movf	eval_poly@x+2,w
 18584  233D  00BB               	movwf	___ftmul@f2+2
 18585  233E  31A7  274C  31A2   	fcall	___ftmul
 18586  2341  0020               	movlb	0	; select bank0
 18587  2342  0836               	movf	?___ftmul,w
 18588  2343  00DC               	movwf	___ftadd@f2
 18589  2344  0837               	movf	?___ftmul+1,w
 18590  2345  00DD               	movwf	___ftadd@f2+1
 18591  2346  0838               	movf	?___ftmul+2,w
 18592  2347  00DE               	movwf	___ftadd@f2+2
 18593  2348  3198  20C2  31A2   	fcall	___ftadd
 18594  234B  0020               	movlb	0	; select bank0
 18595  234C  0859               	movf	?___ftadd,w
 18596  234D  00ED               	movwf	eval_poly@res
 18597  234E  085A               	movf	?___ftadd+1,w
 18598  234F  00EE               	movwf	eval_poly@res+1
 18599  2350  085B               	movf	?___ftadd+2,w
 18600  2351  2B11               	goto	L10
 18601  2352                     l5702:	
 18602  2352  086D               	movf	eval_poly@res,w
 18603  2353  00E6               	movwf	?_eval_poly
 18604  2354  086E               	movf	eval_poly@res+1,w
 18605  2355  00E7               	movwf	?_eval_poly+1
 18606  2356  086F               	movf	eval_poly@res+2,w
 18607  2357  00E8               	movwf	?_eval_poly+2
 18608  2358  0008               	return
 18609  2359                     __end_of_eval_poly:	
 18610                           
 18611                           	psect	text37
 18612  2CB9                     __ptext37:	
 18613 ;; *************** function ___wmul *****************
 18614 ;; Defined at:
 18615 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/Umul16.c"
 18616 ;; Parameters:    Size  Location     Type
 18617 ;;  multiplier      2   16[BANK0 ] unsigned int 
 18618 ;;  multiplicand    2   18[BANK0 ] unsigned int 
 18619 ;; Auto vars:     Size  Location     Type
 18620 ;;  product         2   20[BANK0 ] unsigned int 
 18621 ;; Return value:  Size  Location     Type
 18622 ;;                  2   16[BANK0 ] unsigned int 
 18623 ;; Registers used:
 18624 ;;		wreg, status,2, status,0
 18625 ;; Tracked objects:
 18626 ;;		On entry : 0/0
 18627 ;;		On exit  : 0/0
 18628 ;;		Unchanged: 0/0
 18629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18630 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18631 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18633 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18634 ;;Total ram usage:        6 bytes
 18635 ;; Hardware stack levels used:    1
 18636 ;; Hardware stack levels required when called:    5
 18637 ;; This function calls:
 18638 ;;		Nothing
 18639 ;; This function is called by:
 18640 ;;		_fround
 18641 ;;		_scale
 18642 ;;		_sprintf
 18643 ;;		_eval_poly
 18644 ;; This function uses a non-reentrant model
 18645 ;;
 18646                           
 18647                           
 18648                           ;psect for function ___wmul
 18649  2CB9                     ___wmul:	
 18650                           
 18651                           ;incstack = 0
 18652                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 18653  2CB9  0020               	movlb	0	; select bank0
 18654  2CBA  01B4               	clrf	___wmul@product
 18655  2CBB  01B5               	clrf	___wmul@product+1
 18656  2CBC                     l5534:	
 18657  2CBC  1C30               	btfss	___wmul@multiplier,0
 18658  2CBD  2CC2               	goto	l817
 18659  2CBE  0832               	movf	___wmul@multiplicand,w
 18660  2CBF  07B4               	addwf	___wmul@product,f
 18661  2CC0  0833               	movf	___wmul@multiplicand+1,w
 18662  2CC1  3DB5               	addwfc	___wmul@product+1,f
 18663  2CC2                     l817:	
 18664  2CC2  3001               	movlw	1
 18665  2CC3                     u6575:	
 18666  2CC3  35B2               	lslf	___wmul@multiplicand,f
 18667  2CC4  0DB3               	rlf	___wmul@multiplicand+1,f
 18668  2CC5  0B89               	decfsz	9,f
 18669  2CC6  2CC3               	goto	u6575
 18670  2CC7  3001               	movlw	1
 18671  2CC8                     u6585:	
 18672  2CC8  36B1               	lsrf	___wmul@multiplier+1,f
 18673  2CC9  0CB0               	rrf	___wmul@multiplier,f
 18674  2CCA  0B89               	decfsz	9,f
 18675  2CCB  2CC8               	goto	u6585
 18676  2CCC  0830               	movf	___wmul@multiplier,w
 18677  2CCD  0431               	iorwf	___wmul@multiplier+1,w
 18678  2CCE  1D03               	btfss	3,2
 18679  2CCF  2CBC               	goto	l5534
 18680  2CD0  0835               	movf	___wmul@product+1,w
 18681  2CD1  00B1               	movwf	?___wmul+1
 18682  2CD2  0834               	movf	___wmul@product,w
 18683  2CD3  00B0               	movwf	?___wmul
 18684  2CD4  0008               	return
 18685  2CD5                     __end_of___wmul:	
 18686                           
 18687                           	psect	text38
 18688  18C2                     __ptext38:	
 18689 ;; *************** function ___ftadd *****************
 18690 ;; Defined at:
 18691 ;;		line 86 in file "/opt/microchip/xc8/v1.35/sources/common/ftadd.c"
 18692 ;; Parameters:    Size  Location     Type
 18693 ;;  f1              3   57[BANK0 ] float 
 18694 ;;  f2              3   60[BANK0 ] float 
 18695 ;; Auto vars:     Size  Location     Type
 18696 ;;  exp1            1   69[BANK0 ] unsigned char 
 18697 ;;  exp2            1   68[BANK0 ] unsigned char 
 18698 ;;  sign            1   67[BANK0 ] unsigned char 
 18699 ;; Return value:  Size  Location     Type
 18700 ;;                  3   57[BANK0 ] float 
 18701 ;; Registers used:
 18702 ;;		wreg, status,2, status,0, pclath, cstack
 18703 ;; Tracked objects:
 18704 ;;		On entry : 0/0
 18705 ;;		On exit  : 0/0
 18706 ;;		Unchanged: 0/0
 18707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 18708 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18709 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18710 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18711 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 18712 ;;Total ram usage:       13 bytes
 18713 ;; Hardware stack levels used:    1
 18714 ;; Hardware stack levels required when called:    6
 18715 ;; This function calls:
 18716 ;;		___ftpack
 18717 ;; This function is called by:
 18718 ;;		_distance
 18719 ;;		_heading
 18720 ;;		_sprintf
 18721 ;;		_acos
 18722 ;;		_asin
 18723 ;;		_atan
 18724 ;;		_atan2
 18725 ;;		_cos
 18726 ;;		_eval_poly
 18727 ;;		_fmod
 18728 ;;		___ftsub
 18729 ;;		_sin
 18730 ;;		_floor
 18731 ;; This function uses a non-reentrant model
 18732 ;;
 18733                           
 18734                           
 18735                           ;psect for function ___ftadd
 18736  18C2                     ___ftadd:	
 18737                           
 18738                           ;incstack = 0
 18739                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 18740  18C2  0020               	movlb	0	; select bank0
 18741  18C3  0859               	movf	___ftadd@f1,w
 18742  18C4  00DF               	movwf	??___ftadd
 18743  18C5  085A               	movf	___ftadd@f1+1,w
 18744  18C6  00E0               	movwf	??___ftadd+1
 18745  18C7  085B               	movf	___ftadd@f1+2,w
 18746  18C8  00E1               	movwf	??___ftadd+2
 18747  18C9  1003               	clrc
 18748  18CA  0D60               	rlf	??___ftadd+1,w
 18749  18CB  0D61               	rlf	??___ftadd+2,w
 18750  18CC  00E2               	movwf	??___ftadd+3
 18751  18CD  0862               	movf	??___ftadd+3,w
 18752  18CE  00E5               	movwf	___ftadd@exp1
 18753  18CF  085C               	movf	___ftadd@f2,w
 18754  18D0  00DF               	movwf	??___ftadd
 18755  18D1  085D               	movf	___ftadd@f2+1,w
 18756  18D2  00E0               	movwf	??___ftadd+1
 18757  18D3  085E               	movf	___ftadd@f2+2,w
 18758  18D4  00E1               	movwf	??___ftadd+2
 18759  18D5  1003               	clrc
 18760  18D6  0D60               	rlf	??___ftadd+1,w
 18761  18D7  0D61               	rlf	??___ftadd+2,w
 18762  18D8  00E2               	movwf	??___ftadd+3
 18763  18D9  0862               	movf	??___ftadd+3,w
 18764  18DA  00E4               	movwf	___ftadd@exp2
 18765  18DB  0865               	movf	___ftadd@exp1,w
 18766  18DC  1903               	btfsc	3,2
 18767  18DD  28EA               	goto	l5552
 18768  18DE  0864               	movf	___ftadd@exp2,w
 18769  18DF  0265               	subwf	___ftadd@exp1,w
 18770  18E0  1803               	skipnc
 18771  18E1  28F1               	goto	l5556
 18772  18E2  0365               	decf	___ftadd@exp1,w
 18773  18E3  3AFF               	xorlw	255
 18774  18E4  0764               	addwf	___ftadd@exp2,w
 18775  18E5  00DF               	movwf	??___ftadd
 18776  18E6  3019               	movlw	25
 18777  18E7  025F               	subwf	??___ftadd,w
 18778  18E8  1C03               	skipc
 18779  18E9  28F1               	goto	l5556
 18780  18EA                     l5552:	
 18781  18EA  085C               	movf	___ftadd@f2,w
 18782  18EB  00D9               	movwf	?___ftadd
 18783  18EC  085D               	movf	___ftadd@f2+1,w
 18784  18ED  00DA               	movwf	?___ftadd+1
 18785  18EE  085E               	movf	___ftadd@f2+2,w
 18786  18EF  00DB               	movwf	?___ftadd+2
 18787  18F0  0008               	return
 18788  18F1                     l5556:	
 18789  18F1  0864               	movf	___ftadd@exp2,w
 18790  18F2  1903               	btfsc	3,2
 18791  18F3  0008               	return
 18792  18F4  0865               	movf	___ftadd@exp1,w
 18793  18F5  0264               	subwf	___ftadd@exp2,w
 18794  18F6  1803               	skipnc
 18795  18F7  2900               	goto	l5562
 18796  18F8  0364               	decf	___ftadd@exp2,w
 18797  18F9  3AFF               	xorlw	255
 18798  18FA  0765               	addwf	___ftadd@exp1,w
 18799  18FB  00DF               	movwf	??___ftadd
 18800  18FC  3019               	movlw	25
 18801  18FD  025F               	subwf	??___ftadd,w
 18802  18FE  1803               	btfsc	3,0
 18803  18FF  0008               	return
 18804  1900                     l5562:	
 18805  1900  3006               	movlw	6
 18806  1901  00DF               	movwf	??___ftadd
 18807  1902  085F               	movf	??___ftadd,w
 18808  1903  00E3               	movwf	___ftadd@sign
 18809  1904  1BDB               	btfsc	___ftadd@f1+2,7
 18810  1905  17E3               	bsf	___ftadd@sign,7
 18811  1906  1BDE               	btfsc	___ftadd@f2+2,7
 18812  1907  1763               	bsf	___ftadd@sign,6
 18813  1908  17DA               	bsf	___ftadd@f1+1,7
 18814  1909  30FF               	movlw	255
 18815  190A  05D9               	andwf	___ftadd@f1,f
 18816  190B  30FF               	movlw	255
 18817  190C  05DA               	andwf	___ftadd@f1+1,f
 18818  190D  3000               	movlw	0
 18819  190E  05DB               	andwf	___ftadd@f1+2,f
 18820  190F  17DD               	bsf	___ftadd@f2+1,7
 18821  1910  30FF               	movlw	255
 18822  1911  05DC               	andwf	___ftadd@f2,f
 18823  1912  30FF               	movlw	255
 18824  1913  05DD               	andwf	___ftadd@f2+1,f
 18825  1914  3000               	movlw	0
 18826  1915  05DE               	andwf	___ftadd@f2+2,f
 18827  1916  0864               	movf	___ftadd@exp2,w
 18828  1917  0265               	subwf	___ftadd@exp1,w
 18829  1918  1803               	skipnc
 18830  1919  293C               	goto	l5584
 18831  191A                     l5574:	
 18832  191A  3001               	movlw	1
 18833  191B                     u6695:	
 18834  191B  35DC               	lslf	___ftadd@f2,f
 18835  191C  0DDD               	rlf	___ftadd@f2+1,f
 18836  191D  0DDE               	rlf	___ftadd@f2+2,f
 18837  191E  0B89               	decfsz	9,f
 18838  191F  291B               	goto	u6695
 18839  1920  3001               	movlw	1
 18840  1921  02E4               	subwf	___ftadd@exp2,f
 18841  1922  0864               	movf	___ftadd@exp2,w
 18842  1923  0665               	xorwf	___ftadd@exp1,w
 18843  1924  1903               	skipnz
 18844  1925  2937               	goto	l5582
 18845  1926  3001               	movlw	1
 18846  1927  02E3               	subwf	___ftadd@sign,f
 18847  1928  0863               	movf	___ftadd@sign,w
 18848  1929  3907               	andlw	7
 18849  192A  1903               	btfsc	3,2
 18850  192B  2937               	goto	l5582
 18851  192C  291A               	goto	l5574
 18852  192D                     l5580:	
 18853  192D  3001               	movlw	1
 18854  192E                     u6725:	
 18855  192E  36DB               	lsrf	___ftadd@f1+2,f
 18856  192F  0CDA               	rrf	___ftadd@f1+1,f
 18857  1930  0CD9               	rrf	___ftadd@f1,f
 18858  1931  0B89               	decfsz	9,f
 18859  1932  292E               	goto	u6725
 18860  1933  3001               	movlw	1
 18861  1934  00DF               	movwf	??___ftadd
 18862  1935  085F               	movf	??___ftadd,w
 18863  1936  07E5               	addwf	___ftadd@exp1,f
 18864  1937                     l5582:	
 18865  1937  0865               	movf	___ftadd@exp1,w
 18866  1938  0664               	xorwf	___ftadd@exp2,w
 18867  1939  1903               	btfsc	3,2
 18868  193A  2961               	goto	l1197
 18869  193B  292D               	goto	l5580
 18870  193C                     l5584:	
 18871  193C  0865               	movf	___ftadd@exp1,w
 18872  193D  0264               	subwf	___ftadd@exp2,w
 18873  193E  1803               	skipnc
 18874  193F  2961               	goto	l1197
 18875  1940                     l5586:	
 18876  1940  3001               	movlw	1
 18877  1941                     u6755:	
 18878  1941  35D9               	lslf	___ftadd@f1,f
 18879  1942  0DDA               	rlf	___ftadd@f1+1,f
 18880  1943  0DDB               	rlf	___ftadd@f1+2,f
 18881  1944  0B89               	decfsz	9,f
 18882  1945  2941               	goto	u6755
 18883  1946  3001               	movlw	1
 18884  1947  02E5               	subwf	___ftadd@exp1,f
 18885  1948  0864               	movf	___ftadd@exp2,w
 18886  1949  0665               	xorwf	___ftadd@exp1,w
 18887  194A  1903               	skipnz
 18888  194B  295D               	goto	l5594
 18889  194C  3001               	movlw	1
 18890  194D  02E3               	subwf	___ftadd@sign,f
 18891  194E  0863               	movf	___ftadd@sign,w
 18892  194F  3907               	andlw	7
 18893  1950  1903               	btfsc	3,2
 18894  1951  295D               	goto	l5594
 18895  1952  2940               	goto	l5586
 18896  1953                     l5592:	
 18897  1953  3001               	movlw	1
 18898  1954                     u6785:	
 18899  1954  36DE               	lsrf	___ftadd@f2+2,f
 18900  1955  0CDD               	rrf	___ftadd@f2+1,f
 18901  1956  0CDC               	rrf	___ftadd@f2,f
 18902  1957  0B89               	decfsz	9,f
 18903  1958  2954               	goto	u6785
 18904  1959  3001               	movlw	1
 18905  195A  00DF               	movwf	??___ftadd
 18906  195B  085F               	movf	??___ftadd,w
 18907  195C  07E4               	addwf	___ftadd@exp2,f
 18908  195D                     l5594:	
 18909  195D  0865               	movf	___ftadd@exp1,w
 18910  195E  0664               	xorwf	___ftadd@exp2,w
 18911  195F  1D03               	skipz
 18912  1960  2953               	goto	l5592
 18913  1961                     l1197:	
 18914  1961  1FE3               	btfss	___ftadd@sign,7
 18915  1962  2973               	goto	l5598
 18916  1963  30FF               	movlw	255
 18917  1964  06D9               	xorwf	___ftadd@f1,f
 18918  1965  30FF               	movlw	255
 18919  1966  06DA               	xorwf	___ftadd@f1+1,f
 18920  1967  30FF               	movlw	255
 18921  1968  06DB               	xorwf	___ftadd@f1+2,f
 18922  1969  3001               	movlw	1
 18923  196A  07D9               	addwf	___ftadd@f1,f
 18924  196B  3000               	movlw	0
 18925  196C  1803               	skipnc
 18926  196D  3001               	movlw	1
 18927  196E  07DA               	addwf	___ftadd@f1+1,f
 18928  196F  3000               	movlw	0
 18929  1970  1803               	skipnc
 18930  1971  3001               	movlw	1
 18931  1972  07DB               	addwf	___ftadd@f1+2,f
 18932  1973                     l5598:	
 18933  1973  1F63               	btfss	___ftadd@sign,6
 18934  1974  2985               	goto	l5602
 18935  1975  30FF               	movlw	255
 18936  1976  06DC               	xorwf	___ftadd@f2,f
 18937  1977  30FF               	movlw	255
 18938  1978  06DD               	xorwf	___ftadd@f2+1,f
 18939  1979  30FF               	movlw	255
 18940  197A  06DE               	xorwf	___ftadd@f2+2,f
 18941  197B  3001               	movlw	1
 18942  197C  07DC               	addwf	___ftadd@f2,f
 18943  197D  3000               	movlw	0
 18944  197E  1803               	skipnc
 18945  197F  3001               	movlw	1
 18946  1980  07DD               	addwf	___ftadd@f2+1,f
 18947  1981  3000               	movlw	0
 18948  1982  1803               	skipnc
 18949  1983  3001               	movlw	1
 18950  1984  07DE               	addwf	___ftadd@f2+2,f
 18951  1985                     l5602:	
 18952  1985  01E3               	clrf	___ftadd@sign
 18953  1986  0859               	movf	___ftadd@f1,w
 18954  1987  07DC               	addwf	___ftadd@f2,f
 18955  1988  085A               	movf	___ftadd@f1+1,w
 18956  1989  3DDD               	addwfc	___ftadd@f2+1,f
 18957  198A  085B               	movf	___ftadd@f1+2,w
 18958  198B  3DDE               	addwfc	___ftadd@f2+2,f
 18959  198C  1FDE               	btfss	___ftadd@f2+2,7
 18960  198D  29A0               	goto	l5612
 18961  198E  30FF               	movlw	255
 18962  198F  06DC               	xorwf	___ftadd@f2,f
 18963  1990  30FF               	movlw	255
 18964  1991  06DD               	xorwf	___ftadd@f2+1,f
 18965  1992  30FF               	movlw	255
 18966  1993  06DE               	xorwf	___ftadd@f2+2,f
 18967  1994  3001               	movlw	1
 18968  1995  07DC               	addwf	___ftadd@f2,f
 18969  1996  3000               	movlw	0
 18970  1997  1803               	skipnc
 18971  1998  3001               	movlw	1
 18972  1999  07DD               	addwf	___ftadd@f2+1,f
 18973  199A  3000               	movlw	0
 18974  199B  1803               	skipnc
 18975  199C  3001               	movlw	1
 18976  199D  07DE               	addwf	___ftadd@f2+2,f
 18977  199E  01E3               	clrf	___ftadd@sign
 18978  199F  0AE3               	incf	___ftadd@sign,f
 18979  19A0                     l5612:	
 18980  19A0  085C               	movf	___ftadd@f2,w
 18981  19A1  00A0               	movwf	___ftpack@arg
 18982  19A2  085D               	movf	___ftadd@f2+1,w
 18983  19A3  00A1               	movwf	___ftpack@arg+1
 18984  19A4  085E               	movf	___ftadd@f2+2,w
 18985  19A5  00A2               	movwf	___ftpack@arg+2
 18986  19A6  0865               	movf	___ftadd@exp1,w
 18987  19A7  00DF               	movwf	??___ftadd
 18988  19A8  085F               	movf	??___ftadd,w
 18989  19A9  00A3               	movwf	___ftpack@exp
 18990  19AA  0863               	movf	___ftadd@sign,w
 18991  19AB  00E0               	movwf	??___ftadd+1
 18992  19AC  0860               	movf	??___ftadd+1,w
 18993  19AD  00A4               	movwf	___ftpack@sign
 18994  19AE  31A3  23B9         	fcall	___ftpack
 18995  19B0  0020               	movlb	0	; select bank0
 18996  19B1  0820               	movf	?___ftpack,w
 18997  19B2  00D9               	movwf	?___ftadd
 18998  19B3  0821               	movf	?___ftpack+1,w
 18999  19B4  00DA               	movwf	?___ftadd+1
 19000  19B5  0822               	movf	?___ftpack+2,w
 19001  19B6  00DB               	movwf	?___ftadd+2
 19002  19B7  0008               	return
 19003  19B8                     __end_of___ftadd:	
 19004                           
 19005                           	psect	text39
 19006  2B7D                     __ptext39:	
 19007 ;; *************** function _atof *****************
 19008 ;; Defined at:
 19009 ;;		line 200 in file "/opt/microchip/xc8/v1.35/sources/common/atof.c"
 19010 ;; Parameters:    Size  Location     Type
 19011 ;;  s               2   76[BANK0 ] PTR const unsigned char 
 19012 ;;		 -> line(100), 
 19013 ;; Auto vars:     Size  Location     Type
 19014 ;;		None
 19015 ;; Return value:  Size  Location     Type
 19016 ;;                  3   76[BANK0 ] PTR const unsigned char 
 19017 ;; Registers used:
 19018 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19019 ;; Tracked objects:
 19020 ;;		On entry : 0/0
 19021 ;;		On exit  : 0/0
 19022 ;;		Unchanged: 0/0
 19023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19024 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19027 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19028 ;;Total ram usage:        3 bytes
 19029 ;; Hardware stack levels used:    1
 19030 ;; Hardware stack levels required when called:    8
 19031 ;; This function calls:
 19032 ;;		_strtod
 19033 ;; This function is called by:
 19034 ;;		_main
 19035 ;; This function uses a non-reentrant model
 19036 ;;
 19037                           
 19038                           
 19039                           ;psect for function _atof
 19040  2B7D                     _atof:	
 19041                           
 19042                           ;incstack = 0
 19043                           ; Regs used in _atof: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19044  2B7D  0020               	movlb	0	; select bank0
 19045  2B7E  086D               	movf	atof@s+1,w
 19046  2B7F  00E6               	movwf	strtod@s+1
 19047  2B80  086C               	movf	atof@s,w
 19048  2B81  00E5               	movwf	strtod@s
 19049  2B82  01E7               	clrf	strtod@res
 19050  2B83  3189  2179         	fcall	_strtod
 19051  2B85  0020               	movlb	0	; select bank0
 19052  2B86  0865               	movf	?_strtod,w
 19053  2B87  00EC               	movwf	?_atof
 19054  2B88  0866               	movf	?_strtod+1,w
 19055  2B89  00ED               	movwf	?_atof+1
 19056  2B8A  0867               	movf	?_strtod+2,w
 19057  2B8B  00EE               	movwf	?_atof+2
 19058  2B8C  0008               	return
 19059  2B8D                     __end_of_atof:	
 19060                           
 19061                           	psect	text40
 19062  0979                     __ptext40:	
 19063 ;; *************** function _strtod *****************
 19064 ;; Defined at:
 19065 ;;		line 35 in file "/opt/microchip/xc8/v1.35/sources/common/atof.c"
 19066 ;; Parameters:    Size  Location     Type
 19067 ;;  s               2   69[BANK0 ] PTR const unsigned char 
 19068 ;;		 -> line(100), 
 19069 ;;  res             1   71[BANK0 ] PTR PTR const unsigned c
 19070 ;;		 -> NULL(0), 
 19071 ;; Auto vars:     Size  Location     Type
 19072 ;;  _u              4   17[BANK1 ] struct .
 19073 ;;  expon           1   16[BANK1 ] char 
 19074 ;;  flags           1   15[BANK1 ] unsigned char 
 19075 ;;  eexp            1   14[BANK1 ] char 
 19076 ;; Return value:  Size  Location     Type
 19077 ;;                  3   69[BANK0 ] char 
 19078 ;; Registers used:
 19079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19080 ;; Tracked objects:
 19081 ;;		On entry : 0/0
 19082 ;;		On exit  : 0/0
 19083 ;;		Unchanged: 0/0
 19084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19085 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19086 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19087 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19088 ;;      Totals:         0       7      21       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19089 ;;Total ram usage:       28 bytes
 19090 ;; Hardware stack levels used:    1
 19091 ;; Hardware stack levels required when called:    7
 19092 ;; This function calls:
 19093 ;;		___altoft
 19094 ;;		___bmul
 19095 ;;		___ftdiv
 19096 ;;		___ftge
 19097 ;;		___ftmul
 19098 ;;		___ftneg
 19099 ;;		___lmul
 19100 ;;		_isdigit
 19101 ;;		_isspace
 19102 ;; This function is called by:
 19103 ;;		_atof
 19104 ;; This function uses a non-reentrant model
 19105 ;;
 19106                           
 19107                           
 19108                           ;psect for function _strtod
 19109  0979                     _strtod:	
 19110                           
 19111                           ;incstack = 0
 19112                           ; Regs used in _strtod: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19113  0979  0020               	movlb	0	; select bank0
 19114  097A  0867               	movf	strtod@res,w
 19115  097B  1903               	btfsc	3,2
 19116  097C  2984               	goto	l6478
 19117  097D  0867               	movf	strtod@res,w
 19118  097E  0086               	movwf	6
 19119  097F  0187               	clrf	7
 19120  0980  0865               	movf	strtod@s,w
 19121  0981  3FC0               	movwi [0]fsr1
 19122  0982  0866               	movf	strtod@s+1,w
 19123  0983  3FC1               	movwi [1]fsr1
 19124  0984                     l6478:	
 19125  0984  0865               	movf	strtod@s,w
 19126  0985  0086               	movwf	6
 19127  0986  0866               	movf	strtod@s+1,w
 19128  0987  0087               	movwf	7
 19129  0988  0801               	movf	1,w
 19130  0989  0021               	movlb	1	; select bank1
 19131  098A  00AE               	movwf	strtod@eexp^(0+128)
 19132  098B  31A1  2150  3189   	fcall	_isspace
 19133  098E  1C03               	btfss	3,0
 19134  098F  2996               	goto	l6480
 19135  0990  3001               	movlw	1
 19136  0991  0020               	movlb	0	; select bank0
 19137  0992  07E5               	addwf	strtod@s,f
 19138  0993  3000               	movlw	0
 19139  0994  3DE6               	addwfc	strtod@s+1,f
 19140  0995  2984               	goto	l6478
 19141  0996                     l6480:	
 19142  0996  0021               	movlb	1	; select bank1
 19143  0997  01AF               	clrf	strtod@flags^(0+128)
 19144  0998  302D               	movlw	45
 19145  0999  062E               	xorwf	strtod@eexp^(0+128),w
 19146  099A  1D03               	btfss	3,2
 19147  099B  299F               	goto	l6488
 19148  099C  01AF               	clrf	strtod@flags^(0+128)
 19149  099D  0AAF               	incf	strtod@flags^(0+128),f
 19150  099E  29A4               	goto	l6490
 19151  099F                     l6488:	
 19152  099F  302B               	movlw	43
 19153  09A0  0021               	movlb	1	; select bank1
 19154  09A1  062E               	xorwf	strtod@eexp^(0+128),w
 19155  09A2  1D03               	btfss	3,2
 19156  09A3  29A9               	goto	l6492
 19157  09A4                     l6490:	
 19158  09A4  3001               	movlw	1
 19159  09A5  0020               	movlb	0	; select bank0
 19160  09A6  07E5               	addwf	strtod@s,f
 19161  09A7  3000               	movlw	0
 19162  09A8  3DE6               	addwfc	strtod@s+1,f
 19163  09A9                     l6492:	
 19164  09A9  0021               	movlb	1	; select bank1
 19165  09AA  01AE               	clrf	strtod@eexp^(0+128)
 19166  09AB  3000               	movlw	0
 19167  09AC  00B4               	movwf	(strtod@_u+3)^(0+128)
 19168  09AD  3000               	movlw	0
 19169  09AE  00B3               	movwf	(strtod@_u+2)^(0+128)
 19170  09AF  3000               	movlw	0
 19171  09B0  00B2               	movwf	(strtod@_u+1)^(0+128)
 19172  09B1  3000               	movlw	0
 19173  09B2  00B1               	movwf	strtod@_u^(0+128)
 19174  09B3  01B0               	clrf	strtod@expon^(0+128)
 19175  09B4  29C5               	goto	l6496
 19176  09B5                     l6498:	
 19177  09B5  0020               	movlb	0	; select bank0
 19178  09B6  0865               	movf	strtod@s,w
 19179  09B7  0086               	movwf	6
 19180  09B8  0866               	movf	strtod@s+1,w
 19181  09B9  0087               	movwf	7
 19182  09BA  302E               	movlw	46
 19183  09BB  0601               	xorwf	1,w
 19184  09BC  1D03               	btfss	3,2
 19185  09BD  29C8               	goto	l6504
 19186  09BE  0021               	movlb	1	; select bank1
 19187  09BF  162F               	bsf	strtod@flags^(0+128),4
 19188  09C0                     L13:	
 19189  09C0  3001               	movlw	1
 19190  09C1  0020               	movlb	0	; select bank0
 19191  09C2  07E5               	addwf	strtod@s,f
 19192  09C3  3000               	movlw	0
 19193  09C4  3DE6               	addwfc	strtod@s+1,f
 19194  09C5                     l6496:	
 19195  09C5  0021               	movlb	1	; select bank1
 19196  09C6  1E2F               	btfss	strtod@flags^(0+128),4
 19197  09C7  29B5               	goto	l6498
 19198  09C8                     l6504:	
 19199  09C8  0020               	movlb	0	; select bank0
 19200  09C9  0865               	movf	strtod@s,w
 19201  09CA  0086               	movwf	6
 19202  09CB  0866               	movf	strtod@s+1,w
 19203  09CC  0087               	movwf	7
 19204  09CD  0801               	movf	1,w
 19205  09CE  31AB  235E  3189   	fcall	_isdigit
 19206  09D1  1C03               	btfss	3,0
 19207  09D2  2A51               	goto	l6526
 19208  09D3  0021               	movlb	1	; select bank1
 19209  09D4  14AF               	bsf	strtod@flags^(0+128),1
 19210  09D5  3005               	movlw	5
 19211  09D6  00AC               	movwf	_strtod$1391^(0+128)
 19212  09D7  3000               	movlw	0
 19213  09D8  00AD               	movwf	(_strtod$1391^(0+128)+1)
 19214  09D9  082E               	movf	strtod@eexp^(0+128),w
 19215  09DA  0020               	movlb	0	; select bank0
 19216  09DB  00E8               	movwf	??_strtod
 19217  09DC  01E9               	clrf	??_strtod+1
 19218  09DD  1BE8               	btfsc	??_strtod,7
 19219  09DE  03E9               	decf	??_strtod+1,f
 19220  09DF  0021               	movlb	1	; select bank1
 19221  09E0  082C               	movf	_strtod$1391^(0+128),w
 19222  09E1  3E03               	addlw	3
 19223  09E2  0020               	movlb	0	; select bank0
 19224  09E3  00EA               	movwf	??_strtod+2
 19225  09E4  3000               	movlw	0
 19226  09E5  0021               	movlb	1	; select bank1
 19227  09E6  3D2D               	addwfc	(_strtod$1391+1)^(0+128),w
 19228  09E7  0020               	movlb	0	; select bank0
 19229  09E8  00EB               	movwf	??_strtod+3
 19230  09E9  0869               	movf	??_strtod+1,w
 19231  09EA  066B               	xorwf	??_strtod+3,w
 19232  09EB  1D03               	skipz
 19233  09EC  29EF               	goto	u8175
 19234  09ED  0868               	movf	??_strtod,w
 19235  09EE  066A               	xorwf	??_strtod+2,w
 19236  09EF                     u8175:	
 19237  09EF  1903               	skipnz
 19238  09F0  2A47               	goto	l1008
 19239  09F1  0021               	movlb	1	; select bank1
 19240  09F2  1E2F               	btfss	strtod@flags^(0+128),4
 19241  09F3  29FA               	goto	l1013
 19242  09F4  30FF               	movlw	255
 19243  09F5  0020               	movlb	0	; select bank0
 19244  09F6  00E8               	movwf	??_strtod
 19245  09F7  0868               	movf	??_strtod,w
 19246  09F8  0021               	movlb	1	; select bank1
 19247  09F9  07B0               	addwf	strtod@expon^(0+128),f
 19248  09FA                     l1013:	
 19249  09FA  3001               	movlw	1
 19250  09FB  0020               	movlb	0	; select bank0
 19251  09FC  00E8               	movwf	??_strtod
 19252  09FD  0868               	movf	??_strtod,w
 19253  09FE  0021               	movlb	1	; select bank1
 19254  09FF  07AE               	addwf	strtod@eexp^(0+128),f
 19255  0A00  3000               	movlw	0
 19256  0A01  0020               	movlb	0	; select bank0
 19257  0A02  00A3               	movwf	___lmul@multiplier+3
 19258  0A03  3000               	movlw	0
 19259  0A04  00A2               	movwf	___lmul@multiplier+2
 19260  0A05  3000               	movlw	0
 19261  0A06  00A1               	movwf	___lmul@multiplier+1
 19262  0A07  300A               	movlw	10
 19263  0A08  00A0               	movwf	___lmul@multiplier
 19264  0A09  0021               	movlb	1	; select bank1
 19265  0A0A  0834               	movf	(strtod@_u+3)^(0+128),w
 19266  0A0B  0020               	movlb	0	; select bank0
 19267  0A0C  00A7               	movwf	___lmul@multiplicand+3
 19268  0A0D  0021               	movlb	1	; select bank1
 19269  0A0E  0833               	movf	(strtod@_u+2)^(0+128),w
 19270  0A0F  0020               	movlb	0	; select bank0
 19271  0A10  00A6               	movwf	___lmul@multiplicand+2
 19272  0A11  0021               	movlb	1	; select bank1
 19273  0A12  0832               	movf	(strtod@_u+1)^(0+128),w
 19274  0A13  0020               	movlb	0	; select bank0
 19275  0A14  00A5               	movwf	___lmul@multiplicand+1
 19276  0A15  0021               	movlb	1	; select bank1
 19277  0A16  0831               	movf	strtod@_u^(0+128),w
 19278  0A17  0020               	movlb	0	; select bank0
 19279  0A18  00A4               	movwf	___lmul@multiplicand
 19280  0A19  3187  27CF  3189   	fcall	___lmul
 19281  0A1C  0020               	movlb	0	; select bank0
 19282  0A1D  0823               	movf	?___lmul+3,w
 19283  0A1E  0021               	movlb	1	; select bank1
 19284  0A1F  00B4               	movwf	(strtod@_u+3)^(0+128)
 19285  0A20  0020               	movlb	0	; select bank0
 19286  0A21  0822               	movf	?___lmul+2,w
 19287  0A22  0021               	movlb	1	; select bank1
 19288  0A23  00B3               	movwf	(strtod@_u+2)^(0+128)
 19289  0A24  0020               	movlb	0	; select bank0
 19290  0A25  0821               	movf	?___lmul+1,w
 19291  0A26  0021               	movlb	1	; select bank1
 19292  0A27  00B2               	movwf	(strtod@_u+1)^(0+128)
 19293  0A28  0020               	movlb	0	; select bank0
 19294  0A29  0820               	movf	?___lmul,w
 19295  0A2A  0021               	movlb	1	; select bank1
 19296  0A2B  00B1               	movwf	strtod@_u^(0+128)
 19297  0A2C  0020               	movlb	0	; select bank0
 19298  0A2D  0865               	movf	strtod@s,w
 19299  0A2E  0086               	movwf	6
 19300  0A2F  0866               	movf	strtod@s+1,w
 19301  0A30  0087               	movwf	7
 19302  0A31  0801               	movf	1,w
 19303  0A32  3ED0               	addlw	208
 19304  0A33  00E8               	movwf	??_strtod
 19305  0A34  01E9               	clrf	??_strtod+1
 19306  0A35  01EA               	clrf	??_strtod+2
 19307  0A36  01EB               	clrf	??_strtod+3
 19308  0A37  0868               	movf	??_strtod,w
 19309  0A38  0021               	movlb	1	; select bank1
 19310  0A39  07B1               	addwf	strtod@_u^(0+128),f
 19311  0A3A  0020               	movlb	0	; select bank0
 19312  0A3B  0869               	movf	??_strtod+1,w
 19313  0A3C  0021               	movlb	1	; select bank1
 19314  0A3D  3DB2               	addwfc	(strtod@_u+1)^(0+128),f
 19315  0A3E  0020               	movlb	0	; select bank0
 19316  0A3F  086A               	movf	??_strtod+2,w
 19317  0A40  0021               	movlb	1	; select bank1
 19318  0A41  3DB3               	addwfc	(strtod@_u+2)^(0+128),f
 19319  0A42  0020               	movlb	0	; select bank0
 19320  0A43  086B               	movf	??_strtod+3,w
 19321  0A44  0021               	movlb	1	; select bank1
 19322  0A45  3DB4               	addwfc	(strtod@_u+3)^(0+128),f
 19323  0A46  29C0               	goto	L13
 19324  0A47                     l1008:	
 19325  0A47  0021               	movlb	1	; select bank1
 19326  0A48  1A2F               	btfsc	strtod@flags^(0+128),4
 19327  0A49  29C0               	goto	L13
 19328  0A4A  3001               	movlw	1
 19329  0A4B  0020               	movlb	0	; select bank0
 19330  0A4C  00E8               	movwf	??_strtod
 19331  0A4D  0868               	movf	??_strtod,w
 19332  0A4E  0021               	movlb	1	; select bank1
 19333  0A4F  07B0               	addwf	strtod@expon^(0+128),f
 19334  0A50  29C0               	goto	L13
 19335  0A51                     l6526:	
 19336  0A51  0021               	movlb	1	; select bank1
 19337  0A52  01AE               	clrf	strtod@eexp^(0+128)
 19338  0A53  0020               	movlb	0	; select bank0
 19339  0A54  0865               	movf	strtod@s,w
 19340  0A55  0086               	movwf	6
 19341  0A56  0866               	movf	strtod@s+1,w
 19342  0A57  0087               	movwf	7
 19343  0A58  3065               	movlw	101
 19344  0A59  0601               	xorwf	1,w
 19345  0A5A  1903               	btfsc	3,2
 19346  0A5B  2A64               	goto	l6532
 19347  0A5C  0865               	movf	strtod@s,w
 19348  0A5D  0086               	movwf	6
 19349  0A5E  0866               	movf	strtod@s+1,w
 19350  0A5F  0087               	movwf	7
 19351  0A60  3045               	movlw	69
 19352  0A61  0601               	xorwf	1,w
 19353  0A62  1D03               	btfss	3,2
 19354  0A63  2AEB               	goto	l6566
 19355  0A64                     l6532:	
 19356  0A64  3001               	movlw	1
 19357  0A65  07E5               	addwf	strtod@s,f
 19358  0A66  3000               	movlw	0
 19359  0A67  3DE6               	addwfc	strtod@s+1,f
 19360  0A68  0865               	movf	strtod@s,w
 19361  0A69  0086               	movwf	6
 19362  0A6A  0866               	movf	strtod@s+1,w
 19363  0A6B  0087               	movwf	7
 19364  0A6C  302D               	movlw	45
 19365  0A6D  0601               	xorwf	1,w
 19366  0A6E  1D03               	btfss	3,2
 19367  0A6F  2A75               	goto	l6538
 19368  0A70  0021               	movlb	1	; select bank1
 19369  0A71  15AF               	bsf	strtod@flags^(0+128),3
 19370  0A72  3001               	movlw	1
 19371  0A73  0020               	movlb	0	; select bank0
 19372  0A74  2A7E               	goto	L12
 19373  0A75                     l6538:	
 19374  0A75  0865               	movf	strtod@s,w
 19375  0A76  0086               	movwf	6
 19376  0A77  0866               	movf	strtod@s+1,w
 19377  0A78  0087               	movwf	7
 19378  0A79  302B               	movlw	43
 19379  0A7A  0601               	xorwf	1,w
 19380  0A7B  1D03               	btfss	3,2
 19381  0A7C  2A81               	goto	l6544
 19382  0A7D                     L14:	
 19383  0A7D  3001               	movlw	1
 19384  0A7E                     L12:	
 19385  0A7E  07E5               	addwf	strtod@s,f
 19386  0A7F  3000               	movlw	0
 19387  0A80  3DE6               	addwfc	strtod@s+1,f
 19388  0A81                     l6544:	
 19389  0A81  0865               	movf	strtod@s,w
 19390  0A82  0086               	movwf	6
 19391  0A83  0866               	movf	strtod@s+1,w
 19392  0A84  0087               	movwf	7
 19393  0A85  3030               	movlw	48
 19394  0A86  0601               	xorwf	1,w
 19395  0A87  1903               	btfsc	3,2
 19396  0A88  2A7D               	goto	L14
 19397  0A89  0865               	movf	strtod@s,w
 19398  0A8A  0086               	movwf	6
 19399  0A8B  0866               	movf	strtod@s+1,w
 19400  0A8C  0087               	movwf	7
 19401  0A8D  0801               	movf	1,w
 19402  0A8E  31AB  235E  3189   	fcall	_isdigit
 19403  0A91  1C03               	btfss	3,0
 19404  0A92  2AE6               	goto	l6562
 19405  0A93  0020               	movlb	0	; select bank0
 19406  0A94  0865               	movf	strtod@s,w
 19407  0A95  0086               	movwf	6
 19408  0A96  0866               	movf	strtod@s+1,w
 19409  0A97  0087               	movwf	7
 19410  0A98  0801               	movf	1,w
 19411  0A99  3ED0               	addlw	208
 19412  0A9A  00E8               	movwf	??_strtod
 19413  0A9B  0868               	movf	??_strtod,w
 19414  0A9C  0021               	movlb	1	; select bank1
 19415  0A9D  00AE               	movwf	strtod@eexp^(0+128)
 19416  0A9E  3001               	movlw	1
 19417  0A9F  0020               	movlb	0	; select bank0
 19418  0AA0  07E5               	addwf	strtod@s,f
 19419  0AA1  3000               	movlw	0
 19420  0AA2  3DE6               	addwfc	strtod@s+1,f
 19421  0AA3  0865               	movf	strtod@s,w
 19422  0AA4  0086               	movwf	6
 19423  0AA5  0866               	movf	strtod@s+1,w
 19424  0AA6  0087               	movwf	7
 19425  0AA7  0801               	movf	1,w
 19426  0AA8  31AB  235E  3189   	fcall	_isdigit
 19427  0AAB  1C03               	btfss	3,0
 19428  0AAC  2AE6               	goto	l6562
 19429  0AAD  0020               	movlb	0	; select bank0
 19430  0AAE  0865               	movf	strtod@s,w
 19431  0AAF  0086               	movwf	6
 19432  0AB0  0866               	movf	strtod@s+1,w
 19433  0AB1  0087               	movwf	7
 19434  0AB2  300A               	movlw	10
 19435  0AB3  00E8               	movwf	??_strtod
 19436  0AB4  0868               	movf	??_strtod,w
 19437  0AB5  00A0               	movwf	___bmul@multiplicand
 19438  0AB6  0021               	movlb	1	; select bank1
 19439  0AB7  082E               	movf	strtod@eexp^(0+128),w
 19440  0AB8  31AB  238D  3189   	fcall	___bmul
 19441  0ABB  0701               	addwf	1,w
 19442  0ABC  3ED0               	addlw	-48
 19443  0ABD  0020               	movlb	0	; select bank0
 19444  0ABE  00E9               	movwf	??_strtod+1
 19445  0ABF  0869               	movf	??_strtod+1,w
 19446  0AC0  0021               	movlb	1	; select bank1
 19447  0AC1  00AE               	movwf	strtod@eexp^(0+128)
 19448  0AC2  3001               	movlw	1
 19449  0AC3  0020               	movlb	0	; select bank0
 19450  0AC4  07E5               	addwf	strtod@s,f
 19451  0AC5  3000               	movlw	0
 19452  0AC6  3DE6               	addwfc	strtod@s+1,f
 19453  0AC7  0865               	movf	strtod@s,w
 19454  0AC8  0086               	movwf	6
 19455  0AC9  0866               	movf	strtod@s+1,w
 19456  0ACA  0087               	movwf	7
 19457  0ACB  0801               	movf	1,w
 19458  0ACC  31AB  235E  3189   	fcall	_isdigit
 19459  0ACF  1C03               	btfss	3,0
 19460  0AD0  2AE6               	goto	l6562
 19461  0AD1  0020               	movlb	0	; select bank0
 19462  0AD2  0865               	movf	strtod@s,w
 19463  0AD3  0086               	movwf	6
 19464  0AD4  0866               	movf	strtod@s+1,w
 19465  0AD5  0087               	movwf	7
 19466  0AD6  300A               	movlw	10
 19467  0AD7  00E8               	movwf	??_strtod
 19468  0AD8  0868               	movf	??_strtod,w
 19469  0AD9  00A0               	movwf	___bmul@multiplicand
 19470  0ADA  0021               	movlb	1	; select bank1
 19471  0ADB  082E               	movf	strtod@eexp^(0+128),w
 19472  0ADC  31AB  238D  3189   	fcall	___bmul
 19473  0ADF  0701               	addwf	1,w
 19474  0AE0  3ED0               	addlw	-48
 19475  0AE1  0020               	movlb	0	; select bank0
 19476  0AE2  00E9               	movwf	??_strtod+1
 19477  0AE3  0869               	movf	??_strtod+1,w
 19478  0AE4  0021               	movlb	1	; select bank1
 19479  0AE5  00AE               	movwf	strtod@eexp^(0+128)
 19480  0AE6                     l6562:	
 19481  0AE6  0021               	movlb	1	; select bank1
 19482  0AE7  1DAF               	btfss	strtod@flags^(0+128),3
 19483  0AE8  2AEB               	goto	l6566
 19484  0AE9  09AE               	comf	strtod@eexp^(0+128),f
 19485  0AEA  0AAE               	incf	strtod@eexp^(0+128),f
 19486  0AEB                     l6566:	
 19487  0AEB  0021               	movlb	1	; select bank1
 19488  0AEC  082E               	movf	strtod@eexp^(0+128),w
 19489  0AED  0020               	movlb	0	; select bank0
 19490  0AEE  00E8               	movwf	??_strtod
 19491  0AEF  0868               	movf	??_strtod,w
 19492  0AF0  0021               	movlb	1	; select bank1
 19493  0AF1  07B0               	addwf	strtod@expon^(0+128),f
 19494  0AF2  0020               	movlb	0	; select bank0
 19495  0AF3  0867               	movf	strtod@res,w
 19496  0AF4  1903               	btfsc	3,2
 19497  0AF5  2B01               	goto	l6574
 19498  0AF6  0021               	movlb	1	; select bank1
 19499  0AF7  1CAF               	btfss	strtod@flags^(0+128),1
 19500  0AF8  2B01               	goto	l6574
 19501  0AF9  0020               	movlb	0	; select bank0
 19502  0AFA  0867               	movf	strtod@res,w
 19503  0AFB  0086               	movwf	6
 19504  0AFC  0187               	clrf	7
 19505  0AFD  0865               	movf	strtod@s,w
 19506  0AFE  3FC0               	movwi [0]fsr1
 19507  0AFF  0866               	movf	strtod@s+1,w
 19508  0B00  3FC1               	movwi [1]fsr1
 19509  0B01                     l6574:	
 19510  0B01  0021               	movlb	1	; select bank1
 19511  0B02  0834               	movf	(strtod@_u+3)^(0+128),w
 19512  0B03  0020               	movlb	0	; select bank0
 19513  0B04  00E0               	movwf	___altoft@c+3
 19514  0B05  0021               	movlb	1	; select bank1
 19515  0B06  0833               	movf	(strtod@_u+2)^(0+128),w
 19516  0B07  0020               	movlb	0	; select bank0
 19517  0B08  00DF               	movwf	___altoft@c+2
 19518  0B09  0021               	movlb	1	; select bank1
 19519  0B0A  0832               	movf	(strtod@_u+1)^(0+128),w
 19520  0B0B  0020               	movlb	0	; select bank0
 19521  0B0C  00DE               	movwf	___altoft@c+1
 19522  0B0D  0021               	movlb	1	; select bank1
 19523  0B0E  0831               	movf	strtod@_u^(0+128),w
 19524  0B0F  0020               	movlb	0	; select bank0
 19525  0B10  00DD               	movwf	___altoft@c
 19526  0B11  31A1  2163  3189   	fcall	___altoft
 19527  0B14  0020               	movlb	0	; select bank0
 19528  0B15  085D               	movf	?___altoft,w
 19529  0B16  0021               	movlb	1	; select bank1
 19530  0B17  00B1               	movwf	strtod@_u^(0+128)
 19531  0B18  0020               	movlb	0	; select bank0
 19532  0B19  085E               	movf	?___altoft+1,w
 19533  0B1A  0021               	movlb	1	; select bank1
 19534  0B1B  00B2               	movwf	(strtod@_u+1)^(0+128)
 19535  0B1C  0020               	movlb	0	; select bank0
 19536  0B1D  085F               	movf	?___altoft+2,w
 19537  0B1E  0021               	movlb	1	; select bank1
 19538  0B1F  00B3               	movwf	(strtod@_u+2)^(0+128)
 19539  0B20  0833               	movf	(strtod@_u+2)^(0+128),w
 19540  0B21  0432               	iorwf	(strtod@_u+1)^(0+128),w
 19541  0B22  0431               	iorwf	strtod@_u^(0+128),w
 19542  0B23  1D03               	skipz
 19543  0B24  2B2D               	goto	l1030
 19544  0B25  3000               	movlw	0
 19545  0B26  0020               	movlb	0	; select bank0
 19546  0B27  00E5               	movwf	?_strtod
 19547  0B28  3000               	movlw	0
 19548  0B29  00E6               	movwf	?_strtod+1
 19549  0B2A  3000               	movlw	0
 19550  0B2B  00E7               	movwf	?_strtod+2
 19551  0B2C  0008               	return
 19552  0B2D                     l1030:	
 19553  0B2D  1FB0               	btfss	strtod@expon^(0+128),7
 19554  0B2E  2BD2               	goto	l6620
 19555  0B2F  09B0               	comf	strtod@expon^(0+128),f
 19556  0B30  0AB0               	incf	strtod@expon^(0+128),f
 19557  0B31                     l6588:	
 19558  0B31  0830               	movf	strtod@expon^(0+128),w
 19559  0B32  3A80               	xorlw	128
 19560  0B33  3E76               	addlw	-138
 19561  0B34  1C03               	btfss	3,0
 19562  0B35  2B87               	goto	l6594
 19563  0B36  3003               	movlw	3
 19564  0B37  0020               	movlb	0	; select bank0
 19565  0B38  00C6               	movwf	___ftdiv@f2
 19566  0B39  3015               	movlw	21
 19567  0B3A  00C7               	movwf	___ftdiv@f2+1
 19568  0B3B  3050               	movlw	80
 19569  0B3C  00C8               	movwf	___ftdiv@f2+2
 19570  0B3D  0021               	movlb	1	; select bank1
 19571  0B3E  0831               	movf	strtod@_u^(0+128),w
 19572  0B3F  0020               	movlb	0	; select bank0
 19573  0B40  00C9               	movwf	___ftdiv@f1
 19574  0B41  0021               	movlb	1	; select bank1
 19575  0B42  0832               	movf	(strtod@_u+1)^(0+128),w
 19576  0B43  0020               	movlb	0	; select bank0
 19577  0B44  00CA               	movwf	___ftdiv@f1+1
 19578  0B45  0021               	movlb	1	; select bank1
 19579  0B46  0833               	movf	(strtod@_u+2)^(0+128),w
 19580  0B47  0020               	movlb	0	; select bank0
 19581  0B48  00CB               	movwf	___ftdiv@f1+2
 19582  0B49  31A6  26A3  3189   	fcall	___ftdiv
 19583  0B4C  0020               	movlb	0	; select bank0
 19584  0B4D  0846               	movf	?___ftdiv,w
 19585  0B4E  0021               	movlb	1	; select bank1
 19586  0B4F  00B1               	movwf	strtod@_u^(0+128)
 19587  0B50  0020               	movlb	0	; select bank0
 19588  0B51  0847               	movf	?___ftdiv+1,w
 19589  0B52  0021               	movlb	1	; select bank1
 19590  0B53  00B2               	movwf	(strtod@_u+1)^(0+128)
 19591  0B54  0020               	movlb	0	; select bank0
 19592  0B55  0848               	movf	?___ftdiv+2,w
 19593  0B56  0021               	movlb	1	; select bank1
 19594  0B57  00B3               	movwf	(strtod@_u+2)^(0+128)
 19595  0B58  30F6               	movlw	246
 19596  0B59  0020               	movlb	0	; select bank0
 19597  0B5A  00E8               	movwf	??_strtod
 19598  0B5B  0868               	movf	??_strtod,w
 19599  0B5C  0021               	movlb	1	; select bank1
 19600  0B5D  07B0               	addwf	strtod@expon^(0+128),f
 19601  0B5E  2B31               	goto	l6588
 19602  0B5F                     l6590:	
 19603  0B5F  3000               	movlw	0
 19604  0B60  0020               	movlb	0	; select bank0
 19605  0B61  00C6               	movwf	___ftdiv@f2
 19606  0B62  3020               	movlw	32
 19607  0B63  00C7               	movwf	___ftdiv@f2+1
 19608  0B64  3041               	movlw	65
 19609  0B65  00C8               	movwf	___ftdiv@f2+2
 19610  0B66  0021               	movlb	1	; select bank1
 19611  0B67  0831               	movf	strtod@_u^(0+128),w
 19612  0B68  0020               	movlb	0	; select bank0
 19613  0B69  00C9               	movwf	___ftdiv@f1
 19614  0B6A  0021               	movlb	1	; select bank1
 19615  0B6B  0832               	movf	(strtod@_u+1)^(0+128),w
 19616  0B6C  0020               	movlb	0	; select bank0
 19617  0B6D  00CA               	movwf	___ftdiv@f1+1
 19618  0B6E  0021               	movlb	1	; select bank1
 19619  0B6F  0833               	movf	(strtod@_u+2)^(0+128),w
 19620  0B70  0020               	movlb	0	; select bank0
 19621  0B71  00CB               	movwf	___ftdiv@f1+2
 19622  0B72  31A6  26A3  3189   	fcall	___ftdiv
 19623  0B75  0020               	movlb	0	; select bank0
 19624  0B76  0846               	movf	?___ftdiv,w
 19625  0B77  0021               	movlb	1	; select bank1
 19626  0B78  00B1               	movwf	strtod@_u^(0+128)
 19627  0B79  0020               	movlb	0	; select bank0
 19628  0B7A  0847               	movf	?___ftdiv+1,w
 19629  0B7B  0021               	movlb	1	; select bank1
 19630  0B7C  00B2               	movwf	(strtod@_u+1)^(0+128)
 19631  0B7D  0020               	movlb	0	; select bank0
 19632  0B7E  0848               	movf	?___ftdiv+2,w
 19633  0B7F  0021               	movlb	1	; select bank1
 19634  0B80  00B3               	movwf	(strtod@_u+2)^(0+128)
 19635  0B81  30FF               	movlw	255
 19636  0B82  0020               	movlb	0	; select bank0
 19637  0B83  00E8               	movwf	??_strtod
 19638  0B84  0868               	movf	??_strtod,w
 19639  0B85  0021               	movlb	1	; select bank1
 19640  0B86  07B0               	addwf	strtod@expon^(0+128),f
 19641  0B87                     l6594:	
 19642  0B87  0830               	movf	strtod@expon^(0+128),w
 19643  0B88  1D03               	btfss	3,2
 19644  0B89  2B5F               	goto	l6590
 19645  0B8A  3000               	movlw	0
 19646  0B8B  00A0               	movwf	_strtod$1392^(0+128)
 19647  0B8C  3080               	movlw	128
 19648  0B8D  00A1               	movwf	(_strtod$1392+1)^(0+128)
 19649  0B8E  3000               	movlw	0
 19650  0B8F  00A2               	movwf	(_strtod$1392+2)^(0+128)
 19651  0B90  0831               	movf	strtod@_u^(0+128),w
 19652  0B91  0020               	movlb	0	; select bank0
 19653  0B92  00A0               	movwf	___ftge@ff1
 19654  0B93  0021               	movlb	1	; select bank1
 19655  0B94  0832               	movf	(strtod@_u+1)^(0+128),w
 19656  0B95  0020               	movlb	0	; select bank0
 19657  0B96  00A1               	movwf	___ftge@ff1+1
 19658  0B97  0021               	movlb	1	; select bank1
 19659  0B98  0833               	movf	(strtod@_u+2)^(0+128),w
 19660  0B99  0020               	movlb	0	; select bank0
 19661  0B9A  00A2               	movwf	___ftge@ff1+2
 19662  0B9B  0021               	movlb	1	; select bank1
 19663  0B9C  0820               	movf	_strtod$1392^(0+128),w
 19664  0B9D  0020               	movlb	0	; select bank0
 19665  0B9E  00A3               	movwf	___ftge@ff2
 19666  0B9F  0021               	movlb	1	; select bank1
 19667  0BA0  0821               	movf	(_strtod$1392+1)^(0+128),w
 19668  0BA1  0020               	movlb	0	; select bank0
 19669  0BA2  00A4               	movwf	___ftge@ff2+1
 19670  0BA3  0021               	movlb	1	; select bank1
 19671  0BA4  0822               	movf	(_strtod$1392+2)^(0+128),w
 19672  0BA5  0020               	movlb	0	; select bank0
 19673  0BA6  00A5               	movwf	___ftge@ff2+2
 19674  0BA7  31AF  27C4  3189   	fcall	___ftge
 19675  0BAA  1803               	btfsc	3,0
 19676  0BAB  2C79               	goto	l1053
 19677  0BAC  0021               	movlb	1	; select bank1
 19678  0BAD  1C2F               	btfss	strtod@flags^(0+128),0
 19679  0BAE  2BCA               	goto	l6616
 19680  0BAF  3000               	movlw	0
 19681  0BB0  00A3               	movwf	_strtod$1393^(0+128)
 19682  0BB1  3080               	movlw	128
 19683  0BB2  00A4               	movwf	(_strtod$1393+1)^(0+128)
 19684  0BB3  3000               	movlw	0
 19685  0BB4  00A5               	movwf	(_strtod$1393+2)^(0+128)
 19686  0BB5  0823               	movf	_strtod$1393^(0+128),w
 19687  0BB6  0020               	movlb	0	; select bank0
 19688  0BB7  00A0               	movwf	___ftneg@f1
 19689  0BB8  0021               	movlb	1	; select bank1
 19690  0BB9  0824               	movf	(_strtod$1393+1)^(0+128),w
 19691  0BBA  0020               	movlb	0	; select bank0
 19692  0BBB  00A1               	movwf	___ftneg@f1+1
 19693  0BBC  0021               	movlb	1	; select bank1
 19694  0BBD  0825               	movf	(_strtod$1393+2)^(0+128),w
 19695  0BBE  0020               	movlb	0	; select bank0
 19696  0BBF  00A2               	movwf	___ftneg@f1+2
 19697  0BC0  3198  2003         	fcall	___ftneg
 19698  0BC2  0020               	movlb	0	; select bank0
 19699  0BC3  0820               	movf	?___ftneg,w
 19700  0BC4  00E5               	movwf	?_strtod
 19701  0BC5  0821               	movf	?___ftneg+1,w
 19702  0BC6  00E6               	movwf	?_strtod+1
 19703  0BC7  0822               	movf	?___ftneg+2,w
 19704  0BC8  00E7               	movwf	?_strtod+2
 19705  0BC9  0008               	return
 19706  0BCA                     l6616:	
 19707  0BCA  3000               	movlw	0
 19708  0BCB  0020               	movlb	0	; select bank0
 19709  0BCC  00E5               	movwf	?_strtod
 19710  0BCD  3080               	movlw	128
 19711  0BCE  00E6               	movwf	?_strtod+1
 19712  0BCF  3000               	movlw	0
 19713  0BD0  00E7               	movwf	?_strtod+2
 19714  0BD1  0008               	return
 19715  0BD2                     l6620:	
 19716  0BD2  0021               	movlb	1	; select bank1
 19717  0BD3  0830               	movf	strtod@expon^(0+128),w
 19718  0BD4  3A80               	xorlw	128
 19719  0BD5  3E7F               	addlw	-129
 19720  0BD6  1803               	btfsc	3,0
 19721  0BD7  2C01               	goto	l6628
 19722  0BD8  2C79               	goto	l1053
 19723  0BD9                     l6624:	
 19724  0BD9  3003               	movlw	3
 19725  0BDA  0020               	movlb	0	; select bank0
 19726  0BDB  00B6               	movwf	___ftmul@f1
 19727  0BDC  3015               	movlw	21
 19728  0BDD  00B7               	movwf	___ftmul@f1+1
 19729  0BDE  3050               	movlw	80
 19730  0BDF  00B8               	movwf	___ftmul@f1+2
 19731  0BE0  0021               	movlb	1	; select bank1
 19732  0BE1  0831               	movf	strtod@_u^(0+128),w
 19733  0BE2  0020               	movlb	0	; select bank0
 19734  0BE3  00B9               	movwf	___ftmul@f2
 19735  0BE4  0021               	movlb	1	; select bank1
 19736  0BE5  0832               	movf	(strtod@_u+1)^(0+128),w
 19737  0BE6  0020               	movlb	0	; select bank0
 19738  0BE7  00BA               	movwf	___ftmul@f2+1
 19739  0BE8  0021               	movlb	1	; select bank1
 19740  0BE9  0833               	movf	(strtod@_u+2)^(0+128),w
 19741  0BEA  0020               	movlb	0	; select bank0
 19742  0BEB  00BB               	movwf	___ftmul@f2+2
 19743  0BEC  31A7  274C  3189   	fcall	___ftmul
 19744  0BEF  0020               	movlb	0	; select bank0
 19745  0BF0  0836               	movf	?___ftmul,w
 19746  0BF1  0021               	movlb	1	; select bank1
 19747  0BF2  00B1               	movwf	strtod@_u^(0+128)
 19748  0BF3  0020               	movlb	0	; select bank0
 19749  0BF4  0837               	movf	?___ftmul+1,w
 19750  0BF5  0021               	movlb	1	; select bank1
 19751  0BF6  00B2               	movwf	(strtod@_u+1)^(0+128)
 19752  0BF7  0020               	movlb	0	; select bank0
 19753  0BF8  0838               	movf	?___ftmul+2,w
 19754  0BF9  0021               	movlb	1	; select bank1
 19755  0BFA  00B3               	movwf	(strtod@_u+2)^(0+128)
 19756  0BFB  30F6               	movlw	246
 19757  0BFC  0020               	movlb	0	; select bank0
 19758  0BFD  00E8               	movwf	??_strtod
 19759  0BFE  0868               	movf	??_strtod,w
 19760  0BFF  0021               	movlb	1	; select bank1
 19761  0C00  07B0               	addwf	strtod@expon^(0+128),f
 19762  0C01                     l6628:	
 19763  0C01  300A               	movlw	10
 19764  0C02  0230               	subwf	strtod@expon^(0+128),w
 19765  0C03  1C03               	btfss	3,0
 19766  0C04  2C2E               	goto	l6634
 19767  0C05  2BD9               	goto	l6624
 19768  0C06                     l6630:	
 19769  0C06  3000               	movlw	0
 19770  0C07  0020               	movlb	0	; select bank0
 19771  0C08  00B6               	movwf	___ftmul@f1
 19772  0C09  3020               	movlw	32
 19773  0C0A  00B7               	movwf	___ftmul@f1+1
 19774  0C0B  3041               	movlw	65
 19775  0C0C  00B8               	movwf	___ftmul@f1+2
 19776  0C0D  0021               	movlb	1	; select bank1
 19777  0C0E  0831               	movf	strtod@_u^(0+128),w
 19778  0C0F  0020               	movlb	0	; select bank0
 19779  0C10  00B9               	movwf	___ftmul@f2
 19780  0C11  0021               	movlb	1	; select bank1
 19781  0C12  0832               	movf	(strtod@_u+1)^(0+128),w
 19782  0C13  0020               	movlb	0	; select bank0
 19783  0C14  00BA               	movwf	___ftmul@f2+1
 19784  0C15  0021               	movlb	1	; select bank1
 19785  0C16  0833               	movf	(strtod@_u+2)^(0+128),w
 19786  0C17  0020               	movlb	0	; select bank0
 19787  0C18  00BB               	movwf	___ftmul@f2+2
 19788  0C19  31A7  274C  3189   	fcall	___ftmul
 19789  0C1C  0020               	movlb	0	; select bank0
 19790  0C1D  0836               	movf	?___ftmul,w
 19791  0C1E  0021               	movlb	1	; select bank1
 19792  0C1F  00B1               	movwf	strtod@_u^(0+128)
 19793  0C20  0020               	movlb	0	; select bank0
 19794  0C21  0837               	movf	?___ftmul+1,w
 19795  0C22  0021               	movlb	1	; select bank1
 19796  0C23  00B2               	movwf	(strtod@_u+1)^(0+128)
 19797  0C24  0020               	movlb	0	; select bank0
 19798  0C25  0838               	movf	?___ftmul+2,w
 19799  0C26  0021               	movlb	1	; select bank1
 19800  0C27  00B3               	movwf	(strtod@_u+2)^(0+128)
 19801  0C28  30FF               	movlw	255
 19802  0C29  0020               	movlb	0	; select bank0
 19803  0C2A  00E8               	movwf	??_strtod
 19804  0C2B  0868               	movf	??_strtod,w
 19805  0C2C  0021               	movlb	1	; select bank1
 19806  0C2D  07B0               	addwf	strtod@expon^(0+128),f
 19807  0C2E                     l6634:	
 19808  0C2E  0830               	movf	strtod@expon^(0+128),w
 19809  0C2F  1D03               	btfss	3,2
 19810  0C30  2C06               	goto	l6630
 19811  0C31  30FF               	movlw	255
 19812  0C32  00A6               	movwf	_strtod$1394^(0+128)
 19813  0C33  307F               	movlw	127
 19814  0C34  00A7               	movwf	(_strtod$1394+1)^(0+128)
 19815  0C35  307F               	movlw	127
 19816  0C36  00A8               	movwf	(_strtod$1394+2)^(0+128)
 19817  0C37  0826               	movf	_strtod$1394^(0+128),w
 19818  0C38  0020               	movlb	0	; select bank0
 19819  0C39  00A0               	movwf	___ftge@ff1
 19820  0C3A  0021               	movlb	1	; select bank1
 19821  0C3B  0827               	movf	(_strtod$1394+1)^(0+128),w
 19822  0C3C  0020               	movlb	0	; select bank0
 19823  0C3D  00A1               	movwf	___ftge@ff1+1
 19824  0C3E  0021               	movlb	1	; select bank1
 19825  0C3F  0828               	movf	(_strtod$1394+2)^(0+128),w
 19826  0C40  0020               	movlb	0	; select bank0
 19827  0C41  00A2               	movwf	___ftge@ff1+2
 19828  0C42  0021               	movlb	1	; select bank1
 19829  0C43  0831               	movf	strtod@_u^(0+128),w
 19830  0C44  0020               	movlb	0	; select bank0
 19831  0C45  00A3               	movwf	___ftge@ff2
 19832  0C46  0021               	movlb	1	; select bank1
 19833  0C47  0832               	movf	(strtod@_u+1)^(0+128),w
 19834  0C48  0020               	movlb	0	; select bank0
 19835  0C49  00A4               	movwf	___ftge@ff2+1
 19836  0C4A  0021               	movlb	1	; select bank1
 19837  0C4B  0833               	movf	(strtod@_u+2)^(0+128),w
 19838  0C4C  0020               	movlb	0	; select bank0
 19839  0C4D  00A5               	movwf	___ftge@ff2+2
 19840  0C4E  31AF  27C4  3189   	fcall	___ftge
 19841  0C51  1803               	btfsc	3,0
 19842  0C52  2C79               	goto	l1053
 19843  0C53  0021               	movlb	1	; select bank1
 19844  0C54  1C2F               	btfss	strtod@flags^(0+128),0
 19845  0C55  2C71               	goto	l6656
 19846  0C56  3000               	movlw	0
 19847  0C57  00A9               	movwf	_strtod$1395^(0+128)
 19848  0C58  3080               	movlw	128
 19849  0C59  00AA               	movwf	(_strtod$1395+1)^(0+128)
 19850  0C5A  3000               	movlw	0
 19851  0C5B  00AB               	movwf	(_strtod$1395+2)^(0+128)
 19852  0C5C  0829               	movf	_strtod$1395^(0+128),w
 19853  0C5D  0020               	movlb	0	; select bank0
 19854  0C5E  00A0               	movwf	___ftneg@f1
 19855  0C5F  0021               	movlb	1	; select bank1
 19856  0C60  082A               	movf	(_strtod$1395+1)^(0+128),w
 19857  0C61  0020               	movlb	0	; select bank0
 19858  0C62  00A1               	movwf	___ftneg@f1+1
 19859  0C63  0021               	movlb	1	; select bank1
 19860  0C64  082B               	movf	(_strtod$1395+2)^(0+128),w
 19861  0C65  0020               	movlb	0	; select bank0
 19862  0C66  00A2               	movwf	___ftneg@f1+2
 19863  0C67  3198  2003         	fcall	___ftneg
 19864  0C69  0020               	movlb	0	; select bank0
 19865  0C6A  0820               	movf	?___ftneg,w
 19866  0C6B  00E5               	movwf	?_strtod
 19867  0C6C  0821               	movf	?___ftneg+1,w
 19868  0C6D  00E6               	movwf	?_strtod+1
 19869  0C6E  0822               	movf	?___ftneg+2,w
 19870  0C6F  00E7               	movwf	?_strtod+2
 19871  0C70  0008               	return
 19872  0C71                     l6656:	
 19873  0C71  3000               	movlw	0
 19874  0C72  0020               	movlb	0	; select bank0
 19875  0C73  00E5               	movwf	?_strtod
 19876  0C74  3080               	movlw	128
 19877  0C75  00E6               	movwf	?_strtod+1
 19878  0C76  3000               	movlw	0
 19879  0C77  00E7               	movwf	?_strtod+2
 19880  0C78  0008               	return
 19881  0C79                     l1053:	
 19882  0C79  0021               	movlb	1	; select bank1
 19883  0C7A  1C2F               	btfss	strtod@flags^(0+128),0
 19884  0C7B  2C95               	goto	l6662
 19885  0C7C  0831               	movf	strtod@_u^(0+128),w
 19886  0C7D  0020               	movlb	0	; select bank0
 19887  0C7E  00A0               	movwf	___ftneg@f1
 19888  0C7F  0021               	movlb	1	; select bank1
 19889  0C80  0832               	movf	(strtod@_u+1)^(0+128),w
 19890  0C81  0020               	movlb	0	; select bank0
 19891  0C82  00A1               	movwf	___ftneg@f1+1
 19892  0C83  0021               	movlb	1	; select bank1
 19893  0C84  0833               	movf	(strtod@_u+2)^(0+128),w
 19894  0C85  0020               	movlb	0	; select bank0
 19895  0C86  00A2               	movwf	___ftneg@f1+2
 19896  0C87  3198  2003         	fcall	___ftneg
 19897  0C89  0020               	movlb	0	; select bank0
 19898  0C8A  0820               	movf	?___ftneg,w
 19899  0C8B  0021               	movlb	1	; select bank1
 19900  0C8C  00B1               	movwf	strtod@_u^(0+128)
 19901  0C8D  0020               	movlb	0	; select bank0
 19902  0C8E  0821               	movf	?___ftneg+1,w
 19903  0C8F  0021               	movlb	1	; select bank1
 19904  0C90  00B2               	movwf	(strtod@_u+1)^(0+128)
 19905  0C91  0020               	movlb	0	; select bank0
 19906  0C92  0822               	movf	?___ftneg+2,w
 19907  0C93  0021               	movlb	1	; select bank1
 19908  0C94  00B3               	movwf	(strtod@_u+2)^(0+128)
 19909  0C95                     l6662:	
 19910  0C95  0831               	movf	strtod@_u^(0+128),w
 19911  0C96  0020               	movlb	0	; select bank0
 19912  0C97  00E5               	movwf	?_strtod
 19913  0C98  0021               	movlb	1	; select bank1
 19914  0C99  0832               	movf	(strtod@_u+1)^(0+128),w
 19915  0C9A  0020               	movlb	0	; select bank0
 19916  0C9B  00E6               	movwf	?_strtod+1
 19917  0C9C  0021               	movlb	1	; select bank1
 19918  0C9D  0833               	movf	(strtod@_u+2)^(0+128),w
 19919  0C9E  0020               	movlb	0	; select bank0
 19920  0C9F  00E7               	movwf	?_strtod+2
 19921  0CA0  0008               	return
 19922  0CA1                     __end_of_strtod:	
 19923                           
 19924                           	psect	text41
 19925  2150                     __ptext41:	
 19926 ;; *************** function _isspace *****************
 19927 ;; Defined at:
 19928 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/isspace.c"
 19929 ;; Parameters:    Size  Location     Type
 19930 ;;  c               1    wreg     unsigned char 
 19931 ;; Auto vars:     Size  Location     Type
 19932 ;;  c               1    1[BANK0 ] unsigned char 
 19933 ;; Return value:  Size  Location     Type
 19934 ;;		None               void
 19935 ;; Registers used:
 19936 ;;		wreg, status,2, status,0
 19937 ;; Tracked objects:
 19938 ;;		On entry : 0/0
 19939 ;;		On exit  : 0/0
 19940 ;;		Unchanged: 0/0
 19941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 19942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19943 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19945 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 19946 ;;Total ram usage:        2 bytes
 19947 ;; Hardware stack levels used:    1
 19948 ;; Hardware stack levels required when called:    5
 19949 ;; This function calls:
 19950 ;;		Nothing
 19951 ;; This function is called by:
 19952 ;;		_strtod
 19953 ;; This function uses a non-reentrant model
 19954 ;;
 19955                           
 19956                           
 19957                           ;psect for function _isspace
 19958  2150                     _isspace:	
 19959                           
 19960                           ;incstack = 0
 19961                           ; Regs used in _isspace: [wreg+status,2+status,0]
 19962                           ;isspace@c stored from wreg
 19963  2150  0020               	movlb	0	; select bank0
 19964  2151  00A1               	movwf	isspace@c
 19965  2152  01A0               	clrf	_isspace$1497
 19966  2153  0AA0               	incf	_isspace$1497,f
 19967  2154  3020               	movlw	32
 19968  2155  0621               	xorwf	isspace@c,w
 19969  2156  1903               	btfsc	3,2
 19970  2157  2961               	goto	l6070
 19971  2158  300E               	movlw	14
 19972  2159  0221               	subwf	isspace@c,w
 19973  215A  1803               	skipnc
 19974  215B  2960               	goto	l6068
 19975  215C  3009               	movlw	9
 19976  215D  0221               	subwf	isspace@c,w
 19977  215E  1803               	skipnc
 19978  215F  2961               	goto	l6070
 19979  2160                     l6068:	
 19980  2160  01A0               	clrf	_isspace$1497
 19981  2161                     l6070:	
 19982  2161  0C20               	rrf	_isspace$1497,w
 19983  2162  0008               	return
 19984  2163                     __end_of_isspace:	
 19985                           
 19986                           	psect	text42
 19987  2B5E                     __ptext42:	
 19988 ;; *************** function _isdigit *****************
 19989 ;; Defined at:
 19990 ;;		line 8 in file "/opt/microchip/xc8/v1.35/sources/common/isdigit.c"
 19991 ;; Parameters:    Size  Location     Type
 19992 ;;  c               1    wreg     unsigned char 
 19993 ;; Auto vars:     Size  Location     Type
 19994 ;;  c               1    1[BANK0 ] unsigned char 
 19995 ;; Return value:  Size  Location     Type
 19996 ;;		None               void
 19997 ;; Registers used:
 19998 ;;		wreg, status,2, status,0
 19999 ;; Tracked objects:
 20000 ;;		On entry : 0/0
 20001 ;;		On exit  : 0/0
 20002 ;;		Unchanged: 0/0
 20003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20005 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20007 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20008 ;;Total ram usage:        2 bytes
 20009 ;; Hardware stack levels used:    1
 20010 ;; Hardware stack levels required when called:    5
 20011 ;; This function calls:
 20012 ;;		Nothing
 20013 ;; This function is called by:
 20014 ;;		_strtod
 20015 ;; This function uses a non-reentrant model
 20016 ;;
 20017                           
 20018                           
 20019                           ;psect for function _isdigit
 20020  2B5E                     _isdigit:	
 20021                           
 20022                           ;incstack = 0
 20023                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 20024                           ;isdigit@c stored from wreg
 20025  2B5E  0020               	movlb	0	; select bank0
 20026  2B5F  00A1               	movwf	isdigit@c
 20027  2B60  01A0               	clrf	_isdigit$1494
 20028  2B61  303A               	movlw	58
 20029  2B62  0221               	subwf	isdigit@c,w
 20030  2B63  1803               	skipnc
 20031  2B64  2B6B               	goto	l6082
 20032  2B65  3030               	movlw	48
 20033  2B66  0221               	subwf	isdigit@c,w
 20034  2B67  1C03               	skipc
 20035  2B68  2B6B               	goto	l6082
 20036  2B69  01A0               	clrf	_isdigit$1494
 20037  2B6A  0AA0               	incf	_isdigit$1494,f
 20038  2B6B                     l6082:	
 20039  2B6B  0C20               	rrf	_isdigit$1494,w
 20040  2B6C  0008               	return
 20041  2B6D                     __end_of_isdigit:	
 20042                           
 20043                           	psect	text43
 20044  07CF                     __ptext43:	
 20045 ;; *************** function ___lmul *****************
 20046 ;; Defined at:
 20047 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/Umul32.c"
 20048 ;; Parameters:    Size  Location     Type
 20049 ;;  multiplier      4    0[BANK0 ] unsigned long 
 20050 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 20051 ;; Auto vars:     Size  Location     Type
 20052 ;;  product         4    8[BANK0 ] unsigned long 
 20053 ;; Return value:  Size  Location     Type
 20054 ;;                  4    0[BANK0 ] unsigned long 
 20055 ;; Registers used:
 20056 ;;		wreg, status,2, status,0
 20057 ;; Tracked objects:
 20058 ;;		On entry : 0/0
 20059 ;;		On exit  : 0/0
 20060 ;;		Unchanged: 0/0
 20061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20062 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20063 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20064 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20065 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20066 ;;Total ram usage:       12 bytes
 20067 ;; Hardware stack levels used:    1
 20068 ;; Hardware stack levels required when called:    5
 20069 ;; This function calls:
 20070 ;;		Nothing
 20071 ;; This function is called by:
 20072 ;;		_strtod
 20073 ;; This function uses a non-reentrant model
 20074 ;;
 20075                           
 20076                           
 20077                           ;psect for function ___lmul
 20078  07CF                     ___lmul:	
 20079                           
 20080                           ;incstack = 0
 20081                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 20082  07CF  3000               	movlw	0
 20083  07D0  0020               	movlb	0	; select bank0
 20084  07D1  00AB               	movwf	___lmul@product+3
 20085  07D2  3000               	movlw	0
 20086  07D3  00AA               	movwf	___lmul@product+2
 20087  07D4  3000               	movlw	0
 20088  07D5  00A9               	movwf	___lmul@product+1
 20089  07D6  3000               	movlw	0
 20090  07D7  00A8               	movwf	___lmul@product
 20091  07D8                     l5992:	
 20092  07D8  1C20               	btfss	___lmul@multiplier,0
 20093  07D9  2FE2               	goto	l5996
 20094  07DA  0824               	movf	___lmul@multiplicand,w
 20095  07DB  07A8               	addwf	___lmul@product,f
 20096  07DC  0825               	movf	___lmul@multiplicand+1,w
 20097  07DD  3DA9               	addwfc	___lmul@product+1,f
 20098  07DE  0826               	movf	___lmul@multiplicand+2,w
 20099  07DF  3DAA               	addwfc	___lmul@product+2,f
 20100  07E0  0827               	movf	___lmul@multiplicand+3,w
 20101  07E1  3DAB               	addwfc	___lmul@product+3,f
 20102  07E2                     l5996:	
 20103  07E2  3001               	movlw	1
 20104  07E3                     u7565:	
 20105  07E3  35A4               	lslf	___lmul@multiplicand,f
 20106  07E4  0DA5               	rlf	___lmul@multiplicand+1,f
 20107  07E5  0DA6               	rlf	___lmul@multiplicand+2,f
 20108  07E6  0DA7               	rlf	___lmul@multiplicand+3,f
 20109  07E7  0B89               	decfsz	9,f
 20110  07E8  2FE3               	goto	u7565
 20111  07E9  3001               	movlw	1
 20112  07EA                     u7575:	
 20113  07EA  36A3               	lsrf	___lmul@multiplier+3,f
 20114  07EB  0CA2               	rrf	___lmul@multiplier+2,f
 20115  07EC  0CA1               	rrf	___lmul@multiplier+1,f
 20116  07ED  0CA0               	rrf	___lmul@multiplier,f
 20117  07EE  0B89               	decfsz	9,f
 20118  07EF  2FEA               	goto	u7575
 20119  07F0  0823               	movf	___lmul@multiplier+3,w
 20120  07F1  0422               	iorwf	___lmul@multiplier+2,w
 20121  07F2  0421               	iorwf	___lmul@multiplier+1,w
 20122  07F3  0420               	iorwf	___lmul@multiplier,w
 20123  07F4  1D03               	skipz
 20124  07F5  2FD8               	goto	l5992
 20125  07F6  082B               	movf	___lmul@product+3,w
 20126  07F7  00A3               	movwf	?___lmul+3
 20127  07F8  082A               	movf	___lmul@product+2,w
 20128  07F9  00A2               	movwf	?___lmul+2
 20129  07FA  0829               	movf	___lmul@product+1,w
 20130  07FB  00A1               	movwf	?___lmul+1
 20131  07FC  0828               	movf	___lmul@product,w
 20132  07FD  00A0               	movwf	?___lmul
 20133  07FE  0008               	return
 20134  07FF                     __end_of___lmul:	
 20135                           
 20136                           	psect	text44
 20137  1803                     __ptext44:	
 20138 ;; *************** function ___ftneg *****************
 20139 ;; Defined at:
 20140 ;;		line 15 in file "/opt/microchip/xc8/v1.35/sources/common/ftneg.c"
 20141 ;; Parameters:    Size  Location     Type
 20142 ;;  f1              3    0[BANK0 ] float 
 20143 ;; Auto vars:     Size  Location     Type
 20144 ;;		None
 20145 ;; Return value:  Size  Location     Type
 20146 ;;                  3    0[BANK0 ] float 
 20147 ;; Registers used:
 20148 ;;		wreg
 20149 ;; Tracked objects:
 20150 ;;		On entry : 0/0
 20151 ;;		On exit  : 0/0
 20152 ;;		Unchanged: 0/0
 20153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20154 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20157 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20158 ;;Total ram usage:        3 bytes
 20159 ;; Hardware stack levels used:    1
 20160 ;; Hardware stack levels required when called:    5
 20161 ;; This function calls:
 20162 ;;		Nothing
 20163 ;; This function is called by:
 20164 ;;		_distance
 20165 ;;		_heading
 20166 ;;		_sprintf
 20167 ;;		_acos
 20168 ;;		_asin
 20169 ;;		_atan
 20170 ;;		_atan2
 20171 ;;		_strtod
 20172 ;;		_fabs
 20173 ;;		_fmod
 20174 ;;		_sin
 20175 ;; This function uses a non-reentrant model
 20176 ;;
 20177                           
 20178                           
 20179                           ;psect for function ___ftneg
 20180  1803                     ___ftneg:	
 20181                           
 20182                           ;incstack = 0
 20183                           ; Regs used in ___ftneg: [wreg]
 20184  1803  0020               	movlb	0	; select bank0
 20185  1804  0822               	movf	___ftneg@f1+2,w
 20186  1805  0421               	iorwf	___ftneg@f1+1,w
 20187  1806  0420               	iorwf	___ftneg@f1,w
 20188  1807  1903               	skipnz
 20189  1808  0008               	return
 20190  1809  3080               	movlw	128
 20191  180A  06A2               	xorwf	___ftneg@f1+2,f
 20192  180B  0008               	return
 20193  180C                     __end_of___ftneg:	
 20194                           
 20195                           	psect	text45
 20196  274C                     __ptext45:	
 20197 ;; *************** function ___ftmul *****************
 20198 ;; Defined at:
 20199 ;;		line 62 in file "/opt/microchip/xc8/v1.35/sources/common/ftmul.c"
 20200 ;; Parameters:    Size  Location     Type
 20201 ;;  f1              3   22[BANK0 ] float 
 20202 ;;  f2              3   25[BANK0 ] float 
 20203 ;; Auto vars:     Size  Location     Type
 20204 ;;  f3_as_produc    3   33[BANK0 ] unsigned um
 20205 ;;  sign            1   37[BANK0 ] unsigned char 
 20206 ;;  cntr            1   36[BANK0 ] unsigned char 
 20207 ;;  exp             1   32[BANK0 ] unsigned char 
 20208 ;; Return value:  Size  Location     Type
 20209 ;;                  3   22[BANK0 ] float 
 20210 ;; Registers used:
 20211 ;;		wreg, status,2, status,0, pclath, cstack
 20212 ;; Tracked objects:
 20213 ;;		On entry : 0/0
 20214 ;;		On exit  : 0/0
 20215 ;;		Unchanged: 0/0
 20216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20217 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20218 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20219 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20220 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20221 ;;Total ram usage:       16 bytes
 20222 ;; Hardware stack levels used:    1
 20223 ;; Hardware stack levels required when called:    6
 20224 ;; This function calls:
 20225 ;;		___ftpack
 20226 ;; This function is called by:
 20227 ;;		_deg2rad
 20228 ;;		_rad2deg
 20229 ;;		_distance
 20230 ;;		_heading
 20231 ;;		_fround
 20232 ;;		_scale
 20233 ;;		_sprintf
 20234 ;;		_asin
 20235 ;;		_atan
 20236 ;;		_strtod
 20237 ;;		_eval_poly
 20238 ;;		_fmod
 20239 ;;		_sin
 20240 ;;		_sqrt
 20241 ;; This function uses a non-reentrant model
 20242 ;;
 20243                           
 20244                           
 20245                           ;psect for function ___ftmul
 20246  274C                     ___ftmul:	
 20247                           
 20248                           ;incstack = 0
 20249                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 20250  274C  0020               	movlb	0	; select bank0
 20251  274D  0836               	movf	___ftmul@f1,w
 20252  274E  00BC               	movwf	??___ftmul
 20253  274F  0837               	movf	___ftmul@f1+1,w
 20254  2750  00BD               	movwf	??___ftmul+1
 20255  2751  0838               	movf	___ftmul@f1+2,w
 20256  2752  00BE               	movwf	??___ftmul+2
 20257  2753  1003               	clrc
 20258  2754  0D3D               	rlf	??___ftmul+1,w
 20259  2755  0D3E               	rlf	??___ftmul+2,w
 20260  2756  00BF               	movwf	??___ftmul+3
 20261  2757  083F               	movf	??___ftmul+3,w
 20262  2758  00C0               	movwf	___ftmul@exp
 20263  2759  0840               	movf	___ftmul@exp,w
 20264  275A  1D03               	btfss	3,2
 20265  275B  2F63               	goto	l5622
 20266  275C  3000               	movlw	0
 20267  275D  00B6               	movwf	?___ftmul
 20268  275E  3000               	movlw	0
 20269  275F  00B7               	movwf	?___ftmul+1
 20270  2760  3000               	movlw	0
 20271  2761  00B8               	movwf	?___ftmul+2
 20272  2762  0008               	return
 20273  2763                     l5622:	
 20274  2763  0839               	movf	___ftmul@f2,w
 20275  2764  00BC               	movwf	??___ftmul
 20276  2765  083A               	movf	___ftmul@f2+1,w
 20277  2766  00BD               	movwf	??___ftmul+1
 20278  2767  083B               	movf	___ftmul@f2+2,w
 20279  2768  00BE               	movwf	??___ftmul+2
 20280  2769  1003               	clrc
 20281  276A  0D3D               	rlf	??___ftmul+1,w
 20282  276B  0D3E               	rlf	??___ftmul+2,w
 20283  276C  00BF               	movwf	??___ftmul+3
 20284  276D  083F               	movf	??___ftmul+3,w
 20285  276E  00C5               	movwf	___ftmul@sign
 20286  276F  0845               	movf	___ftmul@sign,w
 20287  2770  1D03               	btfss	3,2
 20288  2771  2F79               	goto	l5628
 20289  2772  3000               	movlw	0
 20290  2773  00B6               	movwf	?___ftmul
 20291  2774  3000               	movlw	0
 20292  2775  00B7               	movwf	?___ftmul+1
 20293  2776  3000               	movlw	0
 20294  2777  00B8               	movwf	?___ftmul+2
 20295  2778  0008               	return
 20296  2779                     l5628:	
 20297  2779  0845               	movf	___ftmul@sign,w
 20298  277A  3E7B               	addlw	123
 20299  277B  00BC               	movwf	??___ftmul
 20300  277C  083C               	movf	??___ftmul,w
 20301  277D  07C0               	addwf	___ftmul@exp,f
 20302  277E  0836               	movf	___ftmul@f1,w
 20303  277F  00BC               	movwf	??___ftmul
 20304  2780  0837               	movf	___ftmul@f1+1,w
 20305  2781  00BD               	movwf	??___ftmul+1
 20306  2782  0838               	movf	___ftmul@f1+2,w
 20307  2783  00BE               	movwf	??___ftmul+2
 20308  2784  3010               	movlw	16
 20309  2785                     u6855:	
 20310  2785  36BE               	lsrf	??___ftmul+2,f
 20311  2786  0CBD               	rrf	??___ftmul+1,f
 20312  2787  0CBC               	rrf	??___ftmul,f
 20313  2788  0B89               	decfsz	9,f
 20314  2789  2F85               	goto	u6855
 20315  278A  083C               	movf	??___ftmul,w
 20316  278B  00BF               	movwf	??___ftmul+3
 20317  278C  083F               	movf	??___ftmul+3,w
 20318  278D  00C5               	movwf	___ftmul@sign
 20319  278E  0839               	movf	___ftmul@f2,w
 20320  278F  00BC               	movwf	??___ftmul
 20321  2790  083A               	movf	___ftmul@f2+1,w
 20322  2791  00BD               	movwf	??___ftmul+1
 20323  2792  083B               	movf	___ftmul@f2+2,w
 20324  2793  00BE               	movwf	??___ftmul+2
 20325  2794  3010               	movlw	16
 20326  2795                     u6865:	
 20327  2795  36BE               	lsrf	??___ftmul+2,f
 20328  2796  0CBD               	rrf	??___ftmul+1,f
 20329  2797  0CBC               	rrf	??___ftmul,f
 20330  2798  0B89               	decfsz	9,f
 20331  2799  2F95               	goto	u6865
 20332  279A  083C               	movf	??___ftmul,w
 20333  279B  00BF               	movwf	??___ftmul+3
 20334  279C  083F               	movf	??___ftmul+3,w
 20335  279D  06C5               	xorwf	___ftmul@sign,f
 20336  279E  3080               	movlw	128
 20337  279F  00BC               	movwf	??___ftmul
 20338  27A0  083C               	movf	??___ftmul,w
 20339  27A1  05C5               	andwf	___ftmul@sign,f
 20340  27A2  17B7               	bsf	___ftmul@f1+1,7
 20341  27A3  17BA               	bsf	___ftmul@f2+1,7
 20342  27A4  30FF               	movlw	255
 20343  27A5  05B9               	andwf	___ftmul@f2,f
 20344  27A6  30FF               	movlw	255
 20345  27A7  05BA               	andwf	___ftmul@f2+1,f
 20346  27A8  3000               	movlw	0
 20347  27A9  05BB               	andwf	___ftmul@f2+2,f
 20348  27AA  3000               	movlw	0
 20349  27AB  00C1               	movwf	___ftmul@f3_as_product
 20350  27AC  3000               	movlw	0
 20351  27AD  00C2               	movwf	___ftmul@f3_as_product+1
 20352  27AE  3000               	movlw	0
 20353  27AF  00C3               	movwf	___ftmul@f3_as_product+2
 20354  27B0  3007               	movlw	7
 20355  27B1  00BC               	movwf	??___ftmul
 20356  27B2  083C               	movf	??___ftmul,w
 20357  27B3  00C4               	movwf	___ftmul@cntr
 20358  27B4                     l5640:	
 20359  27B4  1C36               	btfss	___ftmul@f1,0
 20360  27B5  2FBC               	goto	l5644
 20361  27B6  0839               	movf	___ftmul@f2,w
 20362  27B7  07C1               	addwf	___ftmul@f3_as_product,f
 20363  27B8  083A               	movf	___ftmul@f2+1,w
 20364  27B9  3DC2               	addwfc	___ftmul@f3_as_product+1,f
 20365  27BA  083B               	movf	___ftmul@f2+2,w
 20366  27BB  3DC3               	addwfc	___ftmul@f3_as_product+2,f
 20367  27BC                     l5644:	
 20368  27BC  3001               	movlw	1
 20369  27BD                     u6885:	
 20370  27BD  36B8               	lsrf	___ftmul@f1+2,f
 20371  27BE  0CB7               	rrf	___ftmul@f1+1,f
 20372  27BF  0CB6               	rrf	___ftmul@f1,f
 20373  27C0  0B89               	decfsz	9,f
 20374  27C1  2FBD               	goto	u6885
 20375  27C2  3001               	movlw	1
 20376  27C3                     u6895:	
 20377  27C3  35B9               	lslf	___ftmul@f2,f
 20378  27C4  0DBA               	rlf	___ftmul@f2+1,f
 20379  27C5  0DBB               	rlf	___ftmul@f2+2,f
 20380  27C6  0B89               	decfsz	9,f
 20381  27C7  2FC3               	goto	u6895
 20382  27C8  3001               	movlw	1
 20383  27C9  02C4               	subwf	___ftmul@cntr,f
 20384  27CA  1D03               	btfss	3,2
 20385  27CB  2FB4               	goto	l5640
 20386  27CC  3009               	movlw	9
 20387  27CD  00BC               	movwf	??___ftmul
 20388  27CE  083C               	movf	??___ftmul,w
 20389  27CF  00C4               	movwf	___ftmul@cntr
 20390  27D0                     l5652:	
 20391  27D0  1C36               	btfss	___ftmul@f1,0
 20392  27D1  2FD8               	goto	l5656
 20393  27D2  0839               	movf	___ftmul@f2,w
 20394  27D3  07C1               	addwf	___ftmul@f3_as_product,f
 20395  27D4  083A               	movf	___ftmul@f2+1,w
 20396  27D5  3DC2               	addwfc	___ftmul@f3_as_product+1,f
 20397  27D6  083B               	movf	___ftmul@f2+2,w
 20398  27D7  3DC3               	addwfc	___ftmul@f3_as_product+2,f
 20399  27D8                     l5656:	
 20400  27D8  3001               	movlw	1
 20401  27D9                     u6925:	
 20402  27D9  36B8               	lsrf	___ftmul@f1+2,f
 20403  27DA  0CB7               	rrf	___ftmul@f1+1,f
 20404  27DB  0CB6               	rrf	___ftmul@f1,f
 20405  27DC  0B89               	decfsz	9,f
 20406  27DD  2FD9               	goto	u6925
 20407  27DE  3001               	movlw	1
 20408  27DF                     u6935:	
 20409  27DF  36C3               	lsrf	___ftmul@f3_as_product+2,f
 20410  27E0  0CC2               	rrf	___ftmul@f3_as_product+1,f
 20411  27E1  0CC1               	rrf	___ftmul@f3_as_product,f
 20412  27E2  0B89               	decfsz	9,f
 20413  27E3  2FDF               	goto	u6935
 20414  27E4  3001               	movlw	1
 20415  27E5  02C4               	subwf	___ftmul@cntr,f
 20416  27E6  1D03               	btfss	3,2
 20417  27E7  2FD0               	goto	l5652
 20418  27E8  0841               	movf	___ftmul@f3_as_product,w
 20419  27E9  00A0               	movwf	___ftpack@arg
 20420  27EA  0842               	movf	___ftmul@f3_as_product+1,w
 20421  27EB  00A1               	movwf	___ftpack@arg+1
 20422  27EC  0843               	movf	___ftmul@f3_as_product+2,w
 20423  27ED  00A2               	movwf	___ftpack@arg+2
 20424  27EE  0840               	movf	___ftmul@exp,w
 20425  27EF  00BC               	movwf	??___ftmul
 20426  27F0  083C               	movf	??___ftmul,w
 20427  27F1  00A3               	movwf	___ftpack@exp
 20428  27F2  0845               	movf	___ftmul@sign,w
 20429  27F3  00BD               	movwf	??___ftmul+1
 20430  27F4  083D               	movf	??___ftmul+1,w
 20431  27F5  00A4               	movwf	___ftpack@sign
 20432  27F6  31A3  23B9         	fcall	___ftpack
 20433  27F8  0020               	movlb	0	; select bank0
 20434  27F9  0820               	movf	?___ftpack,w
 20435  27FA  00B6               	movwf	?___ftmul
 20436  27FB  0821               	movf	?___ftpack+1,w
 20437  27FC  00B7               	movwf	?___ftmul+1
 20438  27FD  0822               	movf	?___ftpack+2,w
 20439  27FE  00B8               	movwf	?___ftmul+2
 20440  27FF  0008               	return
 20441  2800                     __end_of___ftmul:	
 20442                           
 20443                           	psect	text46
 20444  2FC4                     __ptext46:	
 20445 ;; *************** function ___ftge *****************
 20446 ;; Defined at:
 20447 ;;		line 4 in file "/opt/microchip/xc8/v1.35/sources/common/ftge.c"
 20448 ;; Parameters:    Size  Location     Type
 20449 ;;  ff1             3    0[BANK0 ] float 
 20450 ;;  ff2             3    3[BANK0 ] float 
 20451 ;; Auto vars:     Size  Location     Type
 20452 ;;		None
 20453 ;; Return value:  Size  Location     Type
 20454 ;;		None               void
 20455 ;; Registers used:
 20456 ;;		wreg, status,2, status,0
 20457 ;; Tracked objects:
 20458 ;;		On entry : 0/0
 20459 ;;		On exit  : 0/0
 20460 ;;		Unchanged: 0/0
 20461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20462 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20464 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20465 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20466 ;;Total ram usage:        9 bytes
 20467 ;; Hardware stack levels used:    1
 20468 ;; Hardware stack levels required when called:    5
 20469 ;; This function calls:
 20470 ;;		Nothing
 20471 ;; This function is called by:
 20472 ;;		_heading
 20473 ;;		_sprintf
 20474 ;;		_asin
 20475 ;;		_atan
 20476 ;;		_atan2
 20477 ;;		_strtod
 20478 ;;		_cos
 20479 ;;		_fabs
 20480 ;;		_sin
 20481 ;;		_sqrt
 20482 ;;		_floor
 20483 ;; This function uses a non-reentrant model
 20484 ;;
 20485                           
 20486                           
 20487                           ;psect for function ___ftge
 20488  2FC4                     ___ftge:	
 20489                           
 20490                           ;incstack = 0
 20491                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 20492  2FC4  0020               	movlb	0	; select bank0
 20493  2FC5  1FA2               	btfss	___ftge@ff1+2,7
 20494  2FC6  2FDB               	goto	l3700
 20495  2FC7  0920               	comf	___ftge@ff1,w
 20496  2FC8  00A6               	movwf	??___ftge
 20497  2FC9  0921               	comf	___ftge@ff1+1,w
 20498  2FCA  00A7               	movwf	??___ftge+1
 20499  2FCB  0922               	comf	___ftge@ff1+2,w
 20500  2FCC  00A8               	movwf	??___ftge+2
 20501  2FCD  0AA6               	incf	??___ftge,f
 20502  2FCE  1903               	skipnz
 20503  2FCF  0AA7               	incf	??___ftge+1,f
 20504  2FD0  1903               	skipnz
 20505  2FD1  0AA8               	incf	??___ftge+2,f
 20506  2FD2  3000               	movlw	0
 20507  2FD3  0726               	addwf	??___ftge,w
 20508  2FD4  00A0               	movwf	___ftge@ff1
 20509  2FD5  3000               	movlw	0
 20510  2FD6  3D27               	addwfc	??___ftge+1,w
 20511  2FD7  00A1               	movwf	___ftge@ff1+1
 20512  2FD8  3080               	movlw	128
 20513  2FD9  3D28               	addwfc	??___ftge+2,w
 20514  2FDA  00A2               	movwf	___ftge@ff1+2
 20515  2FDB                     l3700:	
 20516  2FDB  1FA5               	btfss	___ftge@ff2+2,7
 20517  2FDC  2FF1               	goto	l3704
 20518  2FDD  0923               	comf	___ftge@ff2,w
 20519  2FDE  00A6               	movwf	??___ftge
 20520  2FDF  0924               	comf	___ftge@ff2+1,w
 20521  2FE0  00A7               	movwf	??___ftge+1
 20522  2FE1  0925               	comf	___ftge@ff2+2,w
 20523  2FE2  00A8               	movwf	??___ftge+2
 20524  2FE3  0AA6               	incf	??___ftge,f
 20525  2FE4  1903               	skipnz
 20526  2FE5  0AA7               	incf	??___ftge+1,f
 20527  2FE6  1903               	skipnz
 20528  2FE7  0AA8               	incf	??___ftge+2,f
 20529  2FE8  3000               	movlw	0
 20530  2FE9  0726               	addwf	??___ftge,w
 20531  2FEA  00A3               	movwf	___ftge@ff2
 20532  2FEB  3000               	movlw	0
 20533  2FEC  3D27               	addwfc	??___ftge+1,w
 20534  2FED  00A4               	movwf	___ftge@ff2+1
 20535  2FEE  3080               	movlw	128
 20536  2FEF  3D28               	addwfc	??___ftge+2,w
 20537  2FF0  00A5               	movwf	___ftge@ff2+2
 20538  2FF1                     l3704:	
 20539  2FF1  3080               	movlw	128
 20540  2FF2  06A2               	xorwf	___ftge@ff1+2,f
 20541  2FF3  3080               	movlw	128
 20542  2FF4  06A5               	xorwf	___ftge@ff2+2,f
 20543  2FF5  0825               	movf	___ftge@ff2+2,w
 20544  2FF6  0222               	subwf	___ftge@ff1+2,w
 20545  2FF7  1D03               	skipz
 20546  2FF8  0008               	return
 20547  2FF9  0824               	movf	___ftge@ff2+1,w
 20548  2FFA  0221               	subwf	___ftge@ff1+1,w
 20549  2FFB  1D03               	skipz
 20550  2FFC  0008               	return
 20551  2FFD  0823               	movf	___ftge@ff2,w
 20552  2FFE  0220               	subwf	___ftge@ff1,w
 20553  2FFF  0008               	return
 20554  3000                     __end_of___ftge:	
 20555                           
 20556                           	psect	text47
 20557  26A3                     __ptext47:	
 20558 ;; *************** function ___ftdiv *****************
 20559 ;; Defined at:
 20560 ;;		line 56 in file "/opt/microchip/xc8/v1.35/sources/common/ftdiv.c"
 20561 ;; Parameters:    Size  Location     Type
 20562 ;;  f2              3   38[BANK0 ] float 
 20563 ;;  f1              3   41[BANK0 ] float 
 20564 ;; Auto vars:     Size  Location     Type
 20565 ;;  f3              3   49[BANK0 ] float 
 20566 ;;  sign            1   53[BANK0 ] unsigned char 
 20567 ;;  exp             1   52[BANK0 ] unsigned char 
 20568 ;;  cntr            1   48[BANK0 ] unsigned char 
 20569 ;; Return value:  Size  Location     Type
 20570 ;;                  3   38[BANK0 ] float 
 20571 ;; Registers used:
 20572 ;;		wreg, status,2, status,0, pclath, cstack
 20573 ;; Tracked objects:
 20574 ;;		On entry : 0/0
 20575 ;;		On exit  : 0/0
 20576 ;;		Unchanged: 0/0
 20577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20578 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20579 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20580 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20581 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20582 ;;Total ram usage:       16 bytes
 20583 ;; Hardware stack levels used:    1
 20584 ;; Hardware stack levels required when called:    6
 20585 ;; This function calls:
 20586 ;;		___ftpack
 20587 ;; This function is called by:
 20588 ;;		_deg2rad
 20589 ;;		_rad2deg
 20590 ;;		_heading
 20591 ;;		_asin
 20592 ;;		_atan
 20593 ;;		_atan2
 20594 ;;		_strtod
 20595 ;;		_fmod
 20596 ;;		_sin
 20597 ;; This function uses a non-reentrant model
 20598 ;;
 20599                           
 20600                           
 20601                           ;psect for function ___ftdiv
 20602  26A3                     ___ftdiv:	
 20603                           
 20604                           ;incstack = 0
 20605                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 20606  26A3  0020               	movlb	0	; select bank0
 20607  26A4  0849               	movf	___ftdiv@f1,w
 20608  26A5  00CC               	movwf	??___ftdiv
 20609  26A6  084A               	movf	___ftdiv@f1+1,w
 20610  26A7  00CD               	movwf	??___ftdiv+1
 20611  26A8  084B               	movf	___ftdiv@f1+2,w
 20612  26A9  00CE               	movwf	??___ftdiv+2
 20613  26AA  1003               	clrc
 20614  26AB  0D4D               	rlf	??___ftdiv+1,w
 20615  26AC  0D4E               	rlf	??___ftdiv+2,w
 20616  26AD  00CF               	movwf	??___ftdiv+3
 20617  26AE  084F               	movf	??___ftdiv+3,w
 20618  26AF  00D4               	movwf	___ftdiv@exp
 20619  26B0  0854               	movf	___ftdiv@exp,w
 20620  26B1  1D03               	btfss	3,2
 20621  26B2  2EBA               	goto	l5712
 20622  26B3  3000               	movlw	0
 20623  26B4  00C6               	movwf	?___ftdiv
 20624  26B5  3000               	movlw	0
 20625  26B6  00C7               	movwf	?___ftdiv+1
 20626  26B7  3000               	movlw	0
 20627  26B8  00C8               	movwf	?___ftdiv+2
 20628  26B9  0008               	return
 20629  26BA                     l5712:	
 20630  26BA  0846               	movf	___ftdiv@f2,w
 20631  26BB  00CC               	movwf	??___ftdiv
 20632  26BC  0847               	movf	___ftdiv@f2+1,w
 20633  26BD  00CD               	movwf	??___ftdiv+1
 20634  26BE  0848               	movf	___ftdiv@f2+2,w
 20635  26BF  00CE               	movwf	??___ftdiv+2
 20636  26C0  1003               	clrc
 20637  26C1  0D4D               	rlf	??___ftdiv+1,w
 20638  26C2  0D4E               	rlf	??___ftdiv+2,w
 20639  26C3  00CF               	movwf	??___ftdiv+3
 20640  26C4  084F               	movf	??___ftdiv+3,w
 20641  26C5  00D5               	movwf	___ftdiv@sign
 20642  26C6  0855               	movf	___ftdiv@sign,w
 20643  26C7  1D03               	btfss	3,2
 20644  26C8  2ED0               	goto	l5718
 20645  26C9  3000               	movlw	0
 20646  26CA  00C6               	movwf	?___ftdiv
 20647  26CB  3000               	movlw	0
 20648  26CC  00C7               	movwf	?___ftdiv+1
 20649  26CD  3000               	movlw	0
 20650  26CE  00C8               	movwf	?___ftdiv+2
 20651  26CF  0008               	return
 20652  26D0                     l5718:	
 20653  26D0  3000               	movlw	0
 20654  26D1  00D1               	movwf	___ftdiv@f3
 20655  26D2  3000               	movlw	0
 20656  26D3  00D2               	movwf	___ftdiv@f3+1
 20657  26D4  3000               	movlw	0
 20658  26D5  00D3               	movwf	___ftdiv@f3+2
 20659  26D6  3089               	movlw	137
 20660  26D7  0755               	addwf	___ftdiv@sign,w
 20661  26D8  00CC               	movwf	??___ftdiv
 20662  26D9  084C               	movf	??___ftdiv,w
 20663  26DA  02D4               	subwf	___ftdiv@exp,f
 20664  26DB  0849               	movf	___ftdiv@f1,w
 20665  26DC  00CC               	movwf	??___ftdiv
 20666  26DD  084A               	movf	___ftdiv@f1+1,w
 20667  26DE  00CD               	movwf	??___ftdiv+1
 20668  26DF  084B               	movf	___ftdiv@f1+2,w
 20669  26E0  00CE               	movwf	??___ftdiv+2
 20670  26E1  3010               	movlw	16
 20671  26E2                     u7035:	
 20672  26E2  36CE               	lsrf	??___ftdiv+2,f
 20673  26E3  0CCD               	rrf	??___ftdiv+1,f
 20674  26E4  0CCC               	rrf	??___ftdiv,f
 20675  26E5  0B89               	decfsz	9,f
 20676  26E6  2EE2               	goto	u7035
 20677  26E7  084C               	movf	??___ftdiv,w
 20678  26E8  00CF               	movwf	??___ftdiv+3
 20679  26E9  084F               	movf	??___ftdiv+3,w
 20680  26EA  00D5               	movwf	___ftdiv@sign
 20681  26EB  0846               	movf	___ftdiv@f2,w
 20682  26EC  00CC               	movwf	??___ftdiv
 20683  26ED  0847               	movf	___ftdiv@f2+1,w
 20684  26EE  00CD               	movwf	??___ftdiv+1
 20685  26EF  0848               	movf	___ftdiv@f2+2,w
 20686  26F0  00CE               	movwf	??___ftdiv+2
 20687  26F1  3010               	movlw	16
 20688  26F2                     u7045:	
 20689  26F2  36CE               	lsrf	??___ftdiv+2,f
 20690  26F3  0CCD               	rrf	??___ftdiv+1,f
 20691  26F4  0CCC               	rrf	??___ftdiv,f
 20692  26F5  0B89               	decfsz	9,f
 20693  26F6  2EF2               	goto	u7045
 20694  26F7  084C               	movf	??___ftdiv,w
 20695  26F8  00CF               	movwf	??___ftdiv+3
 20696  26F9  084F               	movf	??___ftdiv+3,w
 20697  26FA  06D5               	xorwf	___ftdiv@sign,f
 20698  26FB  3080               	movlw	128
 20699  26FC  00CC               	movwf	??___ftdiv
 20700  26FD  084C               	movf	??___ftdiv,w
 20701  26FE  05D5               	andwf	___ftdiv@sign,f
 20702  26FF  17CA               	bsf	___ftdiv@f1+1,7
 20703  2700  30FF               	movlw	255
 20704  2701  05C9               	andwf	___ftdiv@f1,f
 20705  2702  30FF               	movlw	255
 20706  2703  05CA               	andwf	___ftdiv@f1+1,f
 20707  2704  3000               	movlw	0
 20708  2705  05CB               	andwf	___ftdiv@f1+2,f
 20709  2706  17C7               	bsf	___ftdiv@f2+1,7
 20710  2707  30FF               	movlw	255
 20711  2708  05C6               	andwf	___ftdiv@f2,f
 20712  2709  30FF               	movlw	255
 20713  270A  05C7               	andwf	___ftdiv@f2+1,f
 20714  270B  3000               	movlw	0
 20715  270C  05C8               	andwf	___ftdiv@f2+2,f
 20716  270D  3018               	movlw	24
 20717  270E  00CC               	movwf	??___ftdiv
 20718  270F  084C               	movf	??___ftdiv,w
 20719  2710  00D0               	movwf	___ftdiv@cntr
 20720  2711                     l5732:	
 20721  2711  3001               	movlw	1
 20722  2712                     u7055:	
 20723  2712  35D1               	lslf	___ftdiv@f3,f
 20724  2713  0DD2               	rlf	___ftdiv@f3+1,f
 20725  2714  0DD3               	rlf	___ftdiv@f3+2,f
 20726  2715  0B89               	decfsz	9,f
 20727  2716  2F12               	goto	u7055
 20728  2717  0848               	movf	___ftdiv@f2+2,w
 20729  2718  024B               	subwf	___ftdiv@f1+2,w
 20730  2719  1D03               	skipz
 20731  271A  2F21               	goto	u7065
 20732  271B  0847               	movf	___ftdiv@f2+1,w
 20733  271C  024A               	subwf	___ftdiv@f1+1,w
 20734  271D  1D03               	skipz
 20735  271E  2F21               	goto	u7065
 20736  271F  0846               	movf	___ftdiv@f2,w
 20737  2720  0249               	subwf	___ftdiv@f1,w
 20738  2721                     u7065:	
 20739  2721  1C03               	skipc
 20740  2722  2F2A               	goto	l5740
 20741  2723  0846               	movf	___ftdiv@f2,w
 20742  2724  02C9               	subwf	___ftdiv@f1,f
 20743  2725  0847               	movf	___ftdiv@f2+1,w
 20744  2726  3BCA               	subwfb	___ftdiv@f1+1,f
 20745  2727  0848               	movf	___ftdiv@f2+2,w
 20746  2728  3BCB               	subwfb	___ftdiv@f1+2,f
 20747  2729  1451               	bsf	___ftdiv@f3,0
 20748  272A                     l5740:	
 20749  272A  3001               	movlw	1
 20750  272B                     u7075:	
 20751  272B  35C9               	lslf	___ftdiv@f1,f
 20752  272C  0DCA               	rlf	___ftdiv@f1+1,f
 20753  272D  0DCB               	rlf	___ftdiv@f1+2,f
 20754  272E  0B89               	decfsz	9,f
 20755  272F  2F2B               	goto	u7075
 20756  2730  3001               	movlw	1
 20757  2731  02D0               	subwf	___ftdiv@cntr,f
 20758  2732  1D03               	btfss	3,2
 20759  2733  2F11               	goto	l5732
 20760  2734  0851               	movf	___ftdiv@f3,w
 20761  2735  00A0               	movwf	___ftpack@arg
 20762  2736  0852               	movf	___ftdiv@f3+1,w
 20763  2737  00A1               	movwf	___ftpack@arg+1
 20764  2738  0853               	movf	___ftdiv@f3+2,w
 20765  2739  00A2               	movwf	___ftpack@arg+2
 20766  273A  0854               	movf	___ftdiv@exp,w
 20767  273B  00CC               	movwf	??___ftdiv
 20768  273C  084C               	movf	??___ftdiv,w
 20769  273D  00A3               	movwf	___ftpack@exp
 20770  273E  0855               	movf	___ftdiv@sign,w
 20771  273F  00CD               	movwf	??___ftdiv+1
 20772  2740  084D               	movf	??___ftdiv+1,w
 20773  2741  00A4               	movwf	___ftpack@sign
 20774  2742  31A3  23B9         	fcall	___ftpack
 20775  2744  0020               	movlb	0	; select bank0
 20776  2745  0820               	movf	?___ftpack,w
 20777  2746  00C6               	movwf	?___ftdiv
 20778  2747  0821               	movf	?___ftpack+1,w
 20779  2748  00C7               	movwf	?___ftdiv+1
 20780  2749  0822               	movf	?___ftpack+2,w
 20781  274A  00C8               	movwf	?___ftdiv+2
 20782  274B  0008               	return
 20783  274C                     __end_of___ftdiv:	
 20784                           
 20785                           	psect	text48
 20786  2B8D                     __ptext48:	
 20787 ;; *************** function ___bmul *****************
 20788 ;; Defined at:
 20789 ;;		line 4 in file "/opt/microchip/xc8/v1.35/sources/common/Umul8.c"
 20790 ;; Parameters:    Size  Location     Type
 20791 ;;  multiplier      1    wreg     unsigned char 
 20792 ;;  multiplicand    1    0[BANK0 ] unsigned char 
 20793 ;; Auto vars:     Size  Location     Type
 20794 ;;  multiplier      1    3[BANK0 ] unsigned char 
 20795 ;;  product         1    2[BANK0 ] unsigned char 
 20796 ;; Return value:  Size  Location     Type
 20797 ;;                  1    wreg      unsigned char 
 20798 ;; Registers used:
 20799 ;;		wreg, status,2, status,0
 20800 ;; Tracked objects:
 20801 ;;		On entry : 0/0
 20802 ;;		On exit  : 0/0
 20803 ;;		Unchanged: 0/0
 20804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20805 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20806 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20807 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20808 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20809 ;;Total ram usage:        4 bytes
 20810 ;; Hardware stack levels used:    1
 20811 ;; Hardware stack levels required when called:    5
 20812 ;; This function calls:
 20813 ;;		Nothing
 20814 ;; This function is called by:
 20815 ;;		_strtod
 20816 ;; This function uses a non-reentrant model
 20817 ;;
 20818                           
 20819                           
 20820                           ;psect for function ___bmul
 20821  2B8D                     ___bmul:	
 20822                           
 20823                           ;incstack = 0
 20824                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 20825                           ;___bmul@multiplier stored from wreg
 20826  2B8D  0020               	movlb	0	; select bank0
 20827  2B8E  00A3               	movwf	___bmul@multiplier
 20828  2B8F  01A2               	clrf	___bmul@product
 20829  2B90                     l6006:	
 20830  2B90  1C23               	btfss	___bmul@multiplier,0
 20831  2B91  2B96               	goto	l6010
 20832  2B92  0820               	movf	___bmul@multiplicand,w
 20833  2B93  00A1               	movwf	??___bmul
 20834  2B94  0821               	movf	??___bmul,w
 20835  2B95  07A2               	addwf	___bmul@product,f
 20836  2B96                     l6010:	
 20837  2B96  1003               	clrc
 20838  2B97  0DA0               	rlf	___bmul@multiplicand,f
 20839  2B98  1003               	clrc
 20840  2B99  0CA3               	rrf	___bmul@multiplier,f
 20841  2B9A  0823               	movf	___bmul@multiplier,w
 20842  2B9B  1D03               	btfss	3,2
 20843  2B9C  2B90               	goto	l6006
 20844  2B9D  0822               	movf	___bmul@product,w
 20845  2B9E  0008               	return
 20846  2B9F                     __end_of___bmul:	
 20847                           
 20848                           	psect	text49
 20849  2163                     __ptext49:	
 20850 ;; *************** function ___altoft *****************
 20851 ;; Defined at:
 20852 ;;		line 42 in file "/opt/microchip/xc8/v1.35/sources/common/altoft.c"
 20853 ;; Parameters:    Size  Location     Type
 20854 ;;  c               4   61[BANK0 ] long 
 20855 ;; Auto vars:     Size  Location     Type
 20856 ;;  sign            1   68[BANK0 ] unsigned char 
 20857 ;;  exp             1   67[BANK0 ] unsigned char 
 20858 ;; Return value:  Size  Location     Type
 20859 ;;                  3   61[BANK0 ] float 
 20860 ;; Registers used:
 20861 ;;		wreg, status,2, status,0, pclath, cstack
 20862 ;; Tracked objects:
 20863 ;;		On entry : 0/0
 20864 ;;		On exit  : 0/0
 20865 ;;		Unchanged: 0/0
 20866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20867 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20868 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20869 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20870 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20871 ;;Total ram usage:        8 bytes
 20872 ;; Hardware stack levels used:    1
 20873 ;; Hardware stack levels required when called:    6
 20874 ;; This function calls:
 20875 ;;		___ftpack
 20876 ;; This function is called by:
 20877 ;;		_strtod
 20878 ;;		_trunc
 20879 ;;		_floor
 20880 ;; This function uses a non-reentrant model
 20881 ;;
 20882                           
 20883                           
 20884                           ;psect for function ___altoft
 20885  2163                     ___altoft:	
 20886                           
 20887                           ;incstack = 0
 20888                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
 20889  2163  0020               	movlb	0	; select bank0
 20890  2164  01E4               	clrf	___altoft@sign
 20891  2165  308E               	movlw	142
 20892  2166  00E1               	movwf	??___altoft
 20893  2167  0861               	movf	??___altoft,w
 20894  2168  00E3               	movwf	___altoft@exp
 20895  2169  1FE0               	btfss	___altoft@c+3,7
 20896  216A  2978               	goto	l5684
 20897  216B  09DD               	comf	___altoft@c,f
 20898  216C  09DE               	comf	___altoft@c+1,f
 20899  216D  09DF               	comf	___altoft@c+2,f
 20900  216E  09E0               	comf	___altoft@c+3,f
 20901  216F  0ADD               	incf	___altoft@c,f
 20902  2170  1903               	skipnz
 20903  2171  0ADE               	incf	___altoft@c+1,f
 20904  2172  1903               	skipnz
 20905  2173  0ADF               	incf	___altoft@c+2,f
 20906  2174  1903               	skipnz
 20907  2175  0AE0               	incf	___altoft@c+3,f
 20908  2176  01E4               	clrf	___altoft@sign
 20909  2177  0AE4               	incf	___altoft@sign,f
 20910  2178                     l5684:	
 20911  2178  30FF               	movlw	255
 20912  2179  0560               	andwf	___altoft@c+3,w
 20913  217A  1903               	btfsc	3,2
 20914  217B  2988               	goto	l5686
 20915  217C  3001               	movlw	1
 20916  217D                     u6975:	
 20917  217D  36E0               	lsrf	___altoft@c+3,f
 20918  217E  0CDF               	rrf	___altoft@c+2,f
 20919  217F  0CDE               	rrf	___altoft@c+1,f
 20920  2180  0CDD               	rrf	___altoft@c,f
 20921  2181  0B89               	decfsz	9,f
 20922  2182  297D               	goto	u6975
 20923  2183  3001               	movlw	1
 20924  2184  00E1               	movwf	??___altoft
 20925  2185  0861               	movf	??___altoft,w
 20926  2186  07E3               	addwf	___altoft@exp,f
 20927  2187  2978               	goto	l5684
 20928  2188                     l5686:	
 20929  2188  085D               	movf	___altoft@c,w
 20930  2189  00A0               	movwf	___ftpack@arg
 20931  218A  085E               	movf	___altoft@c+1,w
 20932  218B  00A1               	movwf	___ftpack@arg+1
 20933  218C  085F               	movf	___altoft@c+2,w
 20934  218D  00A2               	movwf	___ftpack@arg+2
 20935  218E  0863               	movf	___altoft@exp,w
 20936  218F  00E1               	movwf	??___altoft
 20937  2190  0861               	movf	??___altoft,w
 20938  2191  00A3               	movwf	___ftpack@exp
 20939  2192  0864               	movf	___altoft@sign,w
 20940  2193  00E2               	movwf	??___altoft+1
 20941  2194  0862               	movf	??___altoft+1,w
 20942  2195  00A4               	movwf	___ftpack@sign
 20943  2196  31A3  23B9         	fcall	___ftpack
 20944  2198  0020               	movlb	0	; select bank0
 20945  2199  0820               	movf	?___ftpack,w
 20946  219A  00DD               	movwf	?___altoft
 20947  219B  0821               	movf	?___ftpack+1,w
 20948  219C  00DE               	movwf	?___altoft+1
 20949  219D  0822               	movf	?___ftpack+2,w
 20950  219E  00DF               	movwf	?___altoft+2
 20951  219F  0008               	return
 20952  21A0                     __end_of___altoft:	
 20953                           
 20954                           	psect	text50
 20955  23B9                     __ptext50:	
 20956 ;; *************** function ___ftpack *****************
 20957 ;; Defined at:
 20958 ;;		line 62 in file "/opt/microchip/xc8/v1.35/sources/common/float.c"
 20959 ;; Parameters:    Size  Location     Type
 20960 ;;  arg             3    0[BANK0 ] unsigned um
 20961 ;;  exp             1    3[BANK0 ] unsigned char 
 20962 ;;  sign            1    4[BANK0 ] unsigned char 
 20963 ;; Auto vars:     Size  Location     Type
 20964 ;;		None
 20965 ;; Return value:  Size  Location     Type
 20966 ;;                  3    0[BANK0 ] float 
 20967 ;; Registers used:
 20968 ;;		wreg, status,2, status,0
 20969 ;; Tracked objects:
 20970 ;;		On entry : 0/0
 20971 ;;		On exit  : 0/0
 20972 ;;		Unchanged: 0/0
 20973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 20974 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20976 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20977 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 20978 ;;Total ram usage:        8 bytes
 20979 ;; Hardware stack levels used:    1
 20980 ;; Hardware stack levels required when called:    5
 20981 ;; This function calls:
 20982 ;;		Nothing
 20983 ;; This function is called by:
 20984 ;;		___altoft
 20985 ;;		___ftadd
 20986 ;;		___ftdiv
 20987 ;;		___ftmul
 20988 ;;		___lltoft
 20989 ;; This function uses a non-reentrant model
 20990 ;;
 20991                           
 20992                           
 20993                           ;psect for function ___ftpack
 20994  23B9                     ___ftpack:	
 20995                           
 20996                           ;incstack = 0
 20997                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 20998  23B9  0020               	movlb	0	; select bank0
 20999  23BA  0823               	movf	___ftpack@exp,w
 21000  23BB  1903               	btfsc	3,2
 21001  23BC  2BC2               	goto	l5504
 21002  23BD  0822               	movf	___ftpack@arg+2,w
 21003  23BE  0421               	iorwf	___ftpack@arg+1,w
 21004  23BF  0420               	iorwf	___ftpack@arg,w
 21005  23C0  1D03               	skipz
 21006  23C1  2BD3               	goto	l5510
 21007  23C2                     l5504:	
 21008  23C2  3000               	movlw	0
 21009  23C3  00A0               	movwf	?___ftpack
 21010  23C4  3000               	movlw	0
 21011  23C5  00A1               	movwf	?___ftpack+1
 21012  23C6  3000               	movlw	0
 21013  23C7  00A2               	movwf	?___ftpack+2
 21014  23C8  0008               	return
 21015  23C9                     l5508:	
 21016  23C9  3001               	movlw	1
 21017  23CA  00A5               	movwf	??___ftpack
 21018  23CB  0825               	movf	??___ftpack,w
 21019  23CC  07A3               	addwf	___ftpack@exp,f
 21020  23CD  3001               	movlw	1
 21021  23CE                     u6465:	
 21022  23CE  36A2               	lsrf	___ftpack@arg+2,f
 21023  23CF  0CA1               	rrf	___ftpack@arg+1,f
 21024  23D0  0CA0               	rrf	___ftpack@arg,f
 21025  23D1  0B89               	decfsz	9,f
 21026  23D2  2BCE               	goto	u6465
 21027  23D3                     l5510:	
 21028  23D3  30FE               	movlw	254
 21029  23D4  0522               	andwf	___ftpack@arg+2,w
 21030  23D5  1903               	btfsc	3,2
 21031  23D6  2BEC               	goto	l1161
 21032  23D7  2BC9               	goto	l5508
 21033  23D8                     l5512:	
 21034  23D8  3001               	movlw	1
 21035  23D9  00A5               	movwf	??___ftpack
 21036  23DA  0825               	movf	??___ftpack,w
 21037  23DB  07A3               	addwf	___ftpack@exp,f
 21038  23DC  3001               	movlw	1
 21039  23DD  07A0               	addwf	___ftpack@arg,f
 21040  23DE  3000               	movlw	0
 21041  23DF  1803               	skipnc
 21042  23E0  3001               	movlw	1
 21043  23E1  07A1               	addwf	___ftpack@arg+1,f
 21044  23E2  3000               	movlw	0
 21045  23E3  1803               	skipnc
 21046  23E4  3001               	movlw	1
 21047  23E5  07A2               	addwf	___ftpack@arg+2,f
 21048  23E6  3001               	movlw	1
 21049  23E7                     u6485:	
 21050  23E7  36A2               	lsrf	___ftpack@arg+2,f
 21051  23E8  0CA1               	rrf	___ftpack@arg+1,f
 21052  23E9  0CA0               	rrf	___ftpack@arg,f
 21053  23EA  0B89               	decfsz	9,f
 21054  23EB  2BE7               	goto	u6485
 21055  23EC                     l1161:	
 21056  23EC  30FF               	movlw	255
 21057  23ED  0522               	andwf	___ftpack@arg+2,w
 21058  23EE  1903               	btfsc	3,2
 21059  23EF  2BF9               	goto	l5520
 21060  23F0  2BD8               	goto	l5512
 21061  23F1                     l5518:	
 21062  23F1  3001               	movlw	1
 21063  23F2  02A3               	subwf	___ftpack@exp,f
 21064  23F3  3001               	movlw	1
 21065  23F4                     u6505:	
 21066  23F4  35A0               	lslf	___ftpack@arg,f
 21067  23F5  0DA1               	rlf	___ftpack@arg+1,f
 21068  23F6  0DA2               	rlf	___ftpack@arg+2,f
 21069  23F7  0B89               	decfsz	9,f
 21070  23F8  2BF4               	goto	u6505
 21071  23F9                     l5520:	
 21072  23F9  1BA1               	btfsc	___ftpack@arg+1,7
 21073  23FA  2BFF               	goto	l1168
 21074  23FB  3002               	movlw	2
 21075  23FC  0223               	subwf	___ftpack@exp,w
 21076  23FD  1803               	skipnc
 21077  23FE  2BF1               	goto	l5518
 21078  23FF                     l1168:	
 21079  23FF  1823               	btfsc	___ftpack@exp,0
 21080  2400  2C07               	goto	l1169
 21081  2401  30FF               	movlw	255
 21082  2402  05A0               	andwf	___ftpack@arg,f
 21083  2403  307F               	movlw	127
 21084  2404  05A1               	andwf	___ftpack@arg+1,f
 21085  2405  30FF               	movlw	255
 21086  2406  05A2               	andwf	___ftpack@arg+2,f
 21087  2407                     l1169:	
 21088  2407  1003               	clrc
 21089  2408  0CA3               	rrf	___ftpack@exp,f
 21090  2409  0823               	movf	___ftpack@exp,w
 21091  240A  00A5               	movwf	??___ftpack
 21092  240B  01A6               	clrf	??___ftpack+1
 21093  240C  01A7               	clrf	??___ftpack+2
 21094  240D  3010               	movlw	16
 21095  240E                     u6545:	
 21096  240E  35A5               	lslf	??___ftpack,f
 21097  240F  0DA6               	rlf	??___ftpack+1,f
 21098  2410  0DA7               	rlf	??___ftpack+2,f
 21099  2411  0B89               	decfsz	9,f
 21100  2412  2C0E               	goto	u6545
 21101  2413  0825               	movf	??___ftpack,w
 21102  2414  04A0               	iorwf	___ftpack@arg,f
 21103  2415  0826               	movf	??___ftpack+1,w
 21104  2416  04A1               	iorwf	___ftpack@arg+1,f
 21105  2417  0827               	movf	??___ftpack+2,w
 21106  2418  04A2               	iorwf	___ftpack@arg+2,f
 21107  2419  0824               	movf	___ftpack@sign,w
 21108  241A  1903               	btfsc	3,2
 21109  241B  0008               	return
 21110  241C  17A2               	bsf	___ftpack@arg+2,7
 21111  241D  0008               	return
 21112  241E                     __end_of___ftpack:	
 21113                           
 21114                           	psect	text51
 21115  2D51                     __ptext51:	
 21116 ;; *************** function _SYSTEM_Initialize *****************
 21117 ;; Defined at:
 21118 ;;		line 71 in file "mcc_generated_files/mcc.c"
 21119 ;; Parameters:    Size  Location     Type
 21120 ;;		None
 21121 ;; Auto vars:     Size  Location     Type
 21122 ;;		None
 21123 ;; Return value:  Size  Location     Type
 21124 ;;		None               void
 21125 ;; Registers used:
 21126 ;;		wreg, status,2, status,0, pclath, cstack
 21127 ;; Tracked objects:
 21128 ;;		On entry : 0/0
 21129 ;;		On exit  : 0/0
 21130 ;;		Unchanged: 0/0
 21131 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21136 ;;Total ram usage:        0 bytes
 21137 ;; Hardware stack levels used:    1
 21138 ;; Hardware stack levels required when called:    7
 21139 ;; This function calls:
 21140 ;;		_ADC_Initialize
 21141 ;;		_EUSART_Initialize
 21142 ;;		_FVR_Initialize
 21143 ;;		_OSCILLATOR_Initialize
 21144 ;;		_PIN_MANAGER_Initialize
 21145 ;;		_PWM1_Initialize
 21146 ;;		_PWM2_Initialize
 21147 ;;		_PWM3_Initialize
 21148 ;;		_SPI_Initialize
 21149 ;;		_TMR0_Initialize
 21150 ;;		_TMR2_Initialize
 21151 ;; This function is called by:
 21152 ;;		_main
 21153 ;; This function uses a non-reentrant model
 21154 ;;
 21155                           
 21156                           
 21157                           ;psect for function _SYSTEM_Initialize
 21158  2D51                     _SYSTEM_Initialize:	
 21159                           
 21160                           ;mcc.c: 72: OSCILLATOR_Initialize();
 21161                           
 21162                           ;incstack = 0
 21163                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 21164  2D51  31AB  231D  31AD   	fcall	_OSCILLATOR_Initialize
 21165                           
 21166                           ;mcc.c: 73: PIN_MANAGER_Initialize();
 21167  2D54  31AE  26E5  31AD   	fcall	_PIN_MANAGER_Initialize
 21168                           
 21169                           ;mcc.c: 74: TMR0_Initialize();
 21170  2D57  31AB  236D  31AD   	fcall	_TMR0_Initialize
 21171                           
 21172                           ;mcc.c: 75: ADC_Initialize();
 21173  2D5A  31AB  233E  31AD   	fcall	_ADC_Initialize
 21174                           
 21175                           ;mcc.c: 76: FVR_Initialize();
 21176  2D5D  31AB  2319  31AD   	fcall	_FVR_Initialize
 21177                           
 21178                           ;mcc.c: 77: EUSART_Initialize();
 21179  2D60  31AC  242E  31AD   	fcall	_EUSART_Initialize
 21180                           
 21181                           ;mcc.c: 78: SPI_Initialize();
 21182  2D63  31AB  2323  31AD   	fcall	_SPI_Initialize
 21183                           
 21184                           ;mcc.c: 79: TMR2_Initialize();
 21185  2D66  31AB  2347  31AD   	fcall	_TMR2_Initialize
 21186                           
 21187                           ;mcc.c: 80: PWM1_Initialize();
 21188  2D69  31AB  2329  31AD   	fcall	_PWM1_Initialize
 21189                           
 21190                           ;mcc.c: 81: PWM2_Initialize();
 21191  2D6C  31AB  2330  31AD   	fcall	_PWM2_Initialize
 21192                           
 21193                           ;mcc.c: 82: PWM3_Initialize();
 21194  2D6F  31AB  2337         	fcall	_PWM3_Initialize
 21195  2D71  0008               	return
 21196  2D72                     __end_of_SYSTEM_Initialize:	
 21197                           
 21198                           	psect	text52
 21199  2B47                     __ptext52:	
 21200 ;; *************** function _TMR2_Initialize *****************
 21201 ;; Defined at:
 21202 ;;		line 58 in file "mcc_generated_files/tmr2.c"
 21203 ;; Parameters:    Size  Location     Type
 21204 ;;		None
 21205 ;; Auto vars:     Size  Location     Type
 21206 ;;		None
 21207 ;; Return value:  Size  Location     Type
 21208 ;;		None               void
 21209 ;; Registers used:
 21210 ;;		wreg, status,2, status,0, pclath, cstack
 21211 ;; Tracked objects:
 21212 ;;		On entry : 0/0
 21213 ;;		On exit  : 0/0
 21214 ;;		Unchanged: 0/0
 21215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21220 ;;Total ram usage:        0 bytes
 21221 ;; Hardware stack levels used:    1
 21222 ;; Hardware stack levels required when called:    6
 21223 ;; This function calls:
 21224 ;;		_TMR2_StartTimer
 21225 ;; This function is called by:
 21226 ;;		_SYSTEM_Initialize
 21227 ;; This function uses a non-reentrant model
 21228 ;;
 21229                           
 21230                           
 21231                           ;psect for function _TMR2_Initialize
 21232  2B47                     _TMR2_Initialize:	
 21233                           
 21234                           ;tmr2.c: 62: T2CON = 0x00;
 21235                           
 21236                           ;incstack = 0
 21237                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 21238  2B47  0020               	movlb	0	; select bank0
 21239  2B48  019C               	clrf	28	;volatile
 21240                           
 21241                           ;tmr2.c: 65: PR2 = 0xFF;
 21242  2B49  30FF               	movlw	255
 21243  2B4A  009B               	movwf	27	;volatile
 21244                           
 21245                           ;tmr2.c: 68: TMR2 = 0x00;
 21246  2B4B  019A               	clrf	26	;volatile
 21247                           
 21248                           ;tmr2.c: 71: PIR1bits.TMR2IF = 0;
 21249  2B4C  1091               	bcf	17,1	;volatile
 21250                           
 21251                           ;tmr2.c: 74: TMR2_StartTimer();
 21252  2B4D  3198  2000         	fcall	_TMR2_StartTimer
 21253  2B4F  0008               	return
 21254  2B50                     __end_of_TMR2_Initialize:	
 21255                           
 21256                           	psect	text53
 21257  1800                     __ptext53:	
 21258 ;; *************** function _TMR2_StartTimer *****************
 21259 ;; Defined at:
 21260 ;;		line 77 in file "mcc_generated_files/tmr2.c"
 21261 ;; Parameters:    Size  Location     Type
 21262 ;;		None
 21263 ;; Auto vars:     Size  Location     Type
 21264 ;;		None
 21265 ;; Return value:  Size  Location     Type
 21266 ;;		None               void
 21267 ;; Registers used:
 21268 ;;		None
 21269 ;; Tracked objects:
 21270 ;;		On entry : 0/0
 21271 ;;		On exit  : 0/0
 21272 ;;		Unchanged: 0/0
 21273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21278 ;;Total ram usage:        0 bytes
 21279 ;; Hardware stack levels used:    1
 21280 ;; Hardware stack levels required when called:    5
 21281 ;; This function calls:
 21282 ;;		Nothing
 21283 ;; This function is called by:
 21284 ;;		_TMR2_Initialize
 21285 ;; This function uses a non-reentrant model
 21286 ;;
 21287                           
 21288                           
 21289                           ;psect for function _TMR2_StartTimer
 21290  1800                     _TMR2_StartTimer:	
 21291                           
 21292                           ;tmr2.c: 79: T2CONbits.TMR2ON = 1;
 21293                           
 21294                           ;incstack = 0
 21295                           ; Regs used in _TMR2_StartTimer: []
 21296  1800  0020               	movlb	0	; select bank0
 21297  1801  151C               	bsf	28,2	;volatile
 21298  1802  0008               	return
 21299  1803                     __end_of_TMR2_StartTimer:	
 21300                           
 21301                           	psect	text54
 21302  2B6D                     __ptext54:	
 21303 ;; *************** function _TMR0_Initialize *****************
 21304 ;; Defined at:
 21305 ;;		line 65 in file "mcc_generated_files/tmr0.c"
 21306 ;; Parameters:    Size  Location     Type
 21307 ;;		None
 21308 ;; Auto vars:     Size  Location     Type
 21309 ;;		None
 21310 ;; Return value:  Size  Location     Type
 21311 ;;		None               void
 21312 ;; Registers used:
 21313 ;;		wreg, status,2
 21314 ;; Tracked objects:
 21315 ;;		On entry : 0/0
 21316 ;;		On exit  : 0/0
 21317 ;;		Unchanged: 0/0
 21318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21321 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21322 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21323 ;;Total ram usage:        1 bytes
 21324 ;; Hardware stack levels used:    1
 21325 ;; Hardware stack levels required when called:    5
 21326 ;; This function calls:
 21327 ;;		Nothing
 21328 ;; This function is called by:
 21329 ;;		_SYSTEM_Initialize
 21330 ;; This function uses a non-reentrant model
 21331 ;;
 21332                           
 21333                           
 21334                           ;psect for function _TMR0_Initialize
 21335  2B6D                     _TMR0_Initialize:	
 21336                           
 21337                           ;tmr0.c: 69: OPTION_REG = (OPTION_REG & 0xC0) | 0xD3 & 0x3F;
 21338                           
 21339                           ;incstack = 0
 21340                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
 21341  2B6D  0021               	movlb	1	; select bank1
 21342  2B6E  0815               	movf	21,w	;volatile
 21343  2B6F  39C0               	andlw	192
 21344  2B70  3813               	iorlw	19
 21345  2B71  0095               	movwf	21	;volatile
 21346                           
 21347                           ;tmr0.c: 72: TMR0 = 0x06;
 21348  2B72  3006               	movlw	6
 21349  2B73  0020               	movlb	0	; select bank0
 21350  2B74  0095               	movwf	21	;volatile
 21351                           
 21352                           ;tmr0.c: 75: timer0ReloadVal = 6;
 21353  2B75  3006               	movlw	6
 21354  2B76  00A0               	movwf	??_TMR0_Initialize
 21355  2B77  0820               	movf	??_TMR0_Initialize,w
 21356  2B78  0021               	movlb	1	; select bank1
 21357  2B79  00E9               	movwf	_timer0ReloadVal^(0+128)	;volatile
 21358                           
 21359                           ;tmr0.c: 78: INTCONbits.TMR0IF = 0;
 21360  2B7A  110B               	bcf	11,2	;volatile
 21361                           
 21362                           ;tmr0.c: 81: INTCONbits.TMR0IE = 1;
 21363  2B7B  168B               	bsf	11,5	;volatile
 21364  2B7C  0008               	return
 21365  2B7D                     __end_of_TMR0_Initialize:	
 21366                           
 21367                           	psect	text55
 21368  2B23                     __ptext55:	
 21369 ;; *************** function _SPI_Initialize *****************
 21370 ;; Defined at:
 21371 ;;		line 64 in file "mcc_generated_files/spi.c"
 21372 ;; Parameters:    Size  Location     Type
 21373 ;;		None
 21374 ;; Auto vars:     Size  Location     Type
 21375 ;;		None
 21376 ;; Return value:  Size  Location     Type
 21377 ;;		None               void
 21378 ;; Registers used:
 21379 ;;		wreg, status,2
 21380 ;; Tracked objects:
 21381 ;;		On entry : 0/0
 21382 ;;		On exit  : 0/0
 21383 ;;		Unchanged: 0/0
 21384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21389 ;;Total ram usage:        0 bytes
 21390 ;; Hardware stack levels used:    1
 21391 ;; Hardware stack levels required when called:    5
 21392 ;; This function calls:
 21393 ;;		Nothing
 21394 ;; This function is called by:
 21395 ;;		_SYSTEM_Initialize
 21396 ;; This function uses a non-reentrant model
 21397 ;;
 21398                           
 21399                           
 21400                           ;psect for function _SPI_Initialize
 21401  2B23                     _SPI_Initialize:	
 21402                           
 21403                           ;spi.c: 68: SSP1STAT = 0x00;
 21404                           
 21405                           ;incstack = 0
 21406                           ; Regs used in _SPI_Initialize: [wreg+status,2]
 21407  2B23  0024               	movlb	4	; select bank4
 21408  2B24  0194               	clrf	20	;volatile
 21409                           
 21410                           ;spi.c: 71: SSP1CON1 = 0x20;
 21411  2B25  3020               	movlw	32
 21412  2B26  0095               	movwf	21	;volatile
 21413                           
 21414                           ;spi.c: 74: SSP1ADD = 0x00;
 21415  2B27  0192               	clrf	18	;volatile
 21416  2B28  0008               	return
 21417  2B29                     __end_of_SPI_Initialize:	
 21418                           
 21419                           	psect	text56
 21420  2B37                     __ptext56:	
 21421 ;; *************** function _PWM3_Initialize *****************
 21422 ;; Defined at:
 21423 ;;		line 64 in file "mcc_generated_files/pwm3.c"
 21424 ;; Parameters:    Size  Location     Type
 21425 ;;		None
 21426 ;; Auto vars:     Size  Location     Type
 21427 ;;		None
 21428 ;; Return value:  Size  Location     Type
 21429 ;;		None               void
 21430 ;; Registers used:
 21431 ;;		wreg, status,2
 21432 ;; Tracked objects:
 21433 ;;		On entry : 0/0
 21434 ;;		On exit  : 0/0
 21435 ;;		Unchanged: 0/0
 21436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21441 ;;Total ram usage:        0 bytes
 21442 ;; Hardware stack levels used:    1
 21443 ;; Hardware stack levels required when called:    5
 21444 ;; This function calls:
 21445 ;;		Nothing
 21446 ;; This function is called by:
 21447 ;;		_SYSTEM_Initialize
 21448 ;; This function uses a non-reentrant model
 21449 ;;
 21450                           
 21451                           
 21452                           ;psect for function _PWM3_Initialize
 21453  2B37                     _PWM3_Initialize:	
 21454                           
 21455                           ;pwm3.c: 68: CCP3CON = 0x3C;
 21456                           
 21457                           ;incstack = 0
 21458                           ; Regs used in _PWM3_Initialize: [wreg+status,2]
 21459  2B37  303C               	movlw	60
 21460  2B38  0026               	movlb	6	; select bank6
 21461  2B39  0093               	movwf	19	;volatile
 21462                           
 21463                           ;pwm3.c: 71: CCPR3L = 0x7F;
 21464  2B3A  307F               	movlw	127
 21465  2B3B  0091               	movwf	17	;volatile
 21466                           
 21467                           ;pwm3.c: 74: CCPR3H = 0x00;
 21468  2B3C  0192               	clrf	18	;volatile
 21469  2B3D  0008               	return
 21470  2B3E                     __end_of_PWM3_Initialize:	
 21471                           
 21472                           	psect	text57
 21473  2B30                     __ptext57:	
 21474 ;; *************** function _PWM2_Initialize *****************
 21475 ;; Defined at:
 21476 ;;		line 64 in file "mcc_generated_files/pwm2.c"
 21477 ;; Parameters:    Size  Location     Type
 21478 ;;		None
 21479 ;; Auto vars:     Size  Location     Type
 21480 ;;		None
 21481 ;; Return value:  Size  Location     Type
 21482 ;;		None               void
 21483 ;; Registers used:
 21484 ;;		wreg, status,2
 21485 ;; Tracked objects:
 21486 ;;		On entry : 0/0
 21487 ;;		On exit  : 0/0
 21488 ;;		Unchanged: 0/0
 21489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21494 ;;Total ram usage:        0 bytes
 21495 ;; Hardware stack levels used:    1
 21496 ;; Hardware stack levels required when called:    5
 21497 ;; This function calls:
 21498 ;;		Nothing
 21499 ;; This function is called by:
 21500 ;;		_SYSTEM_Initialize
 21501 ;; This function uses a non-reentrant model
 21502 ;;
 21503                           
 21504                           
 21505                           ;psect for function _PWM2_Initialize
 21506  2B30                     _PWM2_Initialize:	
 21507                           
 21508                           ;pwm2.c: 68: CCP2CON = 0x3C;
 21509                           
 21510                           ;incstack = 0
 21511                           ; Regs used in _PWM2_Initialize: [wreg+status,2]
 21512  2B30  303C               	movlw	60
 21513  2B31  0025               	movlb	5	; select bank5
 21514  2B32  009A               	movwf	26	;volatile
 21515                           
 21516                           ;pwm2.c: 71: CCPR2L = 0x7F;
 21517  2B33  307F               	movlw	127
 21518  2B34  0098               	movwf	24	;volatile
 21519                           
 21520                           ;pwm2.c: 74: CCPR2H = 0x00;
 21521  2B35  0199               	clrf	25	;volatile
 21522  2B36  0008               	return
 21523  2B37                     __end_of_PWM2_Initialize:	
 21524                           
 21525                           	psect	text58
 21526  2B29                     __ptext58:	
 21527 ;; *************** function _PWM1_Initialize *****************
 21528 ;; Defined at:
 21529 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 21530 ;; Parameters:    Size  Location     Type
 21531 ;;		None
 21532 ;; Auto vars:     Size  Location     Type
 21533 ;;		None
 21534 ;; Return value:  Size  Location     Type
 21535 ;;		None               void
 21536 ;; Registers used:
 21537 ;;		wreg, status,2
 21538 ;; Tracked objects:
 21539 ;;		On entry : 0/0
 21540 ;;		On exit  : 0/0
 21541 ;;		Unchanged: 0/0
 21542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21547 ;;Total ram usage:        0 bytes
 21548 ;; Hardware stack levels used:    1
 21549 ;; Hardware stack levels required when called:    5
 21550 ;; This function calls:
 21551 ;;		Nothing
 21552 ;; This function is called by:
 21553 ;;		_SYSTEM_Initialize
 21554 ;; This function uses a non-reentrant model
 21555 ;;
 21556                           
 21557                           
 21558                           ;psect for function _PWM1_Initialize
 21559  2B29                     _PWM1_Initialize:	
 21560                           
 21561                           ;pwm1.c: 68: CCP1CON = 0x3C;
 21562                           
 21563                           ;incstack = 0
 21564                           ; Regs used in _PWM1_Initialize: [wreg+status,2]
 21565  2B29  303C               	movlw	60
 21566  2B2A  0025               	movlb	5	; select bank5
 21567  2B2B  0093               	movwf	19	;volatile
 21568                           
 21569                           ;pwm1.c: 71: CCPR1L = 0x7F;
 21570  2B2C  307F               	movlw	127
 21571  2B2D  0091               	movwf	17	;volatile
 21572                           
 21573                           ;pwm1.c: 74: CCPR1H = 0x00;
 21574  2B2E  0192               	clrf	18	;volatile
 21575  2B2F  0008               	return
 21576  2B30                     __end_of_PWM1_Initialize:	
 21577                           
 21578                           	psect	text59
 21579  2EE5                     __ptext59:	
 21580 ;; *************** function _PIN_MANAGER_Initialize *****************
 21581 ;; Defined at:
 21582 ;;		line 50 in file "mcc_generated_files/pin_manager.c"
 21583 ;; Parameters:    Size  Location     Type
 21584 ;;		None
 21585 ;; Auto vars:     Size  Location     Type
 21586 ;;		None
 21587 ;; Return value:  Size  Location     Type
 21588 ;;		None               void
 21589 ;; Registers used:
 21590 ;;		wreg, status,2
 21591 ;; Tracked objects:
 21592 ;;		On entry : 0/0
 21593 ;;		On exit  : 0/0
 21594 ;;		Unchanged: 0/0
 21595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21598 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21599 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21600 ;;Total ram usage:        0 bytes
 21601 ;; Hardware stack levels used:    1
 21602 ;; Hardware stack levels required when called:    5
 21603 ;; This function calls:
 21604 ;;		Nothing
 21605 ;; This function is called by:
 21606 ;;		_SYSTEM_Initialize
 21607 ;; This function uses a non-reentrant model
 21608 ;;
 21609                           
 21610                           
 21611                           ;psect for function _PIN_MANAGER_Initialize
 21612  2EE5                     _PIN_MANAGER_Initialize:	
 21613                           
 21614                           ;pin_manager.c: 51: LATA = 0x00;
 21615                           
 21616                           ;incstack = 0
 21617                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 21618  2EE5  0022               	movlb	2	; select bank2
 21619  2EE6  018C               	clrf	12	;volatile
 21620                           
 21621                           ;pin_manager.c: 52: TRISA = 0x3F;
 21622  2EE7  303F               	movlw	63
 21623  2EE8  0021               	movlb	1	; select bank1
 21624  2EE9  008C               	movwf	12	;volatile
 21625                           
 21626                           ;pin_manager.c: 53: ANSELA = 0x3F;
 21627  2EEA  303F               	movlw	63
 21628  2EEB  0023               	movlb	3	; select bank3
 21629  2EEC  008C               	movwf	12	;volatile
 21630                           
 21631                           ;pin_manager.c: 54: WPUA = 0x00;
 21632  2EED  0024               	movlb	4	; select bank4
 21633  2EEE  018C               	clrf	12	;volatile
 21634                           
 21635                           ;pin_manager.c: 56: LATB = 0x00;
 21636  2EEF  0022               	movlb	2	; select bank2
 21637  2EF0  018D               	clrf	13	;volatile
 21638                           
 21639                           ;pin_manager.c: 57: TRISB = 0x00;
 21640  2EF1  0021               	movlb	1	; select bank1
 21641  2EF2  018D               	clrf	13	;volatile
 21642                           
 21643                           ;pin_manager.c: 58: ANSELB = 0x00;
 21644  2EF3  0023               	movlb	3	; select bank3
 21645  2EF4  018D               	clrf	13	;volatile
 21646                           
 21647                           ;pin_manager.c: 59: WPUB = 0x00;
 21648  2EF5  0024               	movlb	4	; select bank4
 21649  2EF6  018D               	clrf	13	;volatile
 21650                           
 21651                           ;pin_manager.c: 61: LATC = 0x00;
 21652  2EF7  0022               	movlb	2	; select bank2
 21653  2EF8  018E               	clrf	14	;volatile
 21654                           
 21655                           ;pin_manager.c: 62: TRISC = 0xD1;
 21656  2EF9  30D1               	movlw	209
 21657  2EFA  0021               	movlb	1	; select bank1
 21658  2EFB  008E               	movwf	14	;volatile
 21659                           
 21660                           ;pin_manager.c: 63: ANSELC = 0x01;
 21661  2EFC  3001               	movlw	1
 21662  2EFD  0023               	movlb	3	; select bank3
 21663  2EFE  008E               	movwf	14	;volatile
 21664                           
 21665                           ;pin_manager.c: 64: WPUC = 0x00;
 21666  2EFF  0024               	movlb	4	; select bank4
 21667  2F00  018E               	clrf	14	;volatile
 21668                           
 21669                           ;pin_manager.c: 66: LATD = 0x00;
 21670  2F01  0022               	movlb	2	; select bank2
 21671  2F02  018F               	clrf	15	;volatile
 21672                           
 21673                           ;pin_manager.c: 67: TRISD = 0xF0;
 21674  2F03  30F0               	movlw	240
 21675  2F04  0021               	movlb	1	; select bank1
 21676  2F05  008F               	movwf	15	;volatile
 21677                           
 21678                           ;pin_manager.c: 68: ANSELD = 0x00;
 21679  2F06  0023               	movlb	3	; select bank3
 21680  2F07  018F               	clrf	15	;volatile
 21681                           
 21682                           ;pin_manager.c: 69: WPUD = 0x00;
 21683  2F08  0024               	movlb	4	; select bank4
 21684  2F09  018F               	clrf	15	;volatile
 21685                           
 21686                           ;pin_manager.c: 71: LATE = 0x00;
 21687  2F0A  0022               	movlb	2	; select bank2
 21688  2F0B  0190               	clrf	16	;volatile
 21689                           
 21690                           ;pin_manager.c: 72: TRISE = 0x0E;
 21691  2F0C  300E               	movlw	14
 21692  2F0D  0021               	movlb	1	; select bank1
 21693  2F0E  0090               	movwf	16	;volatile
 21694                           
 21695                           ;pin_manager.c: 73: ANSELE = 0x06;
 21696  2F0F  3006               	movlw	6
 21697  2F10  0023               	movlb	3	; select bank3
 21698  2F11  0090               	movwf	16	;volatile
 21699                           
 21700                           ;pin_manager.c: 74: WPUE = 0x00;
 21701  2F12  0024               	movlb	4	; select bank4
 21702  2F13  0190               	clrf	16	;volatile
 21703                           
 21704                           ;pin_manager.c: 76: OPTION_REGbits.nWPUEN = 0x01;
 21705  2F14  0021               	movlb	1	; select bank1
 21706  2F15  1795               	bsf	21,7	;volatile
 21707                           
 21708                           ;pin_manager.c: 78: APFCON1 = 0x00;
 21709  2F16  0022               	movlb	2	; select bank2
 21710  2F17  019D               	clrf	29	;volatile
 21711                           
 21712                           ;pin_manager.c: 80: APFCON2 = 0x00;
 21713  2F18  019C               	clrf	28	;volatile
 21714  2F19  0008               	return
 21715  2F1A                     __end_of_PIN_MANAGER_Initialize:	
 21716                           
 21717                           	psect	text60
 21718  2B1D                     __ptext60:	
 21719 ;; *************** function _OSCILLATOR_Initialize *****************
 21720 ;; Defined at:
 21721 ;;		line 85 in file "mcc_generated_files/mcc.c"
 21722 ;; Parameters:    Size  Location     Type
 21723 ;;		None
 21724 ;; Auto vars:     Size  Location     Type
 21725 ;;		None
 21726 ;; Return value:  Size  Location     Type
 21727 ;;		None               void
 21728 ;; Registers used:
 21729 ;;		wreg, status,2
 21730 ;; Tracked objects:
 21731 ;;		On entry : 0/0
 21732 ;;		On exit  : 0/0
 21733 ;;		Unchanged: 0/0
 21734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21739 ;;Total ram usage:        0 bytes
 21740 ;; Hardware stack levels used:    1
 21741 ;; Hardware stack levels required when called:    5
 21742 ;; This function calls:
 21743 ;;		Nothing
 21744 ;; This function is called by:
 21745 ;;		_SYSTEM_Initialize
 21746 ;; This function uses a non-reentrant model
 21747 ;;
 21748                           
 21749                           
 21750                           ;psect for function _OSCILLATOR_Initialize
 21751  2B1D                     _OSCILLATOR_Initialize:	
 21752                           
 21753                           ;mcc.c: 87: OSCCON = 0x7A;
 21754                           
 21755                           ;incstack = 0
 21756                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 21757  2B1D  307A               	movlw	122
 21758  2B1E  0021               	movlb	1	; select bank1
 21759  2B1F  0099               	movwf	25	;volatile
 21760                           
 21761                           ;mcc.c: 89: OSCSTAT = 0x00;
 21762  2B20  019A               	clrf	26	;volatile
 21763                           
 21764                           ;mcc.c: 91: OSCTUNE = 0x00;
 21765  2B21  0198               	clrf	24	;volatile
 21766  2B22  0008               	return
 21767  2B23                     __end_of_OSCILLATOR_Initialize:	
 21768                           
 21769                           	psect	text61
 21770  2B19                     __ptext61:	
 21771 ;; *************** function _FVR_Initialize *****************
 21772 ;; Defined at:
 21773 ;;		line 58 in file "mcc_generated_files/fvr.c"
 21774 ;; Parameters:    Size  Location     Type
 21775 ;;		None
 21776 ;; Auto vars:     Size  Location     Type
 21777 ;;		None
 21778 ;; Return value:  Size  Location     Type
 21779 ;;		None               void
 21780 ;; Registers used:
 21781 ;;		wreg
 21782 ;; Tracked objects:
 21783 ;;		On entry : 0/0
 21784 ;;		On exit  : 0/0
 21785 ;;		Unchanged: 0/0
 21786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21791 ;;Total ram usage:        0 bytes
 21792 ;; Hardware stack levels used:    1
 21793 ;; Hardware stack levels required when called:    5
 21794 ;; This function calls:
 21795 ;;		Nothing
 21796 ;; This function is called by:
 21797 ;;		_SYSTEM_Initialize
 21798 ;; This function uses a non-reentrant model
 21799 ;;
 21800                           
 21801                           
 21802                           ;psect for function _FVR_Initialize
 21803  2B19                     _FVR_Initialize:	
 21804                           
 21805                           ;fvr.c: 60: FVRCON = 0x83;
 21806                           
 21807                           ;incstack = 0
 21808                           ; Regs used in _FVR_Initialize: [wreg]
 21809  2B19  3083               	movlw	131
 21810  2B1A  0022               	movlb	2	; select bank2
 21811  2B1B  0097               	movwf	23	;volatile
 21812  2B1C  0008               	return
 21813  2B1D                     __end_of_FVR_Initialize:	
 21814                           
 21815                           	psect	text62
 21816  2C2E                     __ptext62:	
 21817 ;; *************** function _EUSART_Initialize *****************
 21818 ;; Defined at:
 21819 ;;		line 76 in file "mcc_generated_files/eusart.c"
 21820 ;; Parameters:    Size  Location     Type
 21821 ;;		None
 21822 ;; Auto vars:     Size  Location     Type
 21823 ;;		None
 21824 ;; Return value:  Size  Location     Type
 21825 ;;		None               void
 21826 ;; Registers used:
 21827 ;;		wreg, status,2
 21828 ;; Tracked objects:
 21829 ;;		On entry : 0/0
 21830 ;;		On exit  : 0/0
 21831 ;;		Unchanged: 0/0
 21832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21835 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21836 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21837 ;;Total ram usage:        1 bytes
 21838 ;; Hardware stack levels used:    1
 21839 ;; Hardware stack levels required when called:    5
 21840 ;; This function calls:
 21841 ;;		Nothing
 21842 ;; This function is called by:
 21843 ;;		_SYSTEM_Initialize
 21844 ;; This function uses a non-reentrant model
 21845 ;;
 21846                           
 21847                           
 21848                           ;psect for function _EUSART_Initialize
 21849  2C2E                     _EUSART_Initialize:	
 21850                           
 21851                           ;eusart.c: 78: PIE1bits.RCIE = 0;
 21852                           
 21853                           ;incstack = 0
 21854                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
 21855  2C2E  0021               	movlb	1	; select bank1
 21856  2C2F  1291               	bcf	17,5	;volatile
 21857                           
 21858                           ;eusart.c: 79: PIE1bits.TXIE = 0;
 21859  2C30  1211               	bcf	17,4	;volatile
 21860                           
 21861                           ;eusart.c: 84: BAUD1CON = 0x48;
 21862  2C31  3048               	movlw	72
 21863  2C32  0023               	movlb	3	; select bank3
 21864  2C33  009F               	movwf	31	;volatile
 21865                           
 21866                           ;eusart.c: 87: RC1STA = 0x80;
 21867  2C34  3080               	movlw	128
 21868  2C35  009D               	movwf	29	;volatile
 21869                           
 21870                           ;eusart.c: 90: TX1STA = 0x06;
 21871  2C36  3006               	movlw	6
 21872  2C37  009E               	movwf	30	;volatile
 21873                           
 21874                           ;eusart.c: 93: SP1BRGL = 0x22;
 21875  2C38  3022               	movlw	34
 21876  2C39  009B               	movwf	27	;volatile
 21877                           
 21878                           ;eusart.c: 96: SP1BRGH = 0x00;
 21879  2C3A  019C               	clrf	28	;volatile
 21880                           
 21881                           ;eusart.c: 100: eusartTxHead = 0;
 21882  2C3B  01F9               	clrf	_eusartTxHead
 21883                           
 21884                           ;eusart.c: 101: eusartTxTail = 0;
 21885  2C3C  0021               	movlb	1	; select bank1
 21886  2C3D  01E6               	clrf	_eusartTxTail^(0+128)
 21887                           
 21888                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof (eusartTxBuffer);
 21889  2C3E  3008               	movlw	8
 21890  2C3F  0020               	movlb	0	; select bank0
 21891  2C40  00A0               	movwf	??_EUSART_Initialize
 21892  2C41  0820               	movf	??_EUSART_Initialize,w
 21893  2C42  0021               	movlb	1	; select bank1
 21894  2C43  00E8               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
 21895                           
 21896                           ;eusart.c: 104: eusartRxHead = 0;
 21897  2C44  01E4               	clrf	_eusartRxHead^(0+128)
 21898                           
 21899                           ;eusart.c: 105: eusartRxTail = 0;
 21900  2C45  01E5               	clrf	_eusartRxTail^(0+128)
 21901                           
 21902                           ;eusart.c: 106: eusartRxCount = 0;
 21903  2C46  01F8               	clrf	_eusartRxCount	;volatile
 21904                           
 21905                           ;eusart.c: 109: PIE1bits.RCIE = 1;
 21906  2C47  1691               	bsf	17,5	;volatile
 21907  2C48  0008               	return
 21908  2C49                     __end_of_EUSART_Initialize:	
 21909                           
 21910                           	psect	text63
 21911  2B3E                     __ptext63:	
 21912 ;; *************** function _ADC_Initialize *****************
 21913 ;; Defined at:
 21914 ;;		line 65 in file "mcc_generated_files/adc.c"
 21915 ;; Parameters:    Size  Location     Type
 21916 ;;		None
 21917 ;; Auto vars:     Size  Location     Type
 21918 ;;		None
 21919 ;; Return value:  Size  Location     Type
 21920 ;;		None               void
 21921 ;; Registers used:
 21922 ;;		wreg, status,2
 21923 ;; Tracked objects:
 21924 ;;		On entry : 0/0
 21925 ;;		On exit  : 0/0
 21926 ;;		Unchanged: 0/0
 21927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21932 ;;Total ram usage:        0 bytes
 21933 ;; Hardware stack levels used:    1
 21934 ;; Hardware stack levels required when called:    5
 21935 ;; This function calls:
 21936 ;;		Nothing
 21937 ;; This function is called by:
 21938 ;;		_SYSTEM_Initialize
 21939 ;; This function uses a non-reentrant model
 21940 ;;
 21941                           
 21942                           
 21943                           ;psect for function _ADC_Initialize
 21944  2B3E                     _ADC_Initialize:	
 21945                           
 21946                           ;adc.c: 69: ADCON0 = 0x01;
 21947                           
 21948                           ;incstack = 0
 21949                           ; Regs used in _ADC_Initialize: [wreg+status,2]
 21950  2B3E  3001               	movlw	1
 21951  2B3F  0021               	movlb	1	; select bank1
 21952  2B40  009D               	movwf	29	;volatile
 21953                           
 21954                           ;adc.c: 72: ADCON1 = 0x03;
 21955  2B41  3003               	movlw	3
 21956  2B42  009E               	movwf	30	;volatile
 21957                           
 21958                           ;adc.c: 75: ADCON2 = 0x00;
 21959  2B43  019F               	clrf	31	;volatile
 21960                           
 21961                           ;adc.c: 78: ADRESH = 0x00;
 21962  2B44  019C               	clrf	28	;volatile
 21963                           
 21964                           ;adc.c: 81: ADRESL = 0x00;
 21965  2B45  019B               	clrf	27	;volatile
 21966  2B46  0008               	return
 21967  2B47                     __end_of_ADC_Initialize:	
 21968                           
 21969                           	psect	text64
 21970  2C9D                     __ptext64:	
 21971 ;; *************** function _LCD_puts_ROM *****************
 21972 ;; Defined at:
 21973 ;;		line 134 in file "LCD.c"
 21974 ;; Parameters:    Size  Location     Type
 21975 ;;  P               2    8[BANK0 ] PTR const unsigned char 
 21976 ;;		 -> STR_2(17), 
 21977 ;;  line            1   10[BANK0 ] unsigned char 
 21978 ;;  offset          1   11[BANK0 ] unsigned char 
 21979 ;; Auto vars:     Size  Location     Type
 21980 ;;		None
 21981 ;; Return value:  Size  Location     Type
 21982 ;;		None               void
 21983 ;; Registers used:
 21984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 21985 ;; Tracked objects:
 21986 ;;		On entry : 0/0
 21987 ;;		On exit  : 0/0
 21988 ;;		Unchanged: 0/0
 21989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 21990 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21992 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21993 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 21994 ;;Total ram usage:        5 bytes
 21995 ;; Hardware stack levels used:    1
 21996 ;; Hardware stack levels required when called:    8
 21997 ;; This function calls:
 21998 ;;		_LCD_w_cmd
 21999 ;;		_LCD_w_data
 22000 ;; This function is called by:
 22001 ;;		_main
 22002 ;; This function uses a non-reentrant model
 22003 ;;
 22004                           
 22005                           
 22006                           ;psect for function _LCD_puts_ROM
 22007  2C9D                     _LCD_puts_ROM:	
 22008                           
 22009                           ;LCD.c: 136: LCD_w_cmd (line + offset);
 22010                           
 22011                           ;incstack = 0
 22012                           ; Regs used in _LCD_puts_ROM: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22013  2C9D  0020               	movlb	0	; select bank0
 22014  2C9E  082A               	movf	LCD_puts_ROM@line,w
 22015  2C9F  072B               	addwf	LCD_puts_ROM@offset,w
 22016  2CA0  31AB  239F  31AC   	fcall	_LCD_w_cmd
 22017  2CA3                     l6734:	
 22018                           ;LCD.c: 137: do{
 22019                           
 22020                           
 22021                           ;LCD.c: 138: LCD_w_data (*P);
 22022  2CA3  0020               	movlb	0	; select bank0
 22023  2CA4  0828               	movf	LCD_puts_ROM@P,w
 22024  2CA5  0084               	movwf	4
 22025  2CA6  0829               	movf	LCD_puts_ROM@P+1,w
 22026  2CA7  0085               	movwf	5
 22027  2CA8  0800               	movf	0,w	;code access
 22028  2CA9  31AB  2350  31AC   	fcall	_LCD_w_data
 22029                           
 22030                           ;LCD.c: 139: P++;
 22031  2CAC  3001               	movlw	1
 22032  2CAD  0020               	movlb	0	; select bank0
 22033  2CAE  07A8               	addwf	LCD_puts_ROM@P,f
 22034  2CAF  3000               	movlw	0
 22035  2CB0  3DA9               	addwfc	LCD_puts_ROM@P+1,f
 22036                           
 22037                           ;LCD.c: 140: } while(*P != (0));
 22038  2CB1  0828               	movf	LCD_puts_ROM@P,w
 22039  2CB2  0084               	movwf	4
 22040  2CB3  0829               	movf	LCD_puts_ROM@P+1,w
 22041  2CB4  0085               	movwf	5
 22042  2CB5  0012               	moviw fsr0++
 22043  2CB6  1903               	btfsc	3,2
 22044  2CB7  0008               	return
 22045  2CB8  2CA3               	goto	l6734
 22046  2CB9                     __end_of_LCD_puts_ROM:	
 22047                           
 22048                           	psect	text65
 22049  2C81                     __ptext65:	
 22050 ;; *************** function _LCD_puts_RAM *****************
 22051 ;; Defined at:
 22052 ;;		line 103 in file "LCD.c"
 22053 ;; Parameters:    Size  Location     Type
 22054 ;;  P               2    8[BANK0 ] PTR unsigned char 
 22055 ;;		 -> line(100), 
 22056 ;;  line            1   10[BANK0 ] unsigned char 
 22057 ;;  offset          1   11[BANK0 ] unsigned char 
 22058 ;; Auto vars:     Size  Location     Type
 22059 ;;		None
 22060 ;; Return value:  Size  Location     Type
 22061 ;;		None               void
 22062 ;; Registers used:
 22063 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22064 ;; Tracked objects:
 22065 ;;		On entry : 0/0
 22066 ;;		On exit  : 0/0
 22067 ;;		Unchanged: 0/0
 22068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22069 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22072 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22073 ;;Total ram usage:        4 bytes
 22074 ;; Hardware stack levels used:    1
 22075 ;; Hardware stack levels required when called:    8
 22076 ;; This function calls:
 22077 ;;		_LCD_w_cmd
 22078 ;;		_LCD_w_data
 22079 ;; This function is called by:
 22080 ;;		_main
 22081 ;; This function uses a non-reentrant model
 22082 ;;
 22083                           
 22084                           
 22085                           ;psect for function _LCD_puts_RAM
 22086  2C81                     _LCD_puts_RAM:	
 22087                           
 22088                           ;LCD.c: 107: LCD_w_cmd (line + offset);
 22089                           
 22090                           ;incstack = 0
 22091                           ; Regs used in _LCD_puts_RAM: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22092  2C81  0020               	movlb	0	; select bank0
 22093  2C82  082A               	movf	LCD_puts_RAM@line,w
 22094  2C83  072B               	addwf	LCD_puts_RAM@offset,w
 22095  2C84  31AB  239F  31AC   	fcall	_LCD_w_cmd
 22096  2C87                     l6986:	
 22097                           ;LCD.c: 108: do{
 22098                           
 22099                           
 22100                           ;LCD.c: 109: LCD_w_data (*P);
 22101  2C87  0020               	movlb	0	; select bank0
 22102  2C88  0828               	movf	LCD_puts_RAM@P,w
 22103  2C89  0086               	movwf	6
 22104  2C8A  0829               	movf	LCD_puts_RAM@P+1,w
 22105  2C8B  0087               	movwf	7
 22106  2C8C  0801               	movf	1,w
 22107  2C8D  31AB  2350  31AC   	fcall	_LCD_w_data
 22108                           
 22109                           ;LCD.c: 110: P++;
 22110  2C90  3001               	movlw	1
 22111  2C91  0020               	movlb	0	; select bank0
 22112  2C92  07A8               	addwf	LCD_puts_RAM@P,f
 22113  2C93  3000               	movlw	0
 22114  2C94  3DA9               	addwfc	LCD_puts_RAM@P+1,f
 22115                           
 22116                           ;LCD.c: 111: } while(*P != (0));
 22117  2C95  0828               	movf	LCD_puts_RAM@P,w
 22118  2C96  0086               	movwf	6
 22119  2C97  0829               	movf	LCD_puts_RAM@P+1,w
 22120  2C98  0087               	movwf	7
 22121  2C99  0801               	movf	1,w
 22122  2C9A  1903               	btfsc	3,2
 22123  2C9B  0008               	return
 22124  2C9C  2C87               	goto	l6986
 22125  2C9D                     __end_of_LCD_puts_RAM:	
 22126                           
 22127                           	psect	text66
 22128  2B50                     __ptext66:	
 22129 ;; *************** function _LCD_w_data *****************
 22130 ;; Defined at:
 22131 ;;		line 198 in file "LCD.c"
 22132 ;; Parameters:    Size  Location     Type
 22133 ;;  C               1    wreg     unsigned char 
 22134 ;; Auto vars:     Size  Location     Type
 22135 ;;  C               1    5[BANK0 ] unsigned char 
 22136 ;; Return value:  Size  Location     Type
 22137 ;;		None               void
 22138 ;; Registers used:
 22139 ;;		wreg, status,2, status,0, pclath, cstack
 22140 ;; Tracked objects:
 22141 ;;		On entry : 0/0
 22142 ;;		On exit  : 0/0
 22143 ;;		Unchanged: 0/0
 22144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22146 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22148 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22149 ;;Total ram usage:        1 bytes
 22150 ;; Hardware stack levels used:    1
 22151 ;; Hardware stack levels required when called:    7
 22152 ;; This function calls:
 22153 ;;		_LCD_w_byte
 22154 ;; This function is called by:
 22155 ;;		_LCD_puts_RAM
 22156 ;;		_LCD_puts_ROM
 22157 ;; This function uses a non-reentrant model
 22158 ;;
 22159                           
 22160                           
 22161                           ;psect for function _LCD_w_data
 22162  2B50                     _LCD_w_data:	
 22163                           
 22164                           ;incstack = 0
 22165                           ; Regs used in _LCD_w_data: [wreg+status,2+status,0+pclath+cstack]
 22166                           ;LCD_w_data@C stored from wreg
 22167  2B50  0020               	movlb	0	; select bank0
 22168  2B51  00A5               	movwf	LCD_w_data@C
 22169                           
 22170                           ;LCD.c: 200: TRISBbits.TRISB1 = 0;
 22171  2B52  0021               	movlb	1	; select bank1
 22172  2B53  108D               	bcf	13,1	;volatile
 22173                           
 22174                           ;LCD.c: 202: PORTBbits.RB1 = 1;
 22175  2B54  0020               	movlb	0	; select bank0
 22176  2B55  148D               	bsf	13,1	;volatile
 22177                           
 22178                           ;LCD.c: 203: PORTBbits.RB1 = 1;
 22179  2B56  148D               	bsf	13,1	;volatile
 22180                           
 22181                           ;LCD.c: 204: PORTBbits.RB1 = 1;
 22182  2B57  148D               	bsf	13,1	;volatile
 22183                           
 22184                           ;LCD.c: 205: PORTBbits.RB1 = 1;
 22185  2B58  148D               	bsf	13,1	;volatile
 22186                           
 22187                           ;LCD.c: 207: PORTBbits.RB0 = 0;
 22188  2B59  100D               	bcf	13,0	;volatile
 22189                           
 22190                           ;LCD.c: 209: LCD_w_byte (C);
 22191  2B5A  0825               	movf	LCD_w_data@C,w
 22192  2B5B  31A4  241E         	fcall	_LCD_w_byte
 22193  2B5D  0008               	return
 22194  2B5E                     __end_of_LCD_w_data:	
 22195                           
 22196                           	psect	text67
 22197  2EB1                     __ptext67:	
 22198 ;; *************** function _LCD_config *****************
 22199 ;; Defined at:
 22200 ;;		line 66 in file "LCD.c"
 22201 ;; Parameters:    Size  Location     Type
 22202 ;;		None
 22203 ;; Auto vars:     Size  Location     Type
 22204 ;;		None
 22205 ;; Return value:  Size  Location     Type
 22206 ;;		None               void
 22207 ;; Registers used:
 22208 ;;		wreg, status,2, status,0, pclath, cstack
 22209 ;; Tracked objects:
 22210 ;;		On entry : 0/0
 22211 ;;		On exit  : 0/0
 22212 ;;		Unchanged: 0/0
 22213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22218 ;;Total ram usage:        0 bytes
 22219 ;; Hardware stack levels used:    1
 22220 ;; Hardware stack levels required when called:    8
 22221 ;; This function calls:
 22222 ;;		_LCD_w_cmd
 22223 ;;		_delay_ms
 22224 ;; This function is called by:
 22225 ;;		_main
 22226 ;; This function uses a non-reentrant model
 22227 ;;
 22228                           
 22229                           
 22230                           ;psect for function _LCD_config
 22231  2EB1                     _LCD_config:	
 22232                           
 22233                           ;LCD.c: 68: PORTBbits.RB0 = 0x00;
 22234                           
 22235                           ;incstack = 0
 22236                           ; Regs used in _LCD_config: [wreg+status,2+status,0+pclath+cstack]
 22237  2EB1  0020               	movlb	0	; select bank0
 22238  2EB2  100D               	bcf	13,0	;volatile
 22239                           
 22240                           ;LCD.c: 69: TRISBbits.TRISB0 = 0;
 22241  2EB3  0021               	movlb	1	; select bank1
 22242  2EB4  100D               	bcf	13,0	;volatile
 22243                           
 22244                           ;LCD.c: 71: delay_ms(15);
 22245  2EB5  300F               	movlw	15
 22246  2EB6  0020               	movlb	0	; select bank0
 22247  2EB7  00A3               	movwf	delay_ms@X
 22248  2EB8  3000               	movlw	0
 22249  2EB9  00A4               	movwf	delay_ms@X+1
 22250  2EBA  31AD  2595  31AE   	fcall	_delay_ms
 22251                           
 22252                           ;LCD.c: 73: LCD_w_cmd (0x33);
 22253  2EBD  3033               	movlw	51
 22254  2EBE  31AB  239F  31AE   	fcall	_LCD_w_cmd
 22255                           
 22256                           ;LCD.c: 74: delay_ms(5);
 22257  2EC1  3005               	movlw	5
 22258  2EC2  0020               	movlb	0	; select bank0
 22259  2EC3  00A3               	movwf	delay_ms@X
 22260  2EC4  3000               	movlw	0
 22261  2EC5  00A4               	movwf	delay_ms@X+1
 22262  2EC6  31AD  2595  31AE   	fcall	_delay_ms
 22263                           
 22264                           ;LCD.c: 75: LCD_w_cmd (0x32);
 22265  2EC9  3032               	movlw	50
 22266  2ECA  31AB  239F  31AE   	fcall	_LCD_w_cmd
 22267                           
 22268                           ;LCD.c: 76: LCD_w_cmd (0x28);
 22269  2ECD  3028               	movlw	40
 22270  2ECE  31AB  239F  31AE   	fcall	_LCD_w_cmd
 22271                           
 22272                           ;LCD.c: 77: LCD_w_cmd (0x08);
 22273  2ED1  3008               	movlw	8
 22274  2ED2  31AB  239F  31AE   	fcall	_LCD_w_cmd
 22275                           
 22276                           ;LCD.c: 78: LCD_w_cmd (0x01);
 22277  2ED5  3001               	movlw	1
 22278  2ED6  31AB  239F  31AE   	fcall	_LCD_w_cmd
 22279                           
 22280                           ;LCD.c: 79: LCD_w_cmd (0x06);
 22281  2ED9  3006               	movlw	6
 22282  2EDA  31AB  239F  31AE   	fcall	_LCD_w_cmd
 22283                           
 22284                           ;LCD.c: 80: LCD_w_cmd (0x0C);
 22285  2EDD  300C               	movlw	12
 22286  2EDE  31AB  239F  31AE   	fcall	_LCD_w_cmd
 22287                           
 22288                           ;LCD.c: 81: LCD_w_cmd (0x80);
 22289  2EE1  3080               	movlw	128
 22290  2EE2  31AB  239F         	fcall	_LCD_w_cmd
 22291  2EE4  0008               	return
 22292  2EE5                     __end_of_LCD_config:	
 22293                           
 22294                           	psect	text68
 22295  2B9F                     __ptext68:	
 22296 ;; *************** function _LCD_w_cmd *****************
 22297 ;; Defined at:
 22298 ;;		line 172 in file "LCD.c"
 22299 ;; Parameters:    Size  Location     Type
 22300 ;;  C               1    wreg     unsigned char 
 22301 ;; Auto vars:     Size  Location     Type
 22302 ;;  C               1    7[BANK0 ] unsigned char 
 22303 ;; Return value:  Size  Location     Type
 22304 ;;		None               void
 22305 ;; Registers used:
 22306 ;;		wreg, status,2, status,0, pclath, cstack
 22307 ;; Tracked objects:
 22308 ;;		On entry : 0/0
 22309 ;;		On exit  : 0/0
 22310 ;;		Unchanged: 0/0
 22311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22313 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22315 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22316 ;;Total ram usage:        1 bytes
 22317 ;; Hardware stack levels used:    1
 22318 ;; Hardware stack levels required when called:    7
 22319 ;; This function calls:
 22320 ;;		_LCD_w_byte
 22321 ;;		_delay_ms
 22322 ;; This function is called by:
 22323 ;;		_LCD_config
 22324 ;;		_LCD_puts_RAM
 22325 ;;		_LCD_puts_ROM
 22326 ;; This function uses a non-reentrant model
 22327 ;;
 22328                           
 22329                           
 22330                           ;psect for function _LCD_w_cmd
 22331  2B9F                     _LCD_w_cmd:	
 22332                           
 22333                           ;incstack = 0
 22334                           ; Regs used in _LCD_w_cmd: [wreg+status,2+status,0+pclath+cstack]
 22335                           ;LCD_w_cmd@C stored from wreg
 22336  2B9F  0020               	movlb	0	; select bank0
 22337  2BA0  00A7               	movwf	LCD_w_cmd@C
 22338                           
 22339                           ;LCD.c: 174: TRISBbits.TRISB1 = 0;
 22340  2BA1  0021               	movlb	1	; select bank1
 22341  2BA2  108D               	bcf	13,1	;volatile
 22342                           
 22343                           ;LCD.c: 176: PORTBbits.RB1 = 0;
 22344  2BA3  0020               	movlb	0	; select bank0
 22345  2BA4  108D               	bcf	13,1	;volatile
 22346                           
 22347                           ;LCD.c: 177: PORTBbits.RB1 = 0;
 22348  2BA5  108D               	bcf	13,1	;volatile
 22349                           
 22350                           ;LCD.c: 178: PORTBbits.RB1 = 0;
 22351  2BA6  108D               	bcf	13,1	;volatile
 22352                           
 22353                           ;LCD.c: 180: PORTBbits.RB0 = 0;
 22354  2BA7  100D               	bcf	13,0	;volatile
 22355                           
 22356                           ;LCD.c: 182: LCD_w_byte (C);
 22357  2BA8  0827               	movf	LCD_w_cmd@C,w
 22358  2BA9  31A4  241E  31AB   	fcall	_LCD_w_byte
 22359                           
 22360                           ;LCD.c: 183: delay_ms(1);
 22361  2BAC  3001               	movlw	1
 22362  2BAD  0020               	movlb	0	; select bank0
 22363  2BAE  00A3               	movwf	delay_ms@X
 22364  2BAF  3000               	movlw	0
 22365  2BB0  00A4               	movwf	delay_ms@X+1
 22366  2BB1  31AD  2595         	fcall	_delay_ms
 22367  2BB3  0008               	return
 22368  2BB4                     __end_of_LCD_w_cmd:	
 22369                           
 22370                           	psect	text69
 22371  2D95                     __ptext69:	
 22372 ;; *************** function _delay_ms *****************
 22373 ;; Defined at:
 22374 ;;		line 175 in file "delay.c"
 22375 ;; Parameters:    Size  Location     Type
 22376 ;;  X               2    3[BANK0 ] unsigned int 
 22377 ;; Auto vars:     Size  Location     Type
 22378 ;;  i               2    5[BANK0 ] unsigned int 
 22379 ;; Return value:  Size  Location     Type
 22380 ;;		None               void
 22381 ;; Registers used:
 22382 ;;		wreg, status,2, status,0, pclath, cstack
 22383 ;; Tracked objects:
 22384 ;;		On entry : 0/0
 22385 ;;		On exit  : 0/0
 22386 ;;		Unchanged: 0/0
 22387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22388 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22389 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22391 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22392 ;;Total ram usage:        4 bytes
 22393 ;; Hardware stack levels used:    1
 22394 ;; Hardware stack levels required when called:    6
 22395 ;; This function calls:
 22396 ;;		_delay_ISR_ticks
 22397 ;; This function is called by:
 22398 ;;		_main
 22399 ;;		_LCD_config
 22400 ;;		_LCD_w_cmd
 22401 ;; This function uses a non-reentrant model
 22402 ;;
 22403                           
 22404                           
 22405                           ;psect for function _delay_ms
 22406  2D95                     _delay_ms:	
 22407                           
 22408                           ;delay.c: 177: uint16_t i;
 22409                           ;delay.c: 179: if (X == 0){
 22410                           
 22411                           ;incstack = 0
 22412                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
 22413  2D95  0020               	movlb	0	; select bank0
 22414  2D96  0823               	movf	delay_ms@X,w
 22415  2D97  0424               	iorwf	delay_ms@X+1,w
 22416  2D98  1D03               	btfss	3,2
 22417  2D99  2DA1               	goto	l5932
 22418                           
 22419                           ;delay.c: 180: delay_ISR_ticks(1);
 22420  2D9A  3001               	movlw	1
 22421  2D9B  00A0               	movwf	delay_ISR_ticks@X
 22422  2D9C  3000               	movlw	0
 22423  2D9D  00A1               	movwf	delay_ISR_ticks@X+1
 22424  2D9E  31AC  24F2         	fcall	_delay_ISR_ticks
 22425                           
 22426                           ;delay.c: 181: }
 22427  2DA0  0008               	return
 22428  2DA1                     l5932:	
 22429                           
 22430                           ;delay.c: 182: else{
 22431                           ;delay.c: 183: for(i = 0; i < X; i++){
 22432  2DA1  0020               	movlb	0	; select bank0
 22433  2DA2  01A5               	clrf	delay_ms@i
 22434  2DA3  01A6               	clrf	delay_ms@i+1
 22435  2DA4                     l5938:	
 22436  2DA4  0824               	movf	delay_ms@X+1,w
 22437  2DA5  0226               	subwf	delay_ms@i+1,w
 22438  2DA6  1D03               	skipz
 22439  2DA7  2DAA               	goto	u7425
 22440  2DA8  0823               	movf	delay_ms@X,w
 22441  2DA9  0225               	subwf	delay_ms@i,w
 22442  2DAA                     u7425:	
 22443  2DAA  1803               	btfsc	3,0
 22444  2DAB  0008               	return
 22445                           
 22446                           ;delay.c: 184: delay_ISR_ticks(1);
 22447  2DAC  3001               	movlw	1
 22448  2DAD  00A0               	movwf	delay_ISR_ticks@X
 22449  2DAE  3000               	movlw	0
 22450  2DAF  00A1               	movwf	delay_ISR_ticks@X+1
 22451  2DB0  31AC  24F2  31AD   	fcall	_delay_ISR_ticks
 22452  2DB3  3001               	movlw	1
 22453  2DB4  0020               	movlb	0	; select bank0
 22454  2DB5  07A5               	addwf	delay_ms@i,f
 22455  2DB6  3000               	movlw	0
 22456  2DB7  3DA6               	addwfc	delay_ms@i+1,f
 22457  2DB8  2DA4               	goto	l5938
 22458  2DB9                     __end_of_delay_ms:	
 22459                           
 22460                           	psect	text70
 22461  2CF2                     __ptext70:	
 22462 ;; *************** function _delay_ISR_ticks *****************
 22463 ;; Defined at:
 22464 ;;		line 132 in file "delay.c"
 22465 ;; Parameters:    Size  Location     Type
 22466 ;;  X               2    0[BANK0 ] unsigned int 
 22467 ;; Auto vars:     Size  Location     Type
 22468 ;;		None
 22469 ;; Return value:  Size  Location     Type
 22470 ;;		None               void
 22471 ;; Registers used:
 22472 ;;		wreg, status,2, status,0
 22473 ;; Tracked objects:
 22474 ;;		On entry : 0/0
 22475 ;;		On exit  : 0/0
 22476 ;;		Unchanged: 0/0
 22477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22478 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22480 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22481 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22482 ;;Total ram usage:        3 bytes
 22483 ;; Hardware stack levels used:    1
 22484 ;; Hardware stack levels required when called:    5
 22485 ;; This function calls:
 22486 ;;		Nothing
 22487 ;; This function is called by:
 22488 ;;		_delay_ms
 22489 ;; This function uses a non-reentrant model
 22490 ;;
 22491                           
 22492                           
 22493                           ;psect for function _delay_ISR_ticks
 22494  2CF2                     _delay_ISR_ticks:	
 22495                           
 22496                           ;delay.c: 134: if (X <= 2){
 22497                           
 22498                           ;incstack = 0
 22499                           ; Regs used in _delay_ISR_ticks: [wreg+status,2+status,0]
 22500  2CF2  3000               	movlw	0
 22501  2CF3  0020               	movlb	0	; select bank0
 22502  2CF4  0221               	subwf	delay_ISR_ticks@X+1,w
 22503  2CF5  3003               	movlw	3
 22504  2CF6  1903               	skipnz
 22505  2CF7  0220               	subwf	delay_ISR_ticks@X,w
 22506  2CF8  1803               	skipnc
 22507  2CF9  2D00               	goto	l5818
 22508                           
 22509                           ;delay.c: 135: mailbox = 2;
 22510  2CFA  3002               	movlw	2
 22511  2CFB  0021               	movlb	1	; select bank1
 22512  2CFC  00DE               	movwf	_mailbox^(0+128)	;volatile
 22513  2CFD  3000               	movlw	0
 22514  2CFE  00DF               	movwf	(_mailbox^(0+128)+1)	;volatile
 22515  2CFF  2D07               	goto	L16
 22516  2D00                     l5818:	
 22517                           ;delay.c: 137: }
 22518                           
 22519                           ;delay.c: 136: flag = 0x01;
 22520                           
 22521                           
 22522                           ;delay.c: 138: else{
 22523                           ;delay.c: 139: mailbox = X;
 22524  2D00  0821               	movf	delay_ISR_ticks@X+1,w
 22525  2D01  0021               	movlb	1	; select bank1
 22526  2D02  00DF               	movwf	(_mailbox+1)^(0+128)	;volatile
 22527  2D03  0020               	movlb	0	; select bank0
 22528  2D04  0820               	movf	delay_ISR_ticks@X,w
 22529  2D05  0021               	movlb	1	; select bank1
 22530  2D06  00DE               	movwf	_mailbox^(0+128)	;volatile
 22531  2D07                     L16:	
 22532                           
 22533                           ;delay.c: 140: flag = 0x01;
 22534  2D07  3001               	movlw	1
 22535  2D08  0020               	movlb	0	; select bank0
 22536  2D09  00A2               	movwf	??_delay_ISR_ticks
 22537  2D0A  0822               	movf	??_delay_ISR_ticks,w
 22538  2D0B  00FA               	movwf	_flag	;volatile
 22539  2D0C                     l5820:	
 22540                           ;delay.c: 141: }
 22541                           ;delay.c: 142: while(flag);
 22542                           
 22543  2D0C  087A               	movf	_flag,w	;volatile
 22544  2D0D  1903               	btfsc	3,2
 22545  2D0E  0008               	return
 22546  2D0F  2D0C               	goto	l5820
 22547  2D10                     __end_of_delay_ISR_ticks:	
 22548                           
 22549                           	psect	text71
 22550  241E                     __ptext71:	
 22551 ;; *************** function _LCD_w_byte *****************
 22552 ;; Defined at:
 22553 ;;		line 233 in file "LCD.c"
 22554 ;; Parameters:    Size  Location     Type
 22555 ;;  C               1    wreg     unsigned char 
 22556 ;; Auto vars:     Size  Location     Type
 22557 ;;  C               1    4[BANK0 ] unsigned char 
 22558 ;; Return value:  Size  Location     Type
 22559 ;;		None               void
 22560 ;; Registers used:
 22561 ;;		wreg, status,2, status,0, pclath, cstack
 22562 ;; Tracked objects:
 22563 ;;		On entry : 0/0
 22564 ;;		On exit  : 0/0
 22565 ;;		Unchanged: 0/0
 22566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22568 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22569 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22570 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22571 ;;Total ram usage:        3 bytes
 22572 ;; Hardware stack levels used:    1
 22573 ;; Hardware stack levels required when called:    6
 22574 ;; This function calls:
 22575 ;;		_LCD_pulse
 22576 ;; This function is called by:
 22577 ;;		_LCD_w_cmd
 22578 ;;		_LCD_w_data
 22579 ;; This function uses a non-reentrant model
 22580 ;;
 22581                           
 22582                           
 22583                           ;psect for function _LCD_w_byte
 22584  241E                     _LCD_w_byte:	
 22585                           
 22586                           ;incstack = 0
 22587                           ; Regs used in _LCD_w_byte: [wreg+status,2+status,0+pclath+cstack]
 22588                           ;LCD_w_byte@C stored from wreg
 22589  241E  0020               	movlb	0	; select bank0
 22590  241F  00A4               	movwf	LCD_w_byte@C
 22591                           
 22592                           ;LCD.c: 235: TRISDbits.TRISD0 = 0;
 22593  2420  0021               	movlb	1	; select bank1
 22594  2421  100F               	bcf	15,0	;volatile
 22595                           
 22596                           ;LCD.c: 236: TRISDbits.TRISD1 = 0;
 22597  2422  108F               	bcf	15,1	;volatile
 22598                           
 22599                           ;LCD.c: 237: TRISDbits.TRISD2 = 0;
 22600  2423  110F               	bcf	15,2	;volatile
 22601                           
 22602                           ;LCD.c: 238: TRISDbits.TRISD3 = 0;
 22603  2424  118F               	bcf	15,3	;volatile
 22604                           
 22605                           ;LCD.c: 240: PORTDbits.RD0 = C >> 4;
 22606  2425  0020               	movlb	0	; select bank0
 22607  2426  0824               	movf	LCD_w_byte@C,w
 22608  2427  00A2               	movwf	??_LCD_w_byte
 22609  2428  3004               	movlw	4
 22610  2429                     u7435:	
 22611  2429  36A2               	lsrf	??_LCD_w_byte,f
 22612  242A  0B89               	decfsz	9,f
 22613  242B  2C29               	goto	u7435
 22614  242C  080F               	movf	15,w	;volatile
 22615  242D  0622               	xorwf	??_LCD_w_byte,w
 22616  242E  39FE               	andlw	-2
 22617  242F  0622               	xorwf	??_LCD_w_byte,w
 22618  2430  008F               	movwf	15	;volatile
 22619                           
 22620                           ;LCD.c: 241: PORTDbits.RD1 = C >> 5;
 22621  2431  0824               	movf	LCD_w_byte@C,w
 22622  2432  00A2               	movwf	??_LCD_w_byte
 22623  2433  3005               	movlw	5
 22624  2434                     u7445:	
 22625  2434  36A2               	lsrf	??_LCD_w_byte,f
 22626  2435  0B89               	decfsz	9,f
 22627  2436  2C34               	goto	u7445
 22628  2437  0822               	movf	??_LCD_w_byte,w
 22629  2438  00A3               	movwf	??_LCD_w_byte+1
 22630  2439  0DA3               	rlf	??_LCD_w_byte+1,f
 22631  243A  080F               	movf	15,w	;volatile
 22632  243B  0623               	xorwf	??_LCD_w_byte+1,w
 22633  243C  39FD               	andlw	-3
 22634  243D  0623               	xorwf	??_LCD_w_byte+1,w
 22635  243E  008F               	movwf	15	;volatile
 22636                           
 22637                           ;LCD.c: 242: PORTDbits.RD2 = C >> 6;
 22638  243F  0824               	movf	LCD_w_byte@C,w
 22639  2440  00A2               	movwf	??_LCD_w_byte
 22640  2441  3006               	movlw	6
 22641  2442                     u7455:	
 22642  2442  36A2               	lsrf	??_LCD_w_byte,f
 22643  2443  0B89               	decfsz	9,f
 22644  2444  2C42               	goto	u7455
 22645  2445  0822               	movf	??_LCD_w_byte,w
 22646  2446  00A3               	movwf	??_LCD_w_byte+1
 22647  2447  0DA3               	rlf	??_LCD_w_byte+1,f
 22648  2448  0DA3               	rlf	??_LCD_w_byte+1,f
 22649  2449  080F               	movf	15,w	;volatile
 22650  244A  0623               	xorwf	??_LCD_w_byte+1,w
 22651  244B  39FB               	andlw	-5
 22652  244C  0623               	xorwf	??_LCD_w_byte+1,w
 22653  244D  008F               	movwf	15	;volatile
 22654                           
 22655                           ;LCD.c: 243: PORTDbits.RD3 = C >> 7;
 22656  244E  0824               	movf	LCD_w_byte@C,w
 22657  244F  00A2               	movwf	??_LCD_w_byte
 22658  2450  3007               	movlw	7
 22659  2451                     u7465:	
 22660  2451  36A2               	lsrf	??_LCD_w_byte,f
 22661  2452  0B89               	decfsz	9,f
 22662  2453  2C51               	goto	u7465
 22663  2454  0822               	movf	??_LCD_w_byte,w
 22664  2455  00A3               	movwf	??_LCD_w_byte+1
 22665  2456  0DA3               	rlf	??_LCD_w_byte+1,f
 22666  2457  0DA3               	rlf	??_LCD_w_byte+1,f
 22667  2458  0DA3               	rlf	??_LCD_w_byte+1,f
 22668  2459  080F               	movf	15,w	;volatile
 22669  245A  0623               	xorwf	??_LCD_w_byte+1,w
 22670  245B  39F7               	andlw	-9
 22671  245C  0623               	xorwf	??_LCD_w_byte+1,w
 22672  245D  008F               	movwf	15	;volatile
 22673                           
 22674                           ;LCD.c: 245: LCD_pulse();
 22675  245E  31AC  2414  31A4   	fcall	_LCD_pulse
 22676                           
 22677                           ;LCD.c: 247: PORTDbits.RD0 = C & 0x01;
 22678  2461  3001               	movlw	1
 22679  2462  0020               	movlb	0	; select bank0
 22680  2463  0524               	andwf	LCD_w_byte@C,w
 22681  2464  00A2               	movwf	??_LCD_w_byte
 22682  2465  080F               	movf	15,w	;volatile
 22683  2466  0622               	xorwf	??_LCD_w_byte,w
 22684  2467  39FE               	andlw	-2
 22685  2468  0622               	xorwf	??_LCD_w_byte,w
 22686  2469  008F               	movwf	15	;volatile
 22687                           
 22688                           ;LCD.c: 248: PORTDbits.RD1 = C >> 1;
 22689  246A  3624               	lsrf	LCD_w_byte@C,w
 22690  246B  00A2               	movwf	??_LCD_w_byte
 22691  246C  0DA2               	rlf	??_LCD_w_byte,f
 22692  246D  080F               	movf	15,w	;volatile
 22693  246E  0622               	xorwf	??_LCD_w_byte,w
 22694  246F  39FD               	andlw	-3
 22695  2470  0622               	xorwf	??_LCD_w_byte,w
 22696  2471  008F               	movwf	15	;volatile
 22697                           
 22698                           ;LCD.c: 249: PORTDbits.RD2 = C >> 2;
 22699  2472  0824               	movf	LCD_w_byte@C,w
 22700  2473  00A2               	movwf	??_LCD_w_byte
 22701  2474  3002               	movlw	2
 22702  2475                     u7475:	
 22703  2475  36A2               	lsrf	??_LCD_w_byte,f
 22704  2476  0B89               	decfsz	9,f
 22705  2477  2C75               	goto	u7475
 22706  2478  0822               	movf	??_LCD_w_byte,w
 22707  2479  00A3               	movwf	??_LCD_w_byte+1
 22708  247A  0DA3               	rlf	??_LCD_w_byte+1,f
 22709  247B  0DA3               	rlf	??_LCD_w_byte+1,f
 22710  247C  080F               	movf	15,w	;volatile
 22711  247D  0623               	xorwf	??_LCD_w_byte+1,w
 22712  247E  39FB               	andlw	-5
 22713  247F  0623               	xorwf	??_LCD_w_byte+1,w
 22714  2480  008F               	movwf	15	;volatile
 22715                           
 22716                           ;LCD.c: 250: PORTDbits.RD3 = C >> 3;
 22717  2481  0824               	movf	LCD_w_byte@C,w
 22718  2482  00A2               	movwf	??_LCD_w_byte
 22719  2483  3003               	movlw	3
 22720  2484                     u7485:	
 22721  2484  36A2               	lsrf	??_LCD_w_byte,f
 22722  2485  0B89               	decfsz	9,f
 22723  2486  2C84               	goto	u7485
 22724  2487  0822               	movf	??_LCD_w_byte,w
 22725  2488  00A3               	movwf	??_LCD_w_byte+1
 22726  2489  0DA3               	rlf	??_LCD_w_byte+1,f
 22727  248A  0DA3               	rlf	??_LCD_w_byte+1,f
 22728  248B  0DA3               	rlf	??_LCD_w_byte+1,f
 22729  248C  080F               	movf	15,w	;volatile
 22730  248D  0623               	xorwf	??_LCD_w_byte+1,w
 22731  248E  39F7               	andlw	-9
 22732  248F  0623               	xorwf	??_LCD_w_byte+1,w
 22733  2490  008F               	movwf	15	;volatile
 22734                           
 22735                           ;LCD.c: 252: LCD_pulse();
 22736  2491  31AC  2414         	fcall	_LCD_pulse
 22737  2493  0008               	return
 22738  2494                     __end_of_LCD_w_byte:	
 22739                           
 22740                           	psect	text72
 22741  2C14                     __ptext72:	
 22742 ;; *************** function _LCD_pulse *****************
 22743 ;; Defined at:
 22744 ;;		line 271 in file "LCD.c"
 22745 ;; Parameters:    Size  Location     Type
 22746 ;;		None
 22747 ;; Auto vars:     Size  Location     Type
 22748 ;;  i               1    1[BANK0 ] unsigned char 
 22749 ;; Return value:  Size  Location     Type
 22750 ;;		None               void
 22751 ;; Registers used:
 22752 ;;		wreg, status,2, status,0
 22753 ;; Tracked objects:
 22754 ;;		On entry : 0/0
 22755 ;;		On exit  : 0/0
 22756 ;;		Unchanged: 0/0
 22757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22759 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22760 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22761 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22762 ;;Total ram usage:        2 bytes
 22763 ;; Hardware stack levels used:    1
 22764 ;; Hardware stack levels required when called:    5
 22765 ;; This function calls:
 22766 ;;		Nothing
 22767 ;; This function is called by:
 22768 ;;		_LCD_w_byte
 22769 ;; This function uses a non-reentrant model
 22770 ;;
 22771                           
 22772                           
 22773                           ;psect for function _LCD_pulse
 22774  2C14                     _LCD_pulse:	
 22775                           
 22776                           ;LCD.c: 273: uint8_t i;
 22777                           ;LCD.c: 275: PORTBbits.RB0 = 1;
 22778                           
 22779                           ;incstack = 0
 22780                           ; Regs used in _LCD_pulse: [wreg+status,2+status,0]
 22781  2C14  0020               	movlb	0	; select bank0
 22782  2C15  140D               	bsf	13,0	;volatile
 22783                           
 22784                           ;LCD.c: 277: for(i = 0; i < 20; i++){
 22785  2C16  01A1               	clrf	LCD_pulse@i
 22786  2C17  3014               	movlw	20
 22787  2C18  0221               	subwf	LCD_pulse@i,w
 22788  2C19  1803               	btfsc	3,0
 22789  2C1A  2C23               	goto	l567
 22790  2C1B                     l5830:	
 22791                           
 22792                           ;LCD.c: 278: ;
 22793  2C1B  3001               	movlw	1
 22794  2C1C  00A0               	movwf	??_LCD_pulse
 22795  2C1D  0820               	movf	??_LCD_pulse,w
 22796  2C1E  07A1               	addwf	LCD_pulse@i,f
 22797  2C1F  3014               	movlw	20
 22798  2C20  0221               	subwf	LCD_pulse@i,w
 22799  2C21  1C03               	skipc
 22800  2C22  2C1B               	goto	l5830
 22801  2C23                     l567:	
 22802                           
 22803                           ;LCD.c: 279: }
 22804                           ;LCD.c: 281: PORTBbits.RB0 = 0;
 22805  2C23  100D               	bcf	13,0	;volatile
 22806                           
 22807                           ;LCD.c: 283: for(i = 0; i < 100; i++){
 22808  2C24  01A1               	clrf	LCD_pulse@i
 22809  2C25                     L17:	
 22810  2C25  3064               	movlw	100
 22811  2C26  0221               	subwf	LCD_pulse@i,w
 22812  2C27  1803               	btfsc	3,0
 22813  2C28  0008               	return
 22814                           
 22815                           ;LCD.c: 284: ;
 22816  2C29  3001               	movlw	1
 22817  2C2A  00A0               	movwf	??_LCD_pulse
 22818  2C2B  0820               	movf	??_LCD_pulse,w
 22819  2C2C  07A1               	addwf	LCD_pulse@i,f
 22820  2C2D  2C25               	goto	L17
 22821  2C2E                     __end_of_LCD_pulse:	
 22822                           
 22823                           	psect	intentry
 22824  0004                     __pintentry:	
 22825 ;; *************** function _INTERRUPT_InterruptManager *****************
 22826 ;; Defined at:
 22827 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 22828 ;; Parameters:    Size  Location     Type
 22829 ;;		None
 22830 ;; Auto vars:     Size  Location     Type
 22831 ;;		None
 22832 ;; Return value:  Size  Location     Type
 22833 ;;		None               void
 22834 ;; Registers used:
 22835 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22836 ;; Tracked objects:
 22837 ;;		On entry : 0/0
 22838 ;;		On exit  : 0/0
 22839 ;;		Unchanged: 0/0
 22840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22843 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22844 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22845 ;;Total ram usage:        1 bytes
 22846 ;; Hardware stack levels used:    1
 22847 ;; Hardware stack levels required when called:    4
 22848 ;; This function calls:
 22849 ;;		_EUSART_Receive_ISR
 22850 ;;		_EUSART_Transmit_ISR
 22851 ;;		_TMR0_ISR
 22852 ;; This function is called by:
 22853 ;;		Interrupt level 1
 22854 ;; This function uses a non-reentrant model
 22855 ;;
 22856                           
 22857  0004                     _INTERRUPT_InterruptManager:	
 22858                           
 22859                           ;incstack = 0
 22860                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 22861  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 22862  0005  3180               	pagesel	$
 22863  0006  0020               	movlb	0	; select bank0
 22864  0007  087F               	movf	127,w
 22865  0008  00F5               	movwf	??_INTERRUPT_InterruptManager
 22866                           
 22867                           ;interrupt_manager.c: 54: if (INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1) {
 22868  0009  1A8B               	btfsc	11,5	;volatile
 22869  000A  1D0B               	btfss	11,2	;volatile
 22870  000B  2810               	goto	i1l318
 22871                           
 22872                           ;interrupt_manager.c: 55: TMR0_ISR();
 22873  000C  31AB  23FA  3180   	fcall	_TMR0_ISR
 22874                           
 22875                           ;interrupt_manager.c: 56: } else if (PIE1bits.RCIE == 1 && PIR1bits.RCIF == 1) {
 22876  000F  2822               	goto	i1l324
 22877  0010                     i1l318:	
 22878  0010  0021               	movlb	1	; select bank1
 22879  0011  1E91               	btfss	17,5	;volatile
 22880  0012  281A               	goto	i1l320
 22881  0013  0020               	movlb	0	; select bank0
 22882  0014  1E91               	btfss	17,5	;volatile
 22883  0015  281A               	goto	i1l320
 22884                           
 22885                           ;interrupt_manager.c: 57: EUSART_Receive_ISR();
 22886  0016  31AC  2449  3180   	fcall	_EUSART_Receive_ISR
 22887                           
 22888                           ;interrupt_manager.c: 58: } else if (PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1) {
 22889  0019  2822               	goto	i1l324
 22890  001A                     i1l320:	
 22891  001A  0021               	movlb	1	; select bank1
 22892  001B  1E11               	btfss	17,4	;volatile
 22893  001C  2822               	goto	i1l324
 22894  001D  0020               	movlb	0	; select bank0
 22895  001E  1E11               	btfss	17,4	;volatile
 22896  001F  2822               	goto	i1l324
 22897                           
 22898                           ;interrupt_manager.c: 59: EUSART_Transmit_ISR();
 22899  0020  31AC  24D5         	fcall	_EUSART_Transmit_ISR
 22900  0022                     i1l324:	
 22901                           ;interrupt_manager.c: 60: } else {
 22902                           
 22903  0022  0875               	movf	??_INTERRUPT_InterruptManager,w
 22904  0023  0020               	movlb	0	; select bank0
 22905  0024  00FF               	movwf	127
 22906  0025  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 22907  0026  0009               	retfie
 22908  0027                     __end_of_INTERRUPT_InterruptManager:	
 22909                           
 22910                           	psect	text74
 22911  2BFA                     __ptext74:	
 22912 ;; *************** function _TMR0_ISR *****************
 22913 ;; Defined at:
 22914 ;;		line 102 in file "mcc_generated_files/tmr0.c"
 22915 ;; Parameters:    Size  Location     Type
 22916 ;;		None
 22917 ;; Auto vars:     Size  Location     Type
 22918 ;;		None
 22919 ;; Return value:  Size  Location     Type
 22920 ;;		None               void
 22921 ;; Registers used:
 22922 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 22923 ;; Tracked objects:
 22924 ;;		On entry : 0/0
 22925 ;;		On exit  : 0/0
 22926 ;;		Unchanged: 0/0
 22927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 22928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 22932 ;;Total ram usage:        0 bytes
 22933 ;; Hardware stack levels used:    1
 22934 ;; Hardware stack levels required when called:    3
 22935 ;; This function calls:
 22936 ;;		_TMR0_CallBack
 22937 ;;		_ms_ISR
 22938 ;; This function is called by:
 22939 ;;		_INTERRUPT_InterruptManager
 22940 ;; This function uses a non-reentrant model
 22941 ;;
 22942                           
 22943                           
 22944                           ;psect for function _TMR0_ISR
 22945  2BFA                     _TMR0_ISR:	
 22946                           
 22947                           ;tmr0.c: 103: static volatile unsigned int CountCallBack = 0;
 22948                           ;tmr0.c: 106: INTCONbits.TMR0IF = 0;
 22949                           
 22950                           ;incstack = 0
 22951                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 22952  2BFA  110B               	bcf	11,2	;volatile
 22953                           
 22954                           ;tmr0.c: 108: TMR0 = timer0ReloadVal;
 22955  2BFB  0021               	movlb	1	; select bank1
 22956  2BFC  0869               	movf	_timer0ReloadVal^(0+128),w	;volatile
 22957  2BFD  0020               	movlb	0	; select bank0
 22958  2BFE  0095               	movwf	21	;volatile
 22959                           
 22960                           ;tmr0.c: 111: if (++CountCallBack >= 100) {
 22961  2BFF  3001               	movlw	1
 22962  2C00  0021               	movlb	1	; select bank1
 22963  2C01  07DC               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
 22964  2C02  3000               	movlw	0
 22965  2C03  3DDD               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
 22966  2C04  3000               	movlw	0
 22967  2C05  025D               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
 22968  2C06  3064               	movlw	100
 22969  2C07  1903               	skipnz
 22970  2C08  025C               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
 22971  2C09  1C03               	skipc
 22972  2C0A  2C11               	goto	i1l5016
 22973                           
 22974                           ;tmr0.c: 113: TMR0_CallBack();
 22975  2C0B  3180  2003  31AB   	fcall	_TMR0_CallBack
 22976                           
 22977                           ;tmr0.c: 116: CountCallBack = 0;
 22978  2C0E  0021               	movlb	1	; select bank1
 22979  2C0F  01DC               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
 22980  2C10  01DD               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
 22981  2C11                     i1l5016:	
 22982                           
 22983                           ;tmr0.c: 117: }
 22984                           ;tmr0.c: 119: ms_ISR();
 22985  2C11  31AD  2530         	fcall	_ms_ISR
 22986  2C13  0008               	return
 22987  2C14                     __end_of_TMR0_ISR:	
 22988                           
 22989                           	psect	text75
 22990  2D30                     __ptext75:	
 22991 ;; *************** function _ms_ISR *****************
 22992 ;; Defined at:
 22993 ;;		line 10 in file "isr.c"
 22994 ;; Parameters:    Size  Location     Type
 22995 ;;		None
 22996 ;; Auto vars:     Size  Location     Type
 22997 ;;		None
 22998 ;; Return value:  Size  Location     Type
 22999 ;;		None               void
 23000 ;; Registers used:
 23001 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23002 ;; Tracked objects:
 23003 ;;		On entry : 0/0
 23004 ;;		On exit  : 0/0
 23005 ;;		Unchanged: 0/0
 23006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23011 ;;Total ram usage:        0 bytes
 23012 ;; Hardware stack levels used:    1
 23013 ;; Hardware stack levels required when called:    2
 23014 ;; This function calls:
 23015 ;;		_service_delay
 23016 ;;		_service_serial
 23017 ;; This function is called by:
 23018 ;;		_TMR0_ISR
 23019 ;; This function uses a non-reentrant model
 23020 ;;
 23021                           
 23022                           
 23023                           ;psect for function _ms_ISR
 23024  2D30                     _ms_ISR:	
 23025                           
 23026                           ;isr.c: 12: static uint16_t LED_PIN_counter = 0;
 23027                           ;isr.c: 14: service_serial();
 23028                           
 23029                           ;incstack = 0
 23030                           ; Regs used in _ms_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23031  2D30  31AD  2510  31AD   	fcall	_service_serial
 23032                           
 23033                           ;isr.c: 15: service_delay();
 23034  2D33  31AB  23E0  31AD   	fcall	_service_delay
 23035                           
 23036                           ;isr.c: 17: if(++LED_PIN_counter == 500){
 23037  2D36  3001               	movlw	1
 23038  2D37  0021               	movlb	1	; select bank1
 23039  2D38  07E2               	addwf	ms_ISR@LED_PIN_counter^(0+128),f
 23040  2D39  3000               	movlw	0
 23041  2D3A  3DE3               	addwfc	(ms_ISR@LED_PIN_counter+1)^(0+128),f
 23042  2D3B  30F4               	movlw	244
 23043  2D3C  0662               	xorwf	ms_ISR@LED_PIN_counter^(0+128),w
 23044  2D3D  1D03               	skipz
 23045  2D3E  0008               	return
 23046  2D3F  0363               	decf	(ms_ISR@LED_PIN_counter+1)^(0+128),w
 23047  2D40  1D03               	btfss	3,2
 23048  2D41  0008               	return
 23049                           
 23050                           ;isr.c: 18: PORTBbits.RB2 = !PORTBbits.RB2;
 23051  2D42  1003               	clrc
 23052  2D43  0020               	movlb	0	; select bank0
 23053  2D44  1D0D               	btfss	13,2	;volatile
 23054  2D45  1403               	setc
 23055  2D46  1C03               	btfss	3,0
 23056  2D47  2D4B               	goto	u492_20
 23057  2D48  0020               	movlb	0	; select bank0
 23058  2D49  150D               	bsf	13,2	;volatile
 23059  2D4A  2D4D               	goto	i1l4420
 23060  2D4B                     u492_20:	
 23061  2D4B  0020               	movlb	0	; select bank0
 23062  2D4C  110D               	bcf	13,2	;volatile
 23063  2D4D                     i1l4420:	
 23064                           
 23065                           ;isr.c: 19: LED_PIN_counter = 0;
 23066  2D4D  0021               	movlb	1	; select bank1
 23067  2D4E  01E2               	clrf	ms_ISR@LED_PIN_counter^(0+128)
 23068  2D4F  01E3               	clrf	(ms_ISR@LED_PIN_counter+1)^(0+128)
 23069  2D50  0008               	return
 23070  2D51                     __end_of_ms_ISR:	
 23071                           
 23072                           	psect	text76
 23073  2D10                     __ptext76:	
 23074 ;; *************** function _service_serial *****************
 23075 ;; Defined at:
 23076 ;;		line 27 in file "serial.c"
 23077 ;; Parameters:    Size  Location     Type
 23078 ;;		None
 23079 ;; Auto vars:     Size  Location     Type
 23080 ;;		None
 23081 ;; Return value:  Size  Location     Type
 23082 ;;		None               void
 23083 ;; Registers used:
 23084 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 23085 ;; Tracked objects:
 23086 ;;		On entry : 0/0
 23087 ;;		On exit  : 0/0
 23088 ;;		Unchanged: 0/0
 23089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23092 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23093 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23094 ;;Total ram usage:        3 bytes
 23095 ;; Hardware stack levels used:    1
 23096 ;; Hardware stack levels required when called:    1
 23097 ;; This function calls:
 23098 ;;		_EUSART_Read
 23099 ;; This function is called by:
 23100 ;;		_ms_ISR
 23101 ;; This function uses a non-reentrant model
 23102 ;;
 23103                           
 23104                           
 23105                           ;psect for function _service_serial
 23106  2D10                     _service_serial:	
 23107                           
 23108                           ;serial.c: 29: if ((eusartRxCount)){
 23109                           
 23110                           ;incstack = 0
 23111                           ; Regs used in _service_serial: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 23112  2D10  0878               	movf	_eusartRxCount,w	;volatile
 23113  2D11  1903               	btfsc	3,2
 23114  2D12  0008               	return
 23115                           
 23116                           ;serial.c: 30: if (RCREG != 0x0D){
 23117  2D13  300D               	movlw	13
 23118  2D14  0023               	movlb	3	; select bank3
 23119  2D15  0619               	xorwf	25,w	;volatile
 23120  2D16  1903               	btfsc	3,2
 23121  2D17  0008               	return
 23122                           
 23123                           ;serial.c: 31: circ_buf[circ_buf_head] = EUSART_Read();
 23124  2D18  31AC  2465         	fcall	_EUSART_Read
 23125  2D1A  00F2               	movwf	??_service_serial
 23126  2D1B  0876               	movf	_circ_buf_head,w	;volatile
 23127  2D1C  3E0C               	addlw	12
 23128  2D1D  00F3               	movwf	??_service_serial+1
 23129  2D1E  01F4               	clrf	??_service_serial+2
 23130  2D1F  3027               	movlw	39
 23131  2D20  3DF4               	addwfc	??_service_serial+2,f
 23132  2D21  0873               	movf	??_service_serial+1,w
 23133  2D22  0086               	movwf	6
 23134  2D23  0874               	movf	??_service_serial+2,w
 23135  2D24  0087               	movwf	7
 23136  2D25  0872               	movf	??_service_serial,w
 23137  2D26  0081               	movwf	1
 23138                           
 23139                           ;serial.c: 32: circ_buf_head++;
 23140  2D27  3001               	movlw	1
 23141  2D28  00F2               	movwf	??_service_serial
 23142  2D29  0872               	movf	??_service_serial,w
 23143  2D2A  07F6               	addwf	_circ_buf_head,f	;volatile
 23144                           
 23145                           ;serial.c: 33: circ_buf_head &= 0b01111111;
 23146  2D2B  307F               	movlw	127
 23147  2D2C  00F2               	movwf	??_service_serial
 23148  2D2D  0872               	movf	??_service_serial,w
 23149  2D2E  05F6               	andwf	_circ_buf_head,f	;volatile
 23150  2D2F  0008               	return
 23151  2D30                     __end_of_service_serial:	
 23152                           
 23153                           	psect	text77
 23154  2C65                     __ptext77:	
 23155 ;; *************** function _EUSART_Read *****************
 23156 ;; Defined at:
 23157 ;;		line 112 in file "mcc_generated_files/eusart.c"
 23158 ;; Parameters:    Size  Location     Type
 23159 ;;		None
 23160 ;; Auto vars:     Size  Location     Type
 23161 ;;  readValue       1    1[COMMON] unsigned char 
 23162 ;; Return value:  Size  Location     Type
 23163 ;;                  1    wreg      unsigned char 
 23164 ;; Registers used:
 23165 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23166 ;; Tracked objects:
 23167 ;;		On entry : 0/0
 23168 ;;		On exit  : 0/0
 23169 ;;		Unchanged: 0/0
 23170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23175 ;;Total ram usage:        2 bytes
 23176 ;; Hardware stack levels used:    1
 23177 ;; This function calls:
 23178 ;;		Nothing
 23179 ;; This function is called by:
 23180 ;;		_service_serial
 23181 ;; This function uses a non-reentrant model
 23182 ;;
 23183                           
 23184                           
 23185                           ;psect for function _EUSART_Read
 23186  2C65                     _EUSART_Read:	
 23187                           
 23188                           ;eusart.c: 113: uint8_t readValue = 0;
 23189                           
 23190                           ;incstack = 0
 23191                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 23192  2C65  01F1               	clrf	EUSART_Read@readValue
 23193  2C66                     i1l3916:	
 23194                           ;eusart.c: 115: while (0 == eusartRxCount) {
 23195                           
 23196  2C66  0878               	movf	_eusartRxCount,w	;volatile
 23197  2C67  1903               	btfsc	3,2
 23198  2C68  2C66               	goto	i1l3916
 23199                           
 23200                           ;eusart.c: 116: }
 23201                           ;eusart.c: 118: PIE1bits.RCIE = 0;
 23202  2C69  0021               	movlb	1	; select bank1
 23203  2C6A  1291               	bcf	17,5	;volatile
 23204                           
 23205                           ;eusart.c: 120: readValue = eusartRxBuffer[eusartRxTail++];
 23206  2C6B  0865               	movf	_eusartRxTail^(0+128),w
 23207  2C6C  3EBE               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 23208  2C6D  0086               	movwf	6
 23209  2C6E  3001               	movlw	1	; select bank3/4
 23210  2C6F  0087               	movwf	7
 23211  2C70  0801               	movf	1,w
 23212  2C71  00F0               	movwf	??_EUSART_Read
 23213  2C72  0870               	movf	??_EUSART_Read,w
 23214  2C73  00F1               	movwf	EUSART_Read@readValue
 23215  2C74  3001               	movlw	1
 23216  2C75  00F0               	movwf	??_EUSART_Read
 23217  2C76  0870               	movf	??_EUSART_Read,w
 23218  2C77  07E5               	addwf	_eusartRxTail^(0+128),f
 23219                           
 23220                           ;eusart.c: 121: if (sizeof (eusartRxBuffer) <= eusartRxTail) {
 23221  2C78  3008               	movlw	8
 23222  2C79  0265               	subwf	_eusartRxTail^(0+128),w
 23223  2C7A  1803               	btfsc	3,0
 23224                           
 23225                           ;eusart.c: 122: eusartRxTail = 0;
 23226  2C7B  01E5               	clrf	_eusartRxTail^(0+128)
 23227                           
 23228                           ;eusart.c: 123: }
 23229                           ;eusart.c: 124: eusartRxCount--;
 23230  2C7C  3001               	movlw	1
 23231  2C7D  02F8               	subwf	_eusartRxCount,f	;volatile
 23232                           
 23233                           ;eusart.c: 125: PIE1bits.RCIE = 1;
 23234  2C7E  1691               	bsf	17,5	;volatile
 23235                           
 23236                           ;eusart.c: 127: return readValue;
 23237  2C7F  0871               	movf	EUSART_Read@readValue,w
 23238  2C80  0008               	return
 23239  2C81                     __end_of_EUSART_Read:	
 23240                           
 23241                           	psect	text78
 23242  2BE0                     __ptext78:	
 23243 ;; *************** function _service_delay *****************
 23244 ;; Defined at:
 23245 ;;		line 84 in file "delay.c"
 23246 ;; Parameters:    Size  Location     Type
 23247 ;;		None
 23248 ;; Auto vars:     Size  Location     Type
 23249 ;;		None
 23250 ;; Return value:  Size  Location     Type
 23251 ;;		None               void
 23252 ;; Registers used:
 23253 ;;		wreg, status,2, status,0
 23254 ;; Tracked objects:
 23255 ;;		On entry : 0/0
 23256 ;;		On exit  : 0/0
 23257 ;;		Unchanged: 0/0
 23258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23263 ;;Total ram usage:        0 bytes
 23264 ;; Hardware stack levels used:    1
 23265 ;; This function calls:
 23266 ;;		Nothing
 23267 ;; This function is called by:
 23268 ;;		_ms_ISR
 23269 ;; This function uses a non-reentrant model
 23270 ;;
 23271                           
 23272                           
 23273                           ;psect for function _service_delay
 23274  2BE0                     _service_delay:	
 23275                           
 23276                           ;delay.c: 86: if(flag){
 23277                           
 23278                           ;incstack = 0
 23279                           ; Regs used in _service_delay: [wreg+status,2+status,0]
 23280  2BE0  087A               	movf	_flag,w	;volatile
 23281  2BE1  1903               	btfsc	3,2
 23282  2BE2  2BEC               	goto	i1l4078
 23283                           
 23284                           ;delay.c: 87: mailbox--;
 23285  2BE3  3001               	movlw	1
 23286  2BE4  0021               	movlb	1	; select bank1
 23287  2BE5  02DE               	subwf	_mailbox^(0+128),f	;volatile
 23288  2BE6  3000               	movlw	0
 23289  2BE7  3BDF               	subwfb	(_mailbox+1)^(0+128),f	;volatile
 23290                           
 23291                           ;delay.c: 88: if (mailbox == 0){
 23292  2BE8  085E               	movf	_mailbox^(0+128),w	;volatile
 23293  2BE9  045F               	iorwf	(_mailbox+1)^(0+128),w	;volatile
 23294  2BEA  1903               	btfsc	3,2
 23295                           
 23296                           ;delay.c: 89: flag = 0x00;
 23297  2BEB  01FA               	clrf	_flag	;volatile
 23298  2BEC                     i1l4078:	
 23299                           
 23300                           ;delay.c: 90: }
 23301                           ;delay.c: 91: }
 23302                           ;delay.c: 93: if (nb_flag){
 23303  2BEC  0021               	movlb	1	; select bank1
 23304  2BED  0867               	movf	_nb_flag^(0+128),w	;volatile
 23305  2BEE  1903               	btfsc	3,2
 23306  2BEF  0008               	return
 23307                           
 23308                           ;delay.c: 94: nb_mailbox--;
 23309  2BF0  3001               	movlw	1
 23310  2BF1  02E0               	subwf	_nb_mailbox^(0+128),f	;volatile
 23311  2BF2  3000               	movlw	0
 23312  2BF3  3BE1               	subwfb	(_nb_mailbox+1)^(0+128),f	;volatile
 23313                           
 23314                           ;delay.c: 95: if (nb_mailbox == 0){
 23315  2BF4  0860               	movf	_nb_mailbox^(0+128),w	;volatile
 23316  2BF5  0461               	iorwf	(_nb_mailbox+1)^(0+128),w	;volatile
 23317  2BF6  1D03               	btfss	3,2
 23318  2BF7  0008               	return
 23319                           
 23320                           ;delay.c: 96: nb_flag = 0x00;
 23321  2BF8  01E7               	clrf	_nb_flag^(0+128)	;volatile
 23322  2BF9  0008               	return
 23323  2BFA                     __end_of_service_delay:	
 23324                           
 23325                           	psect	text79
 23326  0003                     __ptext79:	
 23327 ;; *************** function _TMR0_CallBack *****************
 23328 ;; Defined at:
 23329 ;;		line 122 in file "mcc_generated_files/tmr0.c"
 23330 ;; Parameters:    Size  Location     Type
 23331 ;;		None
 23332 ;; Auto vars:     Size  Location     Type
 23333 ;;		None
 23334 ;; Return value:  Size  Location     Type
 23335 ;;		None               void
 23336 ;; Registers used:
 23337 ;;		None
 23338 ;; Tracked objects:
 23339 ;;		On entry : 0/0
 23340 ;;		On exit  : 0/0
 23341 ;;		Unchanged: 0/0
 23342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23347 ;;Total ram usage:        0 bytes
 23348 ;; Hardware stack levels used:    1
 23349 ;; This function calls:
 23350 ;;		Nothing
 23351 ;; This function is called by:
 23352 ;;		_TMR0_ISR
 23353 ;; This function uses a non-reentrant model
 23354 ;;
 23355                           
 23356                           
 23357                           ;psect for function _TMR0_CallBack
 23358  0003                     _TMR0_CallBack:	
 23359                           
 23360                           ;incstack = 0
 23361                           ; Regs used in _TMR0_CallBack: []
 23362  0003  0008               	return
 23363  0004                     __end_of_TMR0_CallBack:	
 23364                           
 23365                           	psect	text80
 23366  2CD5                     __ptext80:	
 23367 ;; *************** function _EUSART_Transmit_ISR *****************
 23368 ;; Defined at:
 23369 ;;		line 147 in file "mcc_generated_files/eusart.c"
 23370 ;; Parameters:    Size  Location     Type
 23371 ;;		None
 23372 ;; Auto vars:     Size  Location     Type
 23373 ;;		None
 23374 ;; Return value:  Size  Location     Type
 23375 ;;		None               void
 23376 ;; Registers used:
 23377 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23378 ;; Tracked objects:
 23379 ;;		On entry : 0/0
 23380 ;;		On exit  : 0/0
 23381 ;;		Unchanged: 0/0
 23382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23385 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23386 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23387 ;;Total ram usage:        1 bytes
 23388 ;; Hardware stack levels used:    1
 23389 ;; This function calls:
 23390 ;;		Nothing
 23391 ;; This function is called by:
 23392 ;;		_INTERRUPT_InterruptManager
 23393 ;; This function uses a non-reentrant model
 23394 ;;
 23395                           
 23396                           
 23397                           ;psect for function _EUSART_Transmit_ISR
 23398  2CD5                     _EUSART_Transmit_ISR:	
 23399                           
 23400                           ;eusart.c: 150: if (sizeof (eusartTxBuffer) > eusartTxBufferRemaining) {
 23401                           
 23402                           ;incstack = 0
 23403                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 23404  2CD5  3008               	movlw	8
 23405  2CD6  0021               	movlb	1	; select bank1
 23406  2CD7  0268               	subwf	_eusartTxBufferRemaining^(0+128),w	;volatile
 23407  2CD8  1803               	skipnc
 23408  2CD9  2CF0               	goto	i1l171
 23409                           
 23410                           ;eusart.c: 151: TX1REG = eusartTxBuffer[eusartTxTail++];
 23411  2CDA  0866               	movf	_eusartTxTail^(0+128),w
 23412  2CDB  3EC6               	addlw	(low (_eusartTxBuffer| (0+256)))& (0+255)
 23413  2CDC  0086               	movwf	6
 23414  2CDD  3001               	movlw	1	; select bank3/4
 23415  2CDE  0087               	movwf	7
 23416  2CDF  0801               	movf	1,w
 23417  2CE0  0023               	movlb	3	; select bank3
 23418  2CE1  009A               	movwf	26	;volatile
 23419  2CE2  3001               	movlw	1
 23420  2CE3  00F0               	movwf	??_EUSART_Transmit_ISR
 23421  2CE4  0870               	movf	??_EUSART_Transmit_ISR,w
 23422  2CE5  0021               	movlb	1	; select bank1
 23423  2CE6  07E6               	addwf	_eusartTxTail^(0+128),f
 23424                           
 23425                           ;eusart.c: 152: if (sizeof (eusartTxBuffer) <= eusartTxTail) {
 23426  2CE7  3008               	movlw	8
 23427  2CE8  0266               	subwf	_eusartTxTail^(0+128),w
 23428  2CE9  1803               	btfsc	3,0
 23429                           
 23430                           ;eusart.c: 153: eusartTxTail = 0;
 23431  2CEA  01E6               	clrf	_eusartTxTail^(0+128)
 23432                           
 23433                           ;eusart.c: 154: }
 23434                           ;eusart.c: 155: eusartTxBufferRemaining++;
 23435  2CEB  3001               	movlw	1
 23436  2CEC  00F0               	movwf	??_EUSART_Transmit_ISR
 23437  2CED  0870               	movf	??_EUSART_Transmit_ISR,w
 23438  2CEE  07E8               	addwf	_eusartTxBufferRemaining^(0+128),f	;volatile
 23439                           
 23440                           ;eusart.c: 156: } else {
 23441  2CEF  0008               	return
 23442  2CF0                     i1l171:	
 23443                           
 23444                           ;eusart.c: 157: PIE1bits.TXIE = 0;
 23445  2CF0  1211               	bcf	17,4	;volatile
 23446  2CF1  0008               	return
 23447  2CF2                     __end_of_EUSART_Transmit_ISR:	
 23448                           
 23449                           	psect	text81
 23450  2C49                     __ptext81:	
 23451 ;; *************** function _EUSART_Receive_ISR *****************
 23452 ;; Defined at:
 23453 ;;		line 161 in file "mcc_generated_files/eusart.c"
 23454 ;; Parameters:    Size  Location     Type
 23455 ;;		None
 23456 ;; Auto vars:     Size  Location     Type
 23457 ;;		None
 23458 ;; Return value:  Size  Location     Type
 23459 ;;		None               void
 23460 ;; Registers used:
 23461 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 23462 ;; Tracked objects:
 23463 ;;		On entry : 0/0
 23464 ;;		On exit  : 0/0
 23465 ;;		Unchanged: 0/0
 23466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 23467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23469 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23470 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 23471 ;;Total ram usage:        1 bytes
 23472 ;; Hardware stack levels used:    1
 23473 ;; This function calls:
 23474 ;;		Nothing
 23475 ;; This function is called by:
 23476 ;;		_INTERRUPT_InterruptManager
 23477 ;; This function uses a non-reentrant model
 23478 ;;
 23479                           
 23480                           
 23481                           ;psect for function _EUSART_Receive_ISR
 23482  2C49                     _EUSART_Receive_ISR:	
 23483                           
 23484                           ;eusart.c: 162: if (1 == RC1STAbits.OERR) {
 23485                           
 23486                           ;incstack = 0
 23487                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 23488  2C49  0023               	movlb	3	; select bank3
 23489  2C4A  1C9D               	btfss	29,1	;volatile
 23490  2C4B  2C4E               	goto	i1l4998
 23491                           
 23492                           ;eusart.c: 165: RC1STAbits.CREN = 0;
 23493  2C4C  121D               	bcf	29,4	;volatile
 23494                           
 23495                           ;eusart.c: 166: RC1STAbits.CREN = 1;
 23496  2C4D  161D               	bsf	29,4	;volatile
 23497  2C4E                     i1l4998:	
 23498                           
 23499                           ;eusart.c: 167: }
 23500                           ;eusart.c: 170: eusartRxBuffer[eusartRxHead++] = RC1REG;
 23501  2C4E  0819               	movf	25,w	;volatile
 23502  2C4F  00F0               	movwf	??_EUSART_Receive_ISR
 23503  2C50  0021               	movlb	1	; select bank1
 23504  2C51  0864               	movf	_eusartRxHead^(0+128),w
 23505  2C52  3EBE               	addlw	(low (_eusartRxBuffer| (0+256)))& (0+255)
 23506  2C53  0086               	movwf	6
 23507  2C54  3001               	movlw	1	; select bank3/4
 23508  2C55  0087               	movwf	7
 23509  2C56  0870               	movf	??_EUSART_Receive_ISR,w
 23510  2C57  0081               	movwf	1
 23511  2C58  3001               	movlw	1
 23512  2C59  00F0               	movwf	??_EUSART_Receive_ISR
 23513  2C5A  0870               	movf	??_EUSART_Receive_ISR,w
 23514  2C5B  07E4               	addwf	_eusartRxHead^(0+128),f
 23515                           
 23516                           ;eusart.c: 171: if (sizeof (eusartRxBuffer) <= eusartRxHead) {
 23517  2C5C  3008               	movlw	8
 23518  2C5D  0264               	subwf	_eusartRxHead^(0+128),w
 23519  2C5E  1803               	btfsc	3,0
 23520                           
 23521                           ;eusart.c: 172: eusartRxHead = 0;
 23522  2C5F  01E4               	clrf	_eusartRxHead^(0+128)
 23523                           
 23524                           ;eusart.c: 173: }
 23525                           ;eusart.c: 174: eusartRxCount++;
 23526  2C60  3001               	movlw	1
 23527  2C61  00F0               	movwf	??_EUSART_Receive_ISR
 23528  2C62  0870               	movf	??_EUSART_Receive_ISR,w
 23529  2C63  07F8               	addwf	_eusartRxCount,f	;volatile
 23530  2C64  0008               	return
 23531  2C65                     __end_of_EUSART_Receive_ISR:	
 23532  007E                     btemp	set	126	;btemp
 23533  007E                     int$flags	set	126
 23534  007E                     wtemp	set	126
 23535  007E                     wtemp0	set	126
 23536  0080                     wtemp1	set	128
 23537  0082                     wtemp2	set	130
 23538  0084                     wtemp3	set	132
 23539  0086                     wtemp4	set	134
 23540  0088                     wtemp5	set	136
 23541  007F                     wtemp6	set	127
 23542  007E                     ttemp	set	126
 23543  007E                     ttemp0	set	126
 23544  0081                     ttemp1	set	129
 23545  0084                     ttemp2	set	132
 23546  0087                     ttemp3	set	135
 23547  007F                     ttemp4	set	127
 23548  007E                     ltemp	set	126
 23549  007E                     ltemp0	set	126
 23550  0082                     ltemp1	set	130
 23551  0086                     ltemp2	set	134
 23552  0080                     ltemp3	set	128


Data Sizes:
    Strings     126
    Constant    210
    Data        1
    BSS         65
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      12
    BANK0            80     80      80
    BANK1            80     60      74
    BANK2            80     72      74
    BANK3            80      0      46
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           24      0       0
    BANK22            0      0       0
    BANK23            0      0       0
    BANK24            0      0       0
    BANK25            0      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> floor@expon(BANK0[2]), trunc@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 18
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    atof@s	PTR const unsigned char  size(2) Largest target is 100
		 -> line(BIGRAM[100]), 

    strtod@s	PTR const unsigned char  size(2) Largest target is 100
		 -> line(BIGRAM[100]), 

    strtod@res	PTR PTR const unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_8(CODE[26]), STR_7(CODE[10]), STR_6(CODE[10]), STR_5(CODE[10]), 
		 -> STR_4(CODE[10]), STR_3(CODE[12]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> line(BIGRAM[100]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    LCD_puts_ROM@P	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), 

    LCD_puts_RAM@P	PTR unsigned char  size(2) Largest target is 100
		 -> line(BIGRAM[100]), 

    get_field@field	PTR unsigned char  size(2) Largest target is 100
		 -> line(BIGRAM[100]), 

    line_parser@line	PTR unsigned char  size(2) Largest target is 100
		 -> line(BIGRAM[100]), 

    serial_puts_ROM@P	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_9(CODE[2]), STR_1(CODE[14]), 

    serial_puts_RAM@P	PTR unsigned char  size(2) Largest target is 100
		 -> line(BIGRAM[100]), 

    serial_gets@P	PTR unsigned char  size(2) Largest target is 100
		 -> line(BIGRAM[100]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ms_ISR->_service_serial
    _service_serial->_EUSART_Read

Critical Paths under _main in BANK0

    _scale->___ftmul
    _fround->___ftmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    _serial_puts_ROM->_EUSART_Write
    _serial_puts_RAM->_EUSART_Write
    _fmod->_trunc
    _trunc->___altoft
    _rad2deg->___ftdiv
    _deg2rad->___ftdiv
    _sin->_eval_poly
    _floor->___ftadd
    ___fttol->_scale
    ___ftsub->_floor
    _atan->_eval_poly
    _fabs->___ftge
    _eval_poly->___ftadd
    ___wmul->___awdiv
    ___ftadd->_deg2rad
    _atof->_strtod
    _strtod->___altoft
    ___ftmul->___wmul
    ___ftdiv->___ftmul
    ___altoft->___fttol
    _SYSTEM_Initialize->_EUSART_Initialize
    _SYSTEM_Initialize->_TMR0_Initialize
    _LCD_puts_ROM->_LCD_w_cmd
    _LCD_puts_RAM->_LCD_w_cmd
    _LCD_w_data->_LCD_w_byte
    _LCD_config->_LCD_w_cmd
    _LCD_w_cmd->_delay_ms
    _delay_ms->_delay_ISR_ticks
    _LCD_w_byte->_LCD_pulse

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_heading
    _sprintf->___ftsub
    _heading->_atan2
    _atan2->_cos
    _distance->_acos
    _cos->_sin
    _sin->___ftsub
    _acos->_asin
    _asin->_sqrt
    _sqrt->___ftsub
    _atof->_strtod

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_heading

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0  772481
                                             59 BANK1      1     1      0
                                             54 BANK2     18    18      0
                         _LCD_config
                       _LCD_puts_RAM
                       _LCD_puts_ROM
                  _SYSTEM_Initialize
                               _atof
                           _delay_ms
                           _distance
                          _get_field
                            _heading
                        _line_parser
                        _serial_gets
                   _serial_is_string
                    _serial_puts_RAM
                    _serial_puts_ROM
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             46    36     10   80573
                                              6 BANK1     39    29     10
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               12     9      3   17659
                                             38 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _fround                                              17    14      3   17380
                                             38 BANK0     14    11      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1819
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1985
                                              7 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     431
                                              0 BANK0     16    10      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     574
                                              0 BANK0     20    14      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    2703
                                              8 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     694
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     703
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _serial_puts_ROM                                      3     1      2     281
                                              2 BANK0      3     1      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (1) _serial_puts_RAM                                      2     0      2     281
                                              2 BANK0      2     0      2
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (2) _EUSART_Write                                         2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _serial_is_string                                     4     4      0     108
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _serial_gets                                          4     2      2     155
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _line_parser                                          8     5      3     517
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (1) _heading                                             75    63     12  322856
                                             47 BANK1     12     0     12
                                              0 BANK2     54    54      0
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                              _atan2
                                _cos
                            _deg2rad
                               _fmod
                                _sin
 ---------------------------------------------------------------------------------
 (2) _fmod                                                 9     3      6   28906
                                              0 BANK1      9     3      6
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                              _trunc
 ---------------------------------------------------------------------------------
 (3) _trunc                                                9     6      3    4642
                                             69 BANK0      9     6      3
                           ___altoft
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _atan2                                               24    18      6   89100
                                             26 BANK1     21    15      6
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftneg
                            ___ftsub
                               _atan
                                _cos (ARG)
                               _fabs
                                _sin (ARG)
 ---------------------------------------------------------------------------------
 (1) _get_field                                            6     3      3     824
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (1) _distance                                            37    24     13  332655
                                              0 BANK2     37    24     13
                            ___ftadd
                            ___ftmul
                            ___ftneg
                               _acos
                                _cos
                            _deg2rad
                            _rad2deg
                                _sin
 ---------------------------------------------------------------------------------
 (2) _rad2deg                                              3     0      3   14996
                                             54 BANK0      3     0      3
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) _deg2rad                                              3     0      3   15612
                                             54 BANK0      3     0      3
                            ___ftdiv
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) _cos                                                  9     6      3   85821
                                             20 BANK1      6     3      3
                            ___ftadd
                             ___ftge
                            _deg2rad (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (2) _sin                                                 14    11      3   74145
                                              6 BANK1     14    11      3
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            _deg2rad (ARG)
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (3) _floor                                                9     6      3   15597
                                             70 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                6     2      4     606
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     756
                                             47 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) _acos                                                 6     3      3  122219
                                             49 BANK1      6     3      3
                            ___ftadd
                            ___ftneg
                               _asin
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    33      3  113047
                                             25 BANK1     24    21      3
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (4) _sqrt                                                19    16      3   22276
                                              6 BANK1     19    16      3
                             ___ftge
                            ___ftmul
                            ___ftneg (ARG)
                            ___ftsub
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    8157
                                              0 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _atan                                                17    14      3   56024
                                              0 BANK1     17    14      3
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (3) _fabs                                                 3     0      3    6065
                                              9 BANK0      3     0      3
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (3) _eval_poly                                           10     3      7   21473
                                             70 BANK0     10     3      7
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    3370
                                             16 BANK0      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    7137
                                             57 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
                            _deg2rad (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) _atof                                                 3     0      3   26718
                                             76 BANK0      3     0      3
                             _strtod
 ---------------------------------------------------------------------------------
 (2) _strtod                                              28    25      3   26379
                                             69 BANK0      7     4      3
                                              0 BANK1     21    21      0
                           ___altoft
                             ___bmul
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                             ___lmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (3) _isspace                                              2     2      0     130
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     290
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3    1893
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    9788
                                             22 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6    3694
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    5100
                                             38 BANK0     16    10      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     290
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    2959
                                             61 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2524
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                  _EUSART_Initialize
                     _FVR_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _PWM2_Initialize
                    _PWM3_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_puts_ROM                                         5     1      4    1811
                                              8 BANK0      5     1      4
                          _LCD_w_cmd
                         _LCD_w_data
 ---------------------------------------------------------------------------------
 (1) _LCD_puts_RAM                                         4     0      4    2966
                                              8 BANK0      4     0      4
                          _LCD_w_cmd
                         _LCD_w_data
 ---------------------------------------------------------------------------------
 (2) _LCD_w_data                                           1     1      0     415
                                              5 BANK0      1     1      0
                         _LCD_w_byte
 ---------------------------------------------------------------------------------
 (1) _LCD_config                                           0     0      0    1661
                          _LCD_w_cmd
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _LCD_w_cmd                                            1     1      0    1038
                                              7 BANK0      1     1      0
                         _LCD_w_byte
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             4     2      2     623
                                              3 BANK0      4     2      2
                    _delay_ISR_ticks
 ---------------------------------------------------------------------------------
 (2) _delay_ISR_ticks                                      3     1      2     216
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _LCD_w_byte                                           3     3      0     384
                                              2 BANK0      3     3      0
                          _LCD_pulse
 ---------------------------------------------------------------------------------
 (4) _LCD_pulse                                            2     2      0     136
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           1     1      0      24
                                              5 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR0_ISR                                             0     0      0      24
                      _TMR0_CallBack
                             _ms_ISR
 ---------------------------------------------------------------------------------
 (10) _ms_ISR                                              0     0      0      24
                      _service_delay
                     _service_serial
 ---------------------------------------------------------------------------------
 (11) _service_serial                                      3     3      0      24
                                              2 COMMON     3     3      0
                        _EUSART_Read
 ---------------------------------------------------------------------------------
 (12) _EUSART_Read                                         2     2      0      24
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (11) _service_delay                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR0_CallBack                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _EUSART_Receive_ISR                                   1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_config
     _LCD_w_cmd
       _LCD_w_byte
         _LCD_pulse
       _delay_ms
         _delay_ISR_ticks
     _delay_ms
       _delay_ISR_ticks
   _LCD_puts_RAM
     _LCD_w_cmd
       _LCD_w_byte
         _LCD_pulse
       _delay_ms
         _delay_ISR_ticks
     _LCD_w_data
       _LCD_w_byte
         _LCD_pulse
   _LCD_puts_ROM
     _LCD_w_cmd
       _LCD_w_byte
         _LCD_pulse
       _delay_ms
         _delay_ISR_ticks
     _LCD_w_data
       _LCD_w_byte
         _LCD_pulse
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _FVR_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _PWM2_Initialize
     _PWM3_Initialize
     _SPI_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
       _TMR2_StartTimer
   _atof
     _strtod
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       ___bmul
       ___ftdiv
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___lmul
       _isdigit
       _isspace
   _delay_ms
     _delay_ISR_ticks
   _distance
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _deg2rad (ARG)
         ___ftdiv
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     _acos
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _deg2rad (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftneg
       _asin
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _deg2rad (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftdiv
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         _atan
           ___ftadd
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _deg2rad (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
           _eval_poly
             ___ftadd
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _deg2rad (ARG)
                 ___ftdiv
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _fabs
             ___ftge
             ___ftneg
         _fabs
           ___ftge
           ___ftneg
         _sqrt
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftsub (ARG)
             ___ftadd
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _deg2rad (ARG)
                 ___ftdiv
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
             _floor (ARG)
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___ftmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___ftneg (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftadd
                 ___ftdiv (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 _deg2rad (ARG)
                   ___ftdiv
                     ___ftmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___ftneg (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftge
               ___fttol
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               _frexp
     _cos
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _deg2rad (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
       _deg2rad (ARG)
         ___ftdiv
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _sin (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _deg2rad (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftdiv
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _deg2rad (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
           _floor (ARG)
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftadd
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _deg2rad (ARG)
                 ___ftdiv
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftge
             ___fttol
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _frexp
         _deg2rad (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _eval_poly (ARG)
           ___ftadd
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _deg2rad (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftadd
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _deg2rad (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _frexp
     _deg2rad
       ___ftdiv
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _rad2deg
       ___ftdiv
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _sin
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _deg2rad (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _deg2rad (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftadd
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _deg2rad (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _frexp
       _deg2rad (ARG)
         ___ftdiv
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _eval_poly (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _deg2rad (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _deg2rad (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _frexp
   _get_field
   _heading
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _deg2rad (ARG)
         ___ftdiv
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftdiv
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     _atan2
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _deg2rad (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _deg2rad (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftadd
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _deg2rad (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _frexp
       _atan
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _deg2rad (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftdiv
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         _eval_poly
           ___ftadd
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _deg2rad (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _fabs
           ___ftge
           ___ftneg
       _cos (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _deg2rad (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         _deg2rad (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _sin (ARG)
           ___ftadd
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _deg2rad (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
           ___ftsub
             ___ftadd
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _deg2rad (ARG)
                 ___ftdiv
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
             _floor (ARG)
               ___altoft
                 ___ftpack
                 ___fttol (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   _scale (ARG)
                     ___awdiv
                       ___awmod (ARG)
                     ___awmod
                     ___ftmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___ftneg (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___wmul
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
               ___ftadd
                 ___ftdiv (ARG)
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                 _deg2rad (ARG)
                   ___ftdiv
                     ___ftmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___ftneg (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                 _fround (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               ___ftge
               ___fttol
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               _frexp
           _deg2rad (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _eval_poly (ARG)
             ___ftadd
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _deg2rad (ARG)
                 ___ftdiv
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _floor (ARG)
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftadd
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _deg2rad (ARG)
                 ___ftdiv
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftge
             ___fttol
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _frexp
       _fabs (ARG)
         ___ftge
         ___ftneg
       _sin (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _deg2rad (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftdiv
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _deg2rad (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
           _floor (ARG)
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftadd
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _deg2rad (ARG)
                 ___ftdiv
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftge
             ___fttol
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _frexp
         _deg2rad (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _eval_poly (ARG)
           ___ftadd
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _deg2rad (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftadd
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _deg2rad (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _frexp
     _cos
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _deg2rad (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
       _deg2rad (ARG)
         ___ftdiv
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _sin (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _deg2rad (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftdiv
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
         ___ftsub
           ___ftadd
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _deg2rad (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
           _floor (ARG)
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 _scale (ARG)
                   ___awdiv
                     ___awmod (ARG)
                   ___awmod
                   ___ftmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___wmul
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
             ___ftadd
               ___ftdiv (ARG)
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
               _deg2rad (ARG)
                 ___ftdiv
                   ___ftmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___ftneg (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___ftge
             ___fttol
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _frexp
         _deg2rad (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _eval_poly (ARG)
           ___ftadd
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _deg2rad (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftadd
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _deg2rad (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _frexp
     _deg2rad
       ___ftdiv
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     _fmod
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _deg2rad (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       _trunc
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _frexp
     _sin
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _deg2rad (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftdiv
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _deg2rad (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
         _floor (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               _scale (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___ftmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___wmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
           ___ftadd
             ___ftdiv (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _deg2rad (ARG)
               ___ftdiv
                 ___ftmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___ftneg (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___ftge
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _frexp
       _deg2rad (ARG)
         ___ftdiv
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _eval_poly (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _deg2rad (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _deg2rad (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _frexp
   _line_parser
   _serial_gets
   _serial_is_string
   _serial_puts_RAM
     _EUSART_Write
   _serial_puts_ROM
     _EUSART_Write
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftdiv (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _deg2rad (ARG)
         ___ftdiv
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftdiv (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _deg2rad (ARG)
           ___ftdiv
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
       _floor (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
         ___ftadd
           ___ftdiv (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _deg2rad (ARG)
             ___ftdiv
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___ftneg (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___ftge
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftneg (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftneg (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _frexp
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftneg (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _TMR0_ISR
     _TMR0_CallBack
     _ms_ISR
       _service_delay
       _service_serial
         _EUSART_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     3C      4A       7       92.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     48      4A       9       92.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      2E      11       57.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
ABS                  0      0     11E      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
DATA                 0      0     11E      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITBANK12           50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12              50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITBANK13           50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BANK13              50      0       0      33        0.0%
BITBANK14           50      0       0      34        0.0%
BANK14              50      0       0      35        0.0%
BITBANK15           50      0       0      36        0.0%
BANK15              50      0       0      37        0.0%
BITBANK16           50      0       0      38        0.0%
BANK16              50      0       0      39        0.0%
BITBANK17           50      0       0      40        0.0%
BANK17              50      0       0      41        0.0%
BITBANK18           50      0       0      42        0.0%
BANK18              50      0       0      43        0.0%
BITBANK19           50      0       0      44        0.0%
BANK19              50      0       0      45        0.0%
BITBANK20           50      0       0      46        0.0%
BANK20              50      0       0      47        0.0%
BITBANK21           50      0       0      48        0.0%
BANK21              18      0       0      49        0.0%
BITBANK22           50      0       0      50        0.0%
BANK22               0      0       0      51        0.0%
BITBANK23           50      0       0      52        0.0%
BANK23               0      0       0      53        0.0%
BITBANK24           50      0       0      54        0.0%
BANK24               0      0       0      55        0.0%
BITBANK25           20      0       0      56        0.0%
BANK25               0      0       0      57        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Oct 13 05:07:57 2015

                     _SPI_Initialize 2B23                         ___altoft@exp 0063  
                     ___bmul@product 0022                          __CFG_CP$OFF 0000  
                      ___altoft@sign 0064                         ___awdiv@sign 002D  
             __end_of_FVR_Initialize 2B1D                  ___wmul@multiplicand 0032  
                    _timer0ReloadVal 00E9                         ___ftadd@exp1 0065  
                       ___ftadd@exp2 0064                         ___ftadd@sign 0063  
                                l165 2DC6                                  l441 2BB4  
                                l516 2F5C                                  l446 2BCA  
                        ?_LCD_config 0070                                  l567 2C23  
                                l817 2CC2                                  l690 01BC  
                                l683 0082                                  l936 086B  
                                l937 0940                                  _PR2 001B  
                       __CFG_CPD$OFF 0000                                  _cos 2494  
                        ?_LCD_w_data 0070                                  _sin 1C1C  
                       get_field@cnt 0024                         ___awmod@sign 0026  
                        ?_LCD_w_byte 0070                      _TMR2_Initialize 2B47  
                       __CFG_BORV$LO 0000                                  wreg 0009  
                       __CFG_IESO$ON 0000                         ?_EUSART_Read 0070  
                       __CFG_LVP$OFF 0000                         ___ftdiv@cntr 0050  
                       ___ftdiv@sign 0055                                 l1013 09FA  
                               l1030 0B2D                                 l1008 0A47  
                               l1053 0C79                                 l1223 183D  
                               l1161 23EC                                 l1233 18B6  
                               l1411 1B09                                 l1403 1D3B  
                               l1413 1B42                                 l1149 1AC9  
                               l1168 23FF                                 l1169 2407  
                               l1274 2602                                 l1197 1961  
                               l6010 2B96                                 l3700 2FDB  
                               l6100 22BD                                 ?_cos 00B4  
                               l6006 2B90                                 l6110 22C5  
                               l3704 2FF1                                 l6040 1F01  
                               l6024 1E41                                 l6112 22D1  
                               l7010 239E                                 l7002 236E  
                               l6122 22EC                                 l6052 1F9D  
                               l7020 23B1                                 l5510 23D3  
                               l6070 2161                                 l6230 2DBB  
                               l4710 1A86                                 l4702 1A3E  
                               l6126 22F4                                 l6118 22E3  
                               l6150 2279                                 l6142 2273  
                               l5520 23F9                                 l5512 23D8  
                               l5504 23C2                                 l7008 238C  
                               l4720 1AA5                                 l6152 2285  
                               l6160 229A                                 l6082 2B6B  
                               l5602 1985                                 l6322 24DE  
                               l7018 23AD                                 l4730 1ACC  
                               l4722 1AB3                                 l4634 1825  
                               l6138 226C                                 l5508 23C9  
                               l6068 2160                                 l5612 19A0  
                               l6244 2DDC                                 l6164 22A2  
                               l6156 2291                                 l6420 1120  
                               l5518 23F1                                 l5622 2763  
                               l5534 2CBC                                 l5702 2352  
                               l7070 13BA                                 l7038 2F84  
                               l6350 1404                                 l6342 13E4  
                               l6094 22B2                                 l7134 15FA  
                               l5712 26BA                                 l5640 27B4  
                               l6504 09C8                                 l5552 18EA  
                               l7064 1392                                 l7072 13C5  
                               l6176 21F5                                 l4728 1AC0  
                               l4656 1878                                 l4648 185E  
                               l5562 1900                                 l7066 1397  
                               l6354 140C                                 l7090 0DB6  
                               l4674 18AD                                 l4666 1892  
                               l6450 0692                                 l5820 2D0C  
                               l5740 272A                                 l5732 2711  
                               l5652 27D0                                 l5644 27BC  
                               l5628 2779                                 l6620 0BD2  
                               l6532 0A64                                 l5580 192D  
                               l5556 18F1                                 l5804 2F27  
                               l6380 150F                                 l6364 1431  
                               l4692 19F3                                 l4676 18B9  
                               l4668 18A0                                 l6428 1198  
                               l6444 0633                                 l5830 2C1B  
                               l5718 26D0                                 l6630 0C06  
                               l6526 0A51                                 l5582 1937  
                               l5574 191A                                 l6382 1525  
                               l7094 0DBE                                 l6702 224D  
                               l4686 19D6                                 l6462 0753  
                               l6454 06AF                                 l5656 27D8  
                               l6624 0BD9                                 l6616 0BCA  
                               l6544 0A81                                 l6480 0996  
                               l5592 1953                                 l5584 193C  
                               l5752 2E8B                                 l5912 2542  
                               l6368 1439                                 l6800 0084  
                               l5818 2D00                                 l6634 0C2E  
                               l6562 0AE6                                 l6538 0A75  
                               l6490 09A4                                 l5594 195D  
                               l5586 1940                                 l5762 25AE  
                               l5922 258D                                 l6386 152D  
                               l6706 2258                                 l6714 2E32  
                               l6802 009E                                 l5932 2DA1  
                               l5684 2178                                 l6628 0C01  
                               l6492 09A9                                 l5852 1B11  
                               l5780 25DE                                 l5908 253A  
                               l6396 15AB                                 l6716 2E42  
                               l6468 07B2                                 l6900 038C  
                               l6734 2CA3                                 l5686 2188  
                               l6662 0C95                                 l6590 0B5F  
                               l6574 0B01                                 l6566 0AEB  
                               l6478 0984                                 l5598 1973  
                               l5790 2605                                 l5782 25EC  
                               l6656 0C71                                 l6496 09C5  
                               l6488 099F                                 l5880 0829  
                               l6672 101D                                 l6920 03D0  
                               l6912 03B5                                 l6840 01A0  
                               l6832 014E                                 l6816 00EE  
                               l5938 2DA4                                 l6594 0B87  
                               l6498 09B5                                 l5794 2613  
                               l6754 2E77                                 l6682 104B  
                               l6674 102B                                 l6906 039B  
                               l6588 0B31                                 l5788 25F9  
                               l5964 1C51                                 l6748 2E62  
                               l6756 2E81                                 l5894 095E  
                               l6766 2F8D                                 l6686 1056  
                               l6942 04D3                                 l6854 0222  
                               l6846 01EF                                 l5992 07D8  
                               l5976 1CF7                                 l6776 2FAB  
                               l6696 2227                                 l6960 051C  
                               l6936 04C5                                 l6872 02D0  
                               l6944 04D8                                 l6778 2FBE  
                               l6698 2235                                 l6954 04EF  
                               l6858 023B                                 l5996 07E2  
                               l6884 0303                                 l6868 0281  
                               l6980 0583                                 l6796 007F  
                               ?_sin 00A6                                 l6966 0530  
                               l6878 02D6                                 l6976 0535  
                               l6986 2C87                                 l6898 0317  
                               l6978 005E                                 STR_1 210E  
                               STR_2 20FD                                 STR_3 211C  
                               STR_4 2132                                 STR_5 2128  
                               STR_6 2146                                 STR_7 213C  
                               STR_8 20D2                                 STR_9 211A  
            __end_of_PWM1_Initialize 2B30                                 _LATA 010C  
                               _LATB 010D                                 _LATC 010E  
                               _LATD 010F                                 _LATE 0110  
                               u5135 185F                                 u5225 18AE  
                               u5145 186F                                 u5315 1AA6  
                               u5155 1879                                 u5345 1AC1  
                               u5265 1A3F                                 u7035 26E2  
                               u7115 25B5                                 u5275 1A69  
                               u5195 1893                                 u7045 26F2  
                               u7055 2712                                 u7320 0843  
                               u6505 23F4                                 u7065 2721  
                               u7145 25DF                                 u7330 0844  
                               u7075 272B                                 u7510 1CF3  
                               u7175 25FA                                 u7520 1CF4  
                               u7425 2DAA                                 u6545 240E  
                               u6465 23CE                                 u7435 2429  
                               u7445 2434                                 u6485 23E7  
                               u6725 192E                                 u7455 2442  
                               u8175 09EF                                 u6575 2CC3  
                               u7295 1B2D                                 u7465 2451  
                               u6585 2CC8                                 u7475 2475  
                               u6755 1941                                 u8515 222A  
                               u7485 2484                                 u6925 27D9  
                               u7565 07E3                                 u8445 1020  
                               u7725 22C8                                 u6935 27DF  
                               u6855 2785                                 u7575 07EA  
                               u6695 191B                                 u8535 2243  
                               u6865 2795                                 u6785 1954  
                               u8465 102C                                 u8545 224E  
                               u7745 22D2                                 u7825 227C  
                               u8705 0102                                 u8475 1040  
                               u7755 22DC                                 u6885 27BD  
                               u8485 104C                                 u8565 2E37  
                               u7765 22E4                                 u7845 228B  
                               u6975 217D                                 u6895 27C3  
                               u7855 2292                                 u8815 02F9  
                               u8745 01C6                                 u8915 0512  
                               u8755 01F9                                 u8855 03A4  
                               u8865 03B0                                 u8785 0220  
                               _TMR0 0015                                 _TMR2 001A  
                               _WPUA 020C                                 _WPUB 020D  
                               _WPUC 020E                                 _WPUD 020F  
                               _WPUE 0210                         __CFG_WRT$OFF 0000  
                      __CFG_FCMEN$ON 0000                                 _acos 21A0  
                               _fabs 2D72                                 _atan 0802  
                               _flag 007A                                 _asin 1E01  
                               _atof 2B7D                                 _fmod 261C  
                               _main 15D3                      ??_service_delay 0070  
                               _line 26A8                         ___ftpack@arg 0020  
                               cos@f 00B4                         ___ftpack@exp 0023  
                               fsr0h 0005                                 fsr1h 0007  
                               fsr0l 0004                                 indf0 0000  
                               indf1 0001                                 fsr1l 0006  
                               btemp 007E                                 _sqrt 1AD5  
                      __CFG_BOREN$ON 0000                                 sin@f 00A6  
                               sin@y 00AA                                 ltemp 007E  
                               start 0027                                 ttemp 007E  
                               wtemp 007E               __end_of_SPI_Initialize 2B29  
                       _sprintf$1913 00B6                   __size_of_LCD_w_cmd 0015  
                  ___bmul@multiplier 0023                        __CFG_MCLRE$ON 0000  
                        _strtod$1391 00AC                          _strtod$1392 00A0  
                        _strtod$1393 00A3                          _strtod$1394 00A6  
                        _strtod$1395 00A9                         ___ftmul@cntr 0044  
                 __size_of_LCD_pulse 001A                         ___ftmul@sign 0045  
                       ___fttol@exp1 005C                                ??_cos 0070  
                       ___fttol@lval 0058                                ??_sin 00A9  
            __end_of_PWM2_Initialize 2B37              __end_of_TMR0_Initialize 2B7D  
                      __CFG_PLLEN$ON 0000                      ?_FVR_Initialize 0070  
                      ?_EUSART_Write 0070       __size_of_OSCILLATOR_Initialize 0006  
                  serial_is_string@i 0023        __end_of_OSCILLATOR_Initialize 2B23  
                              ?_acos 00D1                                ?_fabs 0029  
                              ?_atan 00A0                                ?_asin 00B9  
                              ?_atof 006C                                ?_fmod 00A0  
                              ?_main 0070                      __end_of___awdiv 22F9  
                    __end_of___ftadd 19B8                                STR_10 20EC  
                      __CFG_WDTE$OFF 0000                      __end_of___awmod 22A7  
                    __end_of___ftdiv 274C                      __end_of___ftneg 180C  
                    __end_of_deg2rad 2E06                      __end_of___lldiv 105F  
                              ?_sqrt 00A6                      __end_of___ftmul 2800  
                    ___awdiv@divisor 0027                      __end_of___llmod 2261  
                    __end_of___ftsub 2EB1                      __end_of___fttol 261C  
                              _T2CON 001C                     line_parser@delim 0022  
                              i1l320 001A                                i1l171 2CF0  
                              i1l324 0022                                i1l318 0010  
                    ___awdiv@counter 002C                                _RCREG 0199  
                       ?_line_parser 0020                                _TRISA 008C  
                              _TRISB 008D                                _TRISC 008E  
                              _TRISD 008F                                _TRISE 0090  
                 __end_ofsin@coeff_a 20C6                   __end_ofsin@coeff_b 20D2  
                ___lmul@multiplicand 0024                      __end_of_heading 1000  
                       ___lltoft@exp 002D                      __end_of_rad2deg 2E2D  
                       distance@lat1 0120                         distance@lat2 0126  
                       distance@dist 0142                         distance@lon1 0123  
                       distance@lon2 0129                     __end_of_TMR0_ISR 2C14  
                       distance@unit 012C                                _atan2 13CC  
                    __end_of_dpowers 2028                                acos@x 00D1  
                              fabs@d 0029                                _floor 2510  
                  ??_delay_ISR_ticks 0022                                _frexp 2F1A  
                              _errno 0168                                _scale 0589  
                    __end_of_isdigit 2B6D                                atan@f 00A0  
                              atan@x 00A7                                atan@y 00A4  
            __end_of_serial_puts_RAM 2BCA                        ___ftpack@sign 0024  
                              asin@x 00B9                                asin@y 00CB  
            __end_of_serial_puts_ROM 2BE0                                atof@s 006C  
                              fmod@n 00A6                                fmod@x 00A0  
                              fmod@y 00A3                       get_field@field 0020  
                              _trunc 21DD                      __end_of_isspace 2163  
            __end_of_PWM3_Initialize 2B3E                                sin@x2 00B0  
                              ltemp0 007E                                ltemp1 0082  
                              ltemp2 0086                                ltemp3 0080  
                   ??_service_serial 0072                                ttemp0 007E  
                              ttemp1 0081                                ttemp2 0084  
                              ttemp3 0087                                ttemp4 007F  
                              sqrt@a 00A6                                sqrt@i 00B2  
                              sqrt@q 00B3                                sqrt@x 00B6  
                              sqrt@z 00AF                                status 0003  
                              wtemp0 007E                                wtemp1 0080  
                              wtemp2 0082                                wtemp3 0084  
                              wtemp4 0086                                wtemp5 0088  
                              wtemp6 007F                      __end_of_sprintf 0589  
                    _TMR2_StartTimer 1800                     LCD_puts_RAM@line 002A  
                      ?_LCD_puts_RAM 0028                        ?_LCD_puts_ROM 0028  
                   serial_puts_RAM@P 0022                  __size_of_LCD_config 0034  
                   serial_puts_ROM@P 0022                      ?_SPI_Initialize 0070  
                __size_of_LCD_w_data 000E                  __size_of_LCD_w_byte 0076  
                    __initialization 0029                         __end_of_acos 21DD  
                       __end_of_fabs 2D95                     LCD_puts_ROM@line 002A  
                       __end_of_atan 0979                         __end_of_asin 2000  
                       __end_of_atof 2B8D                         __end_of_fmod 26A3  
                       __end_of_main 1800                         __end_of_sqrt 1C1C  
                        LCD_w_data@C 0025                       ??_EUSART_Write 0020  
            __end_of_TMR2_Initialize 2B50                       __CFG_LPBOR$OFF 0000  
        ?_INTERRUPT_InterruptManager 0070                          LCD_w_byte@C 0024  
                             ??_acos 0070                               ??_fabs 002C  
                             ??_atan 00A3                               ??_asin 0070  
                             ??_atof 006F                               ??_fmod 006E  
                             ??_main 00DB                        ___fttol@sign1 0057  
                             ??_sqrt 00A9                 __size_of__tdiv_to_l_ 00B6  
                  __end_of_LCD_w_cmd 2BB4                    __end_of_LCD_pulse 2C2E  
                             ?_atan2 00BA                               _ADCON0 009D  
                             _ADCON1 009E                               _ADCON2 009F  
                             ?_floor 0066                               ?_frexp 0020  
                   __end_of___altoft 21A0                     ___llmod@dividend 0024  
                             ?_scale 0046                               _ADRESH 009C  
                             _ADRESL 009B                               _CCPR1H 0292  
                             _CCPR2H 0299                               _CCPR3H 0312  
                             _CCPR1L 0291                               _CCPR2L 0298  
                             _CCPR3L 0311             __end_of_serial_is_string 2E83  
                   ___awdiv@dividend 0029                               _ANSELA 018C  
                             _ANSELB 018D                               _ANSELC 018E  
                             _ANSELD 018F                               _ANSELE 0190  
                   __end_of___ftpack 241E                               ?_trunc 0065  
                             _RC1REG 0199                               _RC1STA 019D  
                   __end_of___lltoft 2E57                     ?_PWM1_Initialize 0070  
                             i1l5016 2C11                               i1l4420 2D4D  
                             i1l4078 2BEC                               i1l3916 2C66  
                             i1l4998 2C4E                               _FVRCON 0117  
                             _OSCCON 0099                               u492_20 2D4B  
                             _TX1REG 019A                               _TX1STA 019E  
                             _SSPBUF 0211                       ??_LCD_puts_RAM 002C  
                     ??_LCD_puts_ROM 002C                     __end_of_delay_ms 2DB9  
                     __CFG_PWRTE$OFF 0000                     __end_of__powers_ 2076  
                       ?_serial_gets 0020                     __end_of_distance 13CC  
                             ___bmul 2B8D                        distance@theta 012D  
                             ___ftge 2FC4                               ___lmul 07CF  
                             ___wmul 2CB9                            ??___awdiv 002B  
                          ??___ftadd 005F                       __CFG_STVREN$ON 0000  
                          ??___awmod 0024                            ??___ftdiv 004C  
                          ??___ftneg 0023                            ??_deg2rad 0059  
                          ??___lldiv 0028                            ??___ftmul 003C  
                          ??___llmod 0028                            ??___ftsub 006F  
                          ??___fttol 0053                               _ms_ISR 2D30  
                _EUSART_Transmit_ISR 2CD5                               atan2@v 00CC  
                             atan2@x 00BD                               atan2@y 00BA  
                   ?_TMR0_Initialize 0070                     ?_PWM2_Initialize 0070  
                             _fround 105F                     ___awdiv@quotient 002E  
                    ___awmod@divisor 0020                            ??_heading 0070  
                    ___awmod@counter 0025                            ??_rad2deg 0059  
                             _strtod 0979                               floor@i 006A  
                             floor@x 0066                ___ftmul@f3_as_product 0041  
                       __pdataCOMMON 007B                            ??_isdigit 0020  
                             sin@sgn 00B3                            ??_isspace 0020  
              __end_of_TMR0_CallBack 0004                               sqrt@og 00AC  
            __end_of_TMR2_StartTimer 1803                            ??_sprintf 00B0  
                             trunc@i 0069                               trunc@x 0065  
                   ?_serial_puts_RAM 0022                 ?_EUSART_Transmit_ISR 0070  
                   ?_serial_puts_ROM 0022                     ?_PWM3_Initialize 0070  
               __size_of_EUSART_Read 001C                    _SYSTEM_Initialize 2D51  
            __end_of__initialization 0055                           ___altoft@c 005D  
                         ___ftadd@f1 0059                           ___ftadd@f2 005C  
                         ___ftge@ff1 0020                           ___ftge@ff2 0023  
                 ?_SYSTEM_Initialize 0070                         eval_poly@res 006D  
                         ___ftdiv@f1 0049                           ___ftdiv@f2 0046  
                         ___ftdiv@f3 0051                           ___ftneg@f1 0020  
                ___bmul@multiplicand 0020                           ___ftmul@f1 0036  
                         ___ftmul@f2 0039                           ___ftsub@f1 00A3  
                         ___ftsub@f2 00A0                           ___fttol@f1 004F  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 0021  
                          ?_TMR0_ISR 0070                        __end_of_atan2 15D3  
                         ___lltoft@c 0028                        __end_of_floor 2595  
                      __end_of_frexp 2F50                        __end_of_scale 07CF  
                      __end_of_trunc 221E                     ?_TMR2_Initialize 0070  
                    _line_terminator 007B                         ??_LCD_config 0028  
                         __div_to_l_ 19B8                           _atan2$1920 00C0  
                         _atan2$1921 00C3                           _atan2$1922 00C9  
                         _atan2$1923 00C6                         ??_LCD_w_data 0025  
                     _OPTION_REGbits 0095                TMR0_ISR@CountCallBack 00DC  
                       ??_LCD_w_byte 0022                   __size_of_get_field 003A  
               __size_of_line_parser 0060                              ??_atan2 0070  
                    __div_to_l_@exp1 0033                              ??_floor 0069  
                    __div_to_l_@cntr 0032                              ??_frexp 0024  
                            ??_scale 0049            __end_of_SYSTEM_Initialize 2D72  
              ??_EUSART_Transmit_ISR 0070                      __div_to_l_@quot 002E  
                         deg2rad@deg 0056                              ??_trunc 0068  
                         __pbssBANK1 00DC                           __pbssBANK2 0168  
                         __pbssBANK3 01A0                   __size_of_eval_poly 0060  
               __end_of_EUSART_Write 2DDF          __size_of_EUSART_Receive_ISR 001C  
                       _heading$1900 0123                         _heading$1901 0126  
                       _heading$1902 0129                         _heading$1903 012C  
                       _heading$1904 012F                         _heading$1905 0132  
                       _heading$1906 0135                         _heading$1907 0138  
                       _heading$1908 013B                         _heading$1909 013E  
                       _heading$1897 0141                         _heading$1898 0144  
                       _heading$1899 0147                        __div_to_l_@f1 0020  
                      __div_to_l_@f2 0023                   __end_of_LCD_config 2EE5  
                   ??_FVR_Initialize 0020                           __pmaintext 15D3  
                 __end_of_LCD_w_data 2B5E                   __end_of_LCD_w_byte 2494  
                            ?___bmul 0020                              ?___ftge 0020  
                            ?___lmul 0020                              ?___wmul 0030  
                         ??_TMR0_ISR 0075                           __pintentry 0004  
                            _CCP1CON 0293                              ?_ms_ISR 0070  
                            _CCP2CON 029A                              _CCP3CON 0313  
                          ?___altoft 005D                              ?_fround 0046  
                     ___lmul@product 0028                            ?___ftpack 0020  
                            _APFCON1 011D                              _APFCON2 011C  
                    _delay_ISR_ticks 2CF2                            ?___lltoft 0028  
            __size_of_ADC_Initialize 0009                              ?_strtod 0065  
               __end_of_LCD_puts_RAM 2C9D                        _eusartRxCount 0078  
               __end_of_LCD_puts_ROM 2CB9                              _SP1BRGH 019C  
                            _SP1BRGL 019B                            ?_delay_ms 0023  
                            _OSCSTAT 009A                              _OSCTUNE 0098  
                            _SSP1ADD 0212                     ?_TMR2_StartTimer 0070  
                          ?_distance 0120                           _nb_mailbox 00E0  
                   ??_SPI_Initialize 0020                __end_of_service_delay 2BFA  
                  __end_of__npowers_ 204F                           _scale$1912 004B  
                  __end_of_get_field 2F8A                      __size_of___bmul 0012  
                    __size_of___ftge 003C                              ___awdiv 22A7  
                    __size_of___lmul 0030                              ___ftadd 18C2  
                            ___awmod 2261                              ___ftdiv 26A3  
                            ___ftneg 1803                              _deg2rad 2DDF  
                            ___lldiv 100C                      __size_of___wmul 001C  
                            ___ftmul 274C                              ___llmod 221E  
                            ___ftsub 2E83                              ___fttol 2595  
               __size_of_serial_gets 003A                           ??___altoft 0061  
                    __size_of_ms_ISR 0021                           ??___ftpack 0025  
                  __end_of_eval_poly 2359                      __size_of_fround 0166  
                            _heading 0CA1                           ??___lltoft 002C  
                            __ptext1 0059                              __ptext2 0589  
                            __ptext3 105F                              __ptext4 2261  
                            __ptext5 22A7                              __ptext6 180C  
                            __ptext7 19B8                              __ptext8 2E2D  
                            __ptext9 221E                              _rad2deg 2E06  
                            _nb_flag 00E7                              _mailbox 00DE  
                  __end_of_hexpowers 2096                          ?__div_to_l_ 0020  
                    __size_of_strtod 0328                              _dpowers 2000  
              _OSCILLATOR_Initialize 2B1D                            _T2CONbits 001C  
                       __size_of_cos 007C                              _isdigit 2B5E  
                    atan@val_squared 00AB                         __size_of_sin 01E5  
                   ___awmod@dividend 0022             ??_PIN_MANAGER_Initialize 0020  
                            _isspace 2150                              atan@val 00AE  
                         ??_delay_ms 0025                              asin@sgn 00BC  
         __size_of_SYSTEM_Initialize 0021                              _sprintf 0059  
                            clrloop0 1001                           ??_distance 0070  
                       line_parser@i 0027                 end_of_initialization 0055  
                  ?_serial_is_string 0070                            _LCD_w_cmd 2B9F  
               line_parser@field_ctr 0026                            _LCD_pulse 2C14  
                 ??_serial_is_string 0020                    _EUSART_Initialize 2C2E  
                    ___lldiv@divisor 0020                      ___lldiv@counter 002D  
                 ?_EUSART_Initialize 0070              __end_of_delay_ISR_ticks 2D10  
                       __pstringtext 2000                       __tdiv_to_l_@f1 0020  
                     __tdiv_to_l_@f2 0023                        ??__tdiv_to_l_ 0026  
                ??_EUSART_Initialize 0020                              strtod@s 0065  
                          _PORTBbits 000D                            _PORTCbits 000E  
                          _PORTDbits 000F                           rad2deg@rad 0056  
                 LCD_puts_RAM@offset 002B                     __CFG_FOSC$INTOSC 0000  
                          _TRISBbits 008D                            _TRISCbits 008E  
                          _TRISDbits 008F                __size_of_EUSART_Write 0026  
                         get_field@N 0022                           get_field@i 0025  
                         ?_LCD_w_cmd 0070                           ?_LCD_pulse 0070  
          __end_of_EUSART_Initialize 2C49                          ___ftdiv@exp 0054  
                __size_of__div_to_l_ 011D             __size_of_PWM1_Initialize 0007  
                        ___ftmul@exp 0040              __size_of_service_serial 0020  
                     __end_of___bmul 2B9F                __size_of_LCD_puts_RAM 001C  
                     __end_of___ftge 3000                __size_of_LCD_puts_ROM 001C  
                     __end_of___lmul 07FF                       __end_of___wmul 2CD5  
                    line_parser@line 0020                        __pidataCOMMON 07FF  
                 LCD_puts_ROM@offset 002B                         _EUSART_Write 2DB9  
                  __size_of_TMR0_ISR 001A                       _ADC_Initialize 2B3E  
                     __end_of_ms_ISR 2D51               ?_OSCILLATOR_Initialize 0070  
                     __end_of_fround 11C5                           floor@expon 006D  
                   delay_ISR_ticks@X 0020                       __end_of_strtod 0CA1  
                start_initialization 0029                           eval_poly@d 0069  
                         eval_poly@n 006B                           eval_poly@x 0066  
           __size_of_PWM2_Initialize 0007             __size_of_TMR0_Initialize 0010  
    __size_of_PIN_MANAGER_Initialize 0035                  __end_of__tdiv_to_l_ 18C2  
                        __end_of_cos 2510                          __end_of_sin 1E01  
                      ??_EUSART_Read 0070                           LCD_w_cmd@C 0027  
                         LCD_pulse@i 0021                           frexp@value 0020  
                    ___llmod@divisor 0020                      ___llmod@counter 0029  
                       _LCD_puts_RAM 2C81                         _LCD_puts_ROM 2C9D  
           __size_of_serial_puts_RAM 0016             __size_of_serial_puts_ROM 0016  
           __size_of_PWM3_Initialize 0007                     ?_delay_ISR_ticks 0020  
                           ??___bmul 0021                             ??___ftge 0026  
                           ??___lmul 0028                             ??___wmul 0034  
             __size_of_TMR0_CallBack 0001               __end_of_ADC_Initialize 2B47  
                           ??_ms_ISR 0075                             ??_fround 0049  
                      sprintf@tmpval 00C5                             ??_strtod 0068  
                  __size_of___altoft 003D                           fround@prec 0053  
                      ??_line_parser 0023                    __size_of___ftpack 0065  
                        __pbssBIGRAM 26A8          __end_of_EUSART_Transmit_ISR 2CF2  
                          _acos$1914 00D4                    __size_of___lltoft 002A  
                        __pbssCOMMON 0076                            ___latbits 0003  
                      __pcstackBANK0 0020                        __pcstackBANK1 00A0  
                      __pcstackBANK2 0120             __size_of_TMR2_Initialize 0009  
                       _isdigit$1494 0020                        LCD_puts_RAM@P 0028  
                      LCD_puts_ROM@P 0028                    __size_of_delay_ms 0024  
                        ??_LCD_w_cmd 0027               serial_is_string@result 0022  
         __end_of_EUSART_Receive_ISR 2C65                          ??_LCD_pulse 0020  
         __size_of_EUSART_Initialize 001B                            _asin$1915 00C5  
                          _asin$1916 00BF                            _asin$1917 00CE  
                          _asin$1918 00C8                            _asin$1919 00C2  
                        sprintf@flag 00BB                    __size_of_distance 0207  
                        sprintf@fval 00C9                           sin@coeff_a 20B7  
                         sin@coeff_b 20C6                          sprintf@prec 00BD  
                __end_of_EUSART_Read 2C81                            __pnvBANK1 00E8  
             _PIN_MANAGER_Initialize 2EE5                 EUSART_Read@readValue 0071  
                           ?___awdiv 0027                             ?___ftadd 0059  
                           ?___awmod 0020                             ?___ftdiv 0046  
                           ?___ftneg 0020                             ?_deg2rad 0056  
                           ?___lldiv 0020                             ?___ftmul 0036  
                           ?___llmod 0020                             ?___ftsub 00A0  
                          __npowers_ 2028                             ?___fttol 004F  
                    ?_ADC_Initialize 0070                         _eusartRxHead 00E4  
                       _eusartTxHead 0079                         _eusartRxTail 00E5  
                       _eusartTxTail 00E6                            _get_field 2F50  
                  ??_PWM1_Initialize 0020         ??_INTERRUPT_InterruptManager 0075  
                           ?_heading 00CF                          __tdiv_to_l_ 180C  
                           ?_rad2deg 0056                ms_ISR@LED_PIN_counter 00E2  
            _eusartTxBufferRemaining 00E8                         ??__div_to_l_ 0026  
                           _BAUD1CON 019F                             ?_isdigit 0070  
                          _eval_poly 22F9                             ?_isspace 0070  
                          _hexpowers 2076                       __size_of_atan2 0207  
                           ?_sprintf 00A6                       __size_of_floor 0085  
                     __size_of_frexp 0036                        _TMR0_CallBack 0003  
                     __size_of_scale 0246                  __end_of_line_parser 23B9  
                     __size_of_trunc 0041                       _eusartRxBuffer 01BE  
                  ??_TMR0_Initialize 0020                    ??_PWM2_Initialize 0020  
                     _eusartTxBuffer 01C6                       ___wmul@product 0034  
                          delay_ms@X 0023                            delay_ms@i 0025  
                          clear_ram0 1000                            atan@recip 00AA  
                           _PIE1bits 0091             __size_of_TMR2_StartTimer 0003  
                      _circ_buf_head 0076  __size_of_INTERRUPT_InterruptManager 0023  
                      _circ_buf_tail 0077                             _PIR1bits 0011  
                      ??_serial_gets 0022                   __end_of__div_to_l_ 1AD5  
                     _service_serial 2D10                             _SSP1CON1 0215  
                           _TMR0_ISR 2BFA            __size_of_serial_is_string 002C  
                        strtod@flags 00AF                             _SSP1STAT 0214  
                        strtod@expon 00B0                           ?_get_field 0020  
                  ??_serial_puts_RAM 0024                    ??_serial_puts_ROM 0024  
                  ??_PWM3_Initialize 0020                           _ADCON0bits 009D  
                  ___wmul@multiplier 0030              __size_of_FVR_Initialize 0004  
                         ?_eval_poly 0066               __size_of_service_delay 001A  
                       _isspace$1497 0020                  __end_ofatan@coeff_a 20A8  
                __end_ofatan@coeff_b 20B7                       ?_TMR0_CallBack 0070  
                        _EUSART_Read 2C65                    ___lmul@multiplier 0020  
                  ??_TMR2_Initialize 0020                            frexp@eptr 0023  
             __end_of_service_serial 2D30                        _field_offsets 01A0  
            __size_of_SPI_Initialize 0006              ??_OSCILLATOR_Initialize 0020  
                   __size_of___awdiv 0052                     __size_of___ftadd 00F6  
                   __size_of___awmod 0046                     __size_of___ftdiv 00A9  
                   __size_of___ftneg 0009                     __size_of_deg2rad 0027  
                   __size_of___lldiv 0053                             ___altoft 2163  
                   __size_of___ftmul 00B4                     __size_of___llmod 0043  
                   __size_of___ftsub 002E                     __size_of___fttol 0087  
                           _cos$1924 00B7                             ___ftpack 23B9  
                __end_of_serial_gets 2FC4                          _fround$1910 0050  
                        _fround$1911 004D                             ___lltoft 2E2D  
                   __size_of_heading 035F                         heading@angle 0120  
                   __size_of_rad2deg 0027                           sprintf@idx 00B9  
                         sprintf@exp 00C3                           sprintf@val 00BF  
                        _line_parser 2359                     __size_of_isdigit 000F  
                           _delay_ms 2D95                             _circ_buf 270C  
                   __size_of_isspace 0013                             __ptext10 100C  
                           __ptext11 2BCA                             __ptext20 13CC  
                           __ptext12 2BB4                             __ptext21 2F50  
                           __ptext13 2DB9                             __ptext30 21A0  
                           __ptext22 11C5                             __ptext14 2E57  
                           __ptext31 1E01                             __ptext23 2E06  
                           __ptext15 2F8A                             __ptext40 0979  
                           __ptext32 1AD5                             __ptext24 2DDF  
                           __ptext16 2359                             __ptext41 2150  
                           __ptext33 2E83                             __ptext25 2494  
                           __ptext17 0CA1                             __ptext50 23B9  
                           __ptext42 2B5E                             __ptext34 0802  
                           __ptext26 1C1C                             __ptext18 261C  
                           __ptext51 2D51                             __ptext43 07CF  
                           __ptext35 2D72                             __ptext27 2510  
                           __ptext19 21DD                             __ptext60 2B1D  
                           __ptext52 2B47                             __ptext44 1803  
                           __ptext36 22F9                             __ptext28 2F1A  
                           __ptext61 2B19                             __ptext53 1800  
                           __ptext45 274C                             __ptext37 2CB9  
                           __ptext29 2595                             __ptext70 2CF2  
                           __ptext62 2C2E                             __ptext54 2B6D  
                           __ptext46 2FC4                             __ptext38 18C2  
                           __ptext71 241E                             __ptext63 2B3E  
                           __ptext55 2B23                             __ptext47 26A3  
                           __ptext39 2B7D                             __ptext80 2CD5  
                           __ptext72 2C14                             __ptext64 2C9D  
                           __ptext56 2B37                             __ptext48 2B8D  
                           __ptext81 2C49                             __ptext65 2C81  
                           __ptext57 2B30                             __ptext49 2163  
                           __ptext74 2BFA                             __ptext66 2B50  
                           __ptext58 2B29                             __ptext75 2D30  
                           __ptext67 2EB1                             __ptext59 2EE5  
                           __ptext76 2D10                             __ptext68 2B9F  
                           __ptext77 2C65                             __ptext69 2D95  
                           __ptext78 2BE0                             __ptext79 0003  
                           _sin$1925 00AD                         _SSP1CON1bits 0215  
                           __powers_ 204F                             _distance 11C5  
                   __size_of_sprintf 0530                           trunc@expon 006C  
                      __size_of_acos 003D                        __size_of_fabs 0023  
                           _line_buf 278C                        __size_of_atan 0177  
                      __size_of_asin 01FF                        __size_of_atof 0010  
                      __size_of_fmod 0087                        __size_of_main 022D  
                      __size_of_sqrt 0147                  serial_gets@num_char 0023  
                    ?_service_serial 0070                             heading@a 014A  
                           heading@b 014D                             heading@c 0153  
                           heading@d 0150                        _service_delay 2BE0  
                         _RC1STAbits 019D                           strtod@eexp 00AE  
                       serial_gets@P 0020                             int$flags 007E  
                  ??_TMR2_StartTimer 0020   __end_of_INTERRUPT_InterruptManager 0027  
         _INTERRUPT_InterruptManager 0004                             main@head 0159  
                           main@lat1 015C                             main@lat2 0162  
                           main@dist 0156                         _SSP1STATbits 0214  
                        ??_get_field 0023                             main@lon1 015F  
                           main@lon2 0165                          atan@coeff_a 2096  
                        atan@coeff_b 20A8                           _LCD_config 2EB1  
                         _LCD_w_data 2B50                           _INTCONbits 000B  
                        ??_eval_poly 006D                           _LCD_w_byte 241E  
                    ??_TMR0_CallBack 0070                           _FVRCONbits 0117  
                           isdigit@c 0021                             scale@scl 004E  
                        heading@lat1 00CF                          heading@lat2 00D5  
                           intlevel1 0000                          heading@lon1 00D2  
                        heading@lon2 00D8                            sprintf@ap 00BA  
                   __tdiv_to_l_@exp1 002F                     __tdiv_to_l_@cntr 002E  
                          sprintf@sp 00A6                     __tdiv_to_l_@quot 002A  
                           isspace@c 0021                     ___lldiv@dividend 0024  
            ?_PIN_MANAGER_Initialize 0070                    __CFG_CLKOUTEN$OFF 0000  
                     ?_service_delay 0070                      _PWM1_Initialize 2B29  
                   ??_ADC_Initialize 0020                          _serial_gets 2F8A  
                          strtod@res 0067                     _serial_is_string 2E57  
                 _EUSART_Receive_ISR 2C49                        _distance$1891 0130  
                      _distance$1892 0133                        _distance$1893 0136  
                      _distance$1894 0139                        _distance$1895 013C  
                      _distance$1896 013F                         ?__tdiv_to_l_ 0020  
                     _FVR_Initialize 2B19             __size_of_delay_ISR_ticks 001E  
                         _OPTION_REG 0095                             sprintf@c 00CC  
                           sprintf@f 00A8                  ?_EUSART_Receive_ISR 0070  
                   ___lldiv@quotient 0029                      _TMR0_Initialize 2B6D  
                    _PWM2_Initialize 2B30                             strtod@_u 00B1  
                 EUSART_Write@txData 0021         __size_of_EUSART_Transmit_ISR 001D  
     __end_of_PIN_MANAGER_Initialize 2F1A                 ??_EUSART_Receive_ISR 0070  
                    _serial_puts_RAM 2BB4                      _serial_puts_ROM 2BCA  
                    _PWM3_Initialize 2B37  
