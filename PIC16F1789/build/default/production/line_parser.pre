
# 1 "line_parser.c"

# 13 "/opt/microchip/xc8/v1.35/include/stdint.h"
typedef signed char int8_t;

# 20
typedef signed int int16_t;

# 28
typedef signed short long int int24_t;

# 36
typedef signed long int int32_t;

# 43
typedef unsigned char uint8_t;

# 49
typedef unsigned int uint16_t;

# 56
typedef unsigned short long int uint24_t;

# 63
typedef unsigned long int uint32_t;

# 71
typedef signed char int_least8_t;

# 78
typedef signed int int_least16_t;

# 90
typedef signed short long int int_least24_t;

# 98
typedef signed long int int_least32_t;

# 105
typedef unsigned char uint_least8_t;

# 111
typedef unsigned int uint_least16_t;

# 121
typedef unsigned short long int uint_least24_t;

# 128
typedef unsigned long int uint_least32_t;

# 137
typedef signed char int_fast8_t;

# 144
typedef signed int int_fast16_t;

# 156
typedef signed short long int int_fast24_t;

# 164
typedef signed long int int_fast32_t;

# 171
typedef unsigned char uint_fast8_t;

# 177
typedef unsigned int uint_fast16_t;

# 187
typedef unsigned short long int uint_fast24_t;

# 194
typedef unsigned long int uint_fast32_t;

# 200
typedef int32_t intmax_t;




typedef uint32_t uintmax_t;




typedef int16_t intptr_t;




typedef uint16_t uintptr_t;

# 6 "line_parser.h"
uint8_t line_parser(char *line, char delim);
uint8_t get_field(char *field, uint8_t N);
uint8_t is_line_field_num(uint8_t N);

# 13 "line_parser.c"
static char line_buf[100];
static char field_offsets[30];

# 74
uint8_t line_parser(char *line, char delim){

uint8_t i = 0;
uint8_t field_ctr = 1;

field_offsets[0] = 0;

if(*line == 0x00){
line_buf[0] = 0x00;
return 0;
}

while(i < 100 - 1){
if(*line == delim){
line_buf[i] = 0x00;
field_offsets[field_ctr] = i + 1;
field_ctr++;
}
else{
line_buf[i] = *line;
}
line++;
i++;
if(*line == 0x00)
break;
}

line_buf[i] = 0x00;
return field_ctr;

}



uint8_t get_field(char *field, uint8_t N){

uint8_t i = field_offsets[N - 1];
uint8_t cnt = 0;

while(i < 100 - 1){
*field = line_buf[i];
if (line_buf[i] == 0x00){
break;
}
cnt++;
field++;
i++;
}
*field = 0x00;
return cnt;
}

# 130
uint8_t is_line_field_num(uint8_t N){

uint8_t result = 0x01;

# 142
return result;
}

